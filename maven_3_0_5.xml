<?xml version="1.0" encoding="UTF-8"?>
<system>
	<pattern name="Factory Method">
		<instance>
			<role name="Creator" element="org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="FactoryMethod()" element="org.apache.maven.artifact.handler.manager.ArtifactHandlerManager::getArtifactHandler(java.lang.String):org.apache.maven.artifact.handler.ArtifactHandler" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.artifact.metadata.ArtifactMetadataSource" />
			<role name="FactoryMethod()" element="org.apache.maven.artifact.metadata.ArtifactMetadataSource::retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest):org.apache.maven.artifact.metadata.ResolutionGroup" />
			<role name="FactoryMethod()" element="org.apache.maven.artifact.metadata.ArtifactMetadataSource::retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.artifact.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.ArtifactFilterManager" />
			<role name="FactoryMethod()" element="org.apache.maven.ArtifactFilterManager::getArtifactFilter():org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="FactoryMethod()" element="org.apache.maven.ArtifactFilterManager::getCoreArtifactFilter():org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.execution.MavenExecutionRequest" />
			<role name="FactoryMethod()" element="org.apache.maven.execution.MavenExecutionRequest::getProjectBuildingRequest():org.apache.maven.project.ProjectBuildingRequest" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.Maven" />
			<role name="FactoryMethod()" element="org.apache.maven.Maven::execute(org.apache.maven.execution.MavenExecutionRequest):org.apache.maven.execution.MavenExecutionResult" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.model.resolution.ModelResolver" />
			<role name="FactoryMethod()" element="org.apache.maven.model.resolution.ModelResolver::newCopy():org.apache.maven.model.resolution.ModelResolver" />
			<role name="FactoryMethod()" element="org.apache.maven.model.resolution.ModelResolver::resolveModel(java.lang.String, java.lang.String, java.lang.String):org.apache.maven.model.building.ModelSource" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.plugin.Mojo" />
			<role name="FactoryMethod()" element="org.apache.maven.plugin.Mojo::getLog():org.apache.maven.plugin.logging.Log" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.plugin.PluginArtifactsCache" />
			<role name="FactoryMethod()" element="org.apache.maven.plugin.PluginArtifactsCache::createKey(org.apache.maven.model.Plugin, org.sonatype.aether.graph.DependencyFilter, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.PluginArtifactsCache$Key" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.plugin.PluginDescriptorCache" />
			<role name="FactoryMethod()" element="org.apache.maven.plugin.PluginDescriptorCache::createKey(org.apache.maven.model.Plugin, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.PluginDescriptorCache$Key" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.plugin.PluginRealmCache" />
			<role name="FactoryMethod()" element="org.apache.maven.plugin.PluginRealmCache::createKey(org.apache.maven.model.Plugin, java.lang.ClassLoader, java.util.Map, org.sonatype.aether.graph.DependencyFilter, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.PluginRealmCache$Key" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.plugin.prefix.PluginPrefixResolver" />
			<role name="FactoryMethod()" element="org.apache.maven.plugin.prefix.PluginPrefixResolver::resolve(org.apache.maven.plugin.prefix.PluginPrefixRequest):org.apache.maven.plugin.prefix.PluginPrefixResult" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="FactoryMethod()" element="org.apache.maven.plugin.version.PluginVersionResolver::resolve(org.apache.maven.plugin.version.PluginVersionRequest):org.apache.maven.plugin.version.PluginVersionResult" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.project.artifact.MavenMetadataCache" />
			<role name="FactoryMethod()" element="org.apache.maven.project.artifact.MavenMetadataCache::get(org.apache.maven.artifact.Artifact, boolean, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.artifact.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.project.ProjectDependenciesResolver" />
			<role name="FactoryMethod()" element="org.apache.maven.project.ProjectDependenciesResolver::resolve(org.apache.maven.project.DependencyResolutionRequest):org.apache.maven.project.DependencyResolutionResult" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.repository.legacy.metadata.ArtifactMetadataSource" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.legacy.metadata.ArtifactMetadataSource::retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.repository.legacy.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory::createArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.repository.RepositorySystem" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.RepositorySystem::buildArtifactRepository(org.apache.maven.model.Repository):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.RepositorySystem::createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.RepositorySystem::createArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.RepositorySystem::createArtifactWithClassifier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.RepositorySystem::createDefaultRemoteRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.RepositorySystem::createDependencyArtifact(org.apache.maven.model.Dependency):org.apache.maven.artifact.Artifact" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.RepositorySystem::createLocalRepository(java.io.File):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="FactoryMethod()" element="org.apache.maven.repository.RepositorySystem::createPluginArtifact(org.apache.maven.model.Plugin):org.apache.maven.artifact.Artifact" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.settings.building.SettingsBuilder" />
			<role name="FactoryMethod()" element="org.apache.maven.settings.building.SettingsBuilder::build(org.apache.maven.settings.building.SettingsBuildingRequest):org.apache.maven.settings.building.SettingsBuildingResult" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="FactoryMethod()" element="org.apache.maven.settings.crypto.SettingsDecrypter::decrypt(org.apache.maven.settings.crypto.SettingsDecryptionRequest):org.apache.maven.settings.crypto.SettingsDecryptionResult" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.maven.toolchain.ToolchainFactory" />
			<role name="FactoryMethod()" element="org.apache.maven.toolchain.ToolchainFactory::createToolchain(org.apache.maven.toolchain.model.ToolchainModel):org.apache.maven.toolchain.ToolchainPrivate" />
		</instance>
	</pattern>
	<pattern name="Prototype" />
	<pattern name="Singleton">
		<instance>
			<role name="Singleton" element="org.apache.maven.artifact.versioning.ComparableVersion$IntegerItem" />
			<role name="uniqueInstance" element="org.apache.maven.artifact.versioning.ComparableVersion$IntegerItem::ZERO:org.apache.maven.artifact.versioning.ComparableVersion$IntegerItem" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.maven.artifact.versioning.Restriction" />
			<role name="uniqueInstance" element="org.apache.maven.artifact.versioning.Restriction::EVERYTHING:org.apache.maven.artifact.versioning.Restriction" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.maven.model.building.ModelBuildingEventCatapult" />
			<role name="uniqueInstance" element="org.apache.maven.model.building.ModelBuildingEventCatapult::BUILD_EXTENSIONS_ASSEMBLED:org.apache.maven.model.building.ModelBuildingEventCatapult" />
		</instance>
	</pattern>
	<pattern name="(Object)Adapter">
		<instance>
			<role name="Adapter" element="org.apache.maven.project.artifact.ActiveProjectArtifact" />
			<role name="Adaptee" element="org.apache.maven.project.MavenProject" />
			<role name="adaptee" element="org.apache.maven.project.artifact.ActiveProjectArtifact::project:org.apache.maven.project.MavenProject" />
			<role name="Request()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getFile():java.io.File" />
			<role name="Request()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setFile(java.io.File):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.maven.project.artifact.ProjectArtifact" />
			<role name="Adaptee" element="org.apache.maven.project.MavenProject" />
			<role name="adaptee" element="org.apache.maven.project.artifact.ProjectArtifact::project:org.apache.maven.project.MavenProject" />
			<role name="Request()" element="org.apache.maven.project.artifact.ProjectArtifact::getDependencies():java.util.List" />
			<role name="Request()" element="org.apache.maven.project.artifact.ProjectArtifact::getManagedDependencies():java.util.List" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.maven.artifact.DefaultArtifact" />
			<role name="Adaptee" element="org.apache.maven.artifact.versioning.VersionRange" />
			<role name="adaptee" element="org.apache.maven.artifact.DefaultArtifact::versionRange:org.apache.maven.artifact.versioning.VersionRange" />
			<role name="Request()" element="org.apache.maven.artifact.DefaultArtifact::getSelectedVersion():org.apache.maven.artifact.versioning.ArtifactVersion" />
			<role name="Request()" element="org.apache.maven.artifact.DefaultArtifact::isSelectedVersionKnown():boolean" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator" />
			<role name="Adaptee" element="org.apache.maven.lifecycle.DefaultSchedules" />
			<role name="adaptee" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::defaultSchedules:org.apache.maven.lifecycle.DefaultSchedules" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::calculateExecutionPlan(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, java.util.List, boolean):org.apache.maven.lifecycle.MavenExecutionPlan" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator" />
			<role name="Adaptee" element="org.apache.maven.lifecycle.internal.LifecyclePluginResolver" />
			<role name="adaptee" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::lifecyclePluginResolver:org.apache.maven.lifecycle.internal.LifecyclePluginResolver" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::calculateExecutionPlan(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, java.util.List, boolean):org.apache.maven.lifecycle.MavenExecutionPlan" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.ProjectSorter" />
			<role name="Adapter" element="org.apache.maven.DefaultProjectDependencyGraph" />
			<role name="adaptee" element="org.apache.maven.DefaultProjectDependencyGraph::sorter:org.apache.maven.project.ProjectSorter" />
			<role name="Request()" element="org.apache.maven.DefaultProjectDependencyGraph::getSortedProjects():java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.lifecycle.internal.LifecyclePluginResolver" />
			<role name="Adapter" element="org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator" />
			<role name="adaptee" element="org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator::lifecyclePluginResolver:org.apache.maven.lifecycle.internal.LifecyclePluginResolver" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator::calculateTaskSegments(org.apache.maven.execution.MavenSession, java.util.List):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator" />
			<role name="Adapter" element="org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator" />
			<role name="adaptee" element="org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator::mojoDescriptorCreator:org.apache.maven.lifecycle.internal.MojoDescriptorCreator" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator::calculateTaskSegments(org.apache.maven.execution.MavenSession, java.util.List):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.validation.ModelValidationResult" />
			<role name="Adapter" element="org.apache.maven.project.validation.DefaultModelValidator$SimpleModelProblemCollector" />
			<role name="adaptee" element="org.apache.maven.project.validation.DefaultModelValidator$SimpleModelProblemCollector::result:org.apache.maven.project.validation.ModelValidationResult" />
			<role name="Request()" element="org.apache.maven.project.validation.DefaultModelValidator$SimpleModelProblemCollector::add(org.apache.maven.model.building.ModelProblem$Severity, java.lang.String, org.apache.maven.model.InputLocation, java.lang.Exception):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.settings.merge.MavenSettingsMerger" />
			<role name="Adapter" element="org.apache.maven.settings.building.DefaultSettingsBuilder" />
			<role name="adaptee" element="org.apache.maven.settings.building.DefaultSettingsBuilder::settingsMerger:org.apache.maven.settings.merge.MavenSettingsMerger" />
			<role name="Request()" element="org.apache.maven.settings.building.DefaultSettingsBuilder::build(org.apache.maven.settings.building.SettingsBuildingRequest):org.apache.maven.settings.building.SettingsBuildingResult" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.ProjectBuildingRequest" />
			<role name="Adapter" element="org.apache.maven.execution.DefaultMavenExecutionRequest" />
			<role name="adaptee" element="org.apache.maven.execution.DefaultMavenExecutionRequest::projectBuildingRequest:org.apache.maven.project.ProjectBuildingRequest" />
			<role name="Request()" element="org.apache.maven.execution.DefaultMavenExecutionRequest::getProjectBuildingRequest():org.apache.maven.project.ProjectBuildingRequest" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.repository.RepositoryRequest" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::repositoryRequest:org.apache.maven.artifact.repository.RepositoryRequest" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::getLocalRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::getRemoteRepositories():java.util.List" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::isOffline():boolean" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor" />
			<role name="Adaptee" element="org.apache.maven.lifecycle.internal.LifecycleStarter" />
			<role name="adaptee" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::lifecycleStarter:org.apache.maven.lifecycle.internal.LifecycleStarter" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::execute(org.apache.maven.execution.MavenSession):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.ExtensionDescriptorBuilder" />
			<role name="Adapter" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="adaptee" element="org.apache.maven.project.DefaultProjectBuildingHelper::extensionDescriptorBuilder:org.apache.maven.project.ExtensionDescriptorBuilder" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::artifactFactory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createArtifactWithClassifier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createProjectArtifact(java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createDependencyArtifact(org.apache.maven.model.Dependency):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createPluginArtifact(org.apache.maven.model.Plugin):org.apache.maven.artifact.Artifact" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Adapter" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory" />
			<role name="adaptee" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::factory:org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::getLayout(java.lang.String):org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::createDeploymentArtifactRepository(java.lang.String, java.lang.String, java.lang.String, boolean):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::createDeploymentArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, boolean):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::createArtifactRepository(java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::createArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::setGlobalUpdatePolicy(java.lang.String):void" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::setGlobalChecksumPolicy(java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.ReactorModelPool" />
			<role name="Adapter" element="org.apache.maven.project.ProjectModelResolver" />
			<role name="adaptee" element="org.apache.maven.project.ProjectModelResolver::modelPool:org.apache.maven.project.ReactorModelPool" />
			<role name="Request()" element="org.apache.maven.project.ProjectModelResolver::resolveModel(java.lang.String, java.lang.String, java.lang.String):org.apache.maven.model.building.ModelSource" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging" />
			<role name="Adapter" element="org.apache.maven.project.ProjectModelResolver" />
			<role name="adaptee" element="org.apache.maven.project.ProjectModelResolver::repositoryMerging:org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging" />
			<role name="Request()" element="org.apache.maven.project.ProjectModelResolver::addRepository(org.apache.maven.model.Repository):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Adapter" element="org.apache.maven.artifact.repository.DefaultArtifactRepository" />
			<role name="adaptee" element="org.apache.maven.artifact.repository.DefaultArtifactRepository::layout:org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepository::pathOf(org.apache.maven.artifact.Artifact):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepository::pathOfRemoteRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepository::pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Adapter" element="org.apache.maven.artifact.repository.MavenArtifactRepository" />
			<role name="adaptee" element="org.apache.maven.artifact.repository.MavenArtifactRepository::layout:org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Request()" element="org.apache.maven.artifact.repository.MavenArtifactRepository::pathOf(org.apache.maven.artifact.Artifact):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.MavenArtifactRepository::pathOfRemoteRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.MavenArtifactRepository::pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.Artifact" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.metadata.AbstractArtifactMetadata" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.metadata.AbstractArtifactMetadata::artifact:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.AbstractArtifactMetadata::getGroupId():java.lang.String" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.AbstractArtifactMetadata::getArtifactId():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Adapter" element="org.apache.maven.artifact.metadata.TestMetadataSource" />
			<role name="adaptee" element="org.apache.maven.artifact.metadata.TestMetadataSource::factory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.artifact.metadata.TestMetadataSource::retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.artifact.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.MavenPluginManager" />
			<role name="Adapter" element="org.apache.maven.plugin.DefaultBuildPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.DefaultBuildPluginManager::mavenPluginManager:org.apache.maven.plugin.MavenPluginManager" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::loadPlugin(org.apache.maven.model.Plugin, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.descriptor.PluginDescriptor" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::executeMojo(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution):void" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::getPluginRealm(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.descriptor.PluginDescriptor):org.codehaus.plexus.classworlds.realm.ClassRealm" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::getMojoDescriptor(org.apache.maven.model.Plugin, java.lang.String, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.descriptor.MojoDescriptor" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.PluginArtifactsCache" />
			<role name="Adapter" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="adaptee" element="org.apache.maven.project.DefaultProjectBuildingHelper::pluginArtifactsCache:org.apache.maven.plugin.PluginArtifactsCache" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.RepositorySystem" />
			<role name="Adapter" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="adaptee" element="org.apache.maven.project.DefaultProjectBuildingHelper::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createArtifactRepositories(java.util.List, java.util.List, org.apache.maven.project.ProjectBuildingRequest):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.PluginRealmCache" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::pluginRealmCache:org.apache.maven.plugin.PluginRealmCache" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::setupPluginRealm(org.apache.maven.plugin.descriptor.PluginDescriptor, org.apache.maven.execution.MavenSession, java.lang.ClassLoader, java.util.List, org.sonatype.aether.graph.DependencyFilter):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.classrealm.ClassRealmManager" />
			<role name="Adapter" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="adaptee" element="org.apache.maven.project.DefaultProjectBuildingHelper::classRealmManager:org.apache.maven.classrealm.ClassRealmManager" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::selectProjectRealm(org.apache.maven.project.MavenProject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger" />
			<role name="Adapter" element="org.apache.maven.model.profile.DefaultProfileInjector" />
			<role name="adaptee" element="org.apache.maven.model.profile.DefaultProfileInjector::merger:org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger" />
			<role name="Request()" element="org.apache.maven.model.profile.DefaultProfileInjector::injectProfile(org.apache.maven.model.Model, org.apache.maven.model.Profile, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.ExtensionRealmCache" />
			<role name="Adapter" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="adaptee" element="org.apache.maven.project.DefaultProjectBuildingHelper::extensionRealmCache:org.apache.maven.plugin.ExtensionRealmCache" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.PluginDescriptorCache" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::pluginDescriptorCache:org.apache.maven.plugin.PluginDescriptorCache" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::getPluginDescriptor(org.apache.maven.model.Plugin, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.ProjectBuilder" />
			<role name="Adapter" element="org.apache.maven.project.DefaultMavenProjectBuilder" />
			<role name="adaptee" element="org.apache.maven.project.DefaultMavenProjectBuilder::projectBuilder:org.apache.maven.project.ProjectBuilder" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::build(java.io.File, org.apache.maven.project.ProjectBuilderConfiguration):org.apache.maven.project.MavenProject" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::buildStandaloneSuperProject(org.apache.maven.project.ProjectBuilderConfiguration):org.apache.maven.project.MavenProject" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::buildWithDependencies(java.io.File, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.profiles.ProfileManager, org.apache.maven.wagon.events.TransferListener):org.apache.maven.project.MavenProject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.ProjectRealmCache" />
			<role name="Adapter" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="adaptee" element="org.apache.maven.project.DefaultProjectBuildingHelper::projectRealmCache:org.apache.maven.project.ProjectRealmCache" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.legacy.WagonManager" />
			<role name="Adapter" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager" />
			<role name="adaptee" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::wagonManager:org.apache.maven.repository.legacy.WagonManager" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::resolve(org.apache.maven.artifact.repository.metadata.RepositoryMetadata, org.apache.maven.artifact.repository.RepositoryRequest):void" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::deploy(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.legacy.UpdateCheckManager" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.DefaultWagonManager" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.DefaultWagonManager::updateCheckManager:org.apache.maven.repository.legacy.UpdateCheckManager" />
			<role name="Request()" element="org.apache.maven.repository.legacy.DefaultWagonManager::getArtifact(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.wagon.events.TransferListener, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.LegacySupport" />
			<role name="Adapter" element="org.apache.maven.artifact.deployer.DefaultArtifactDeployer" />
			<role name="adaptee" element="org.apache.maven.artifact.deployer.DefaultArtifactDeployer::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.artifact.deployer.DefaultArtifactDeployer::deploy(java.io.File, org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.LegacySupport" />
			<role name="Adapter" element="org.apache.maven.artifact.installer.DefaultArtifactInstaller" />
			<role name="adaptee" element="org.apache.maven.artifact.installer.DefaultArtifactInstaller::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.artifact.installer.DefaultArtifactInstaller::install(java.io.File, org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager" />
			<role name="Adapter" element="org.apache.maven.project.artifact.MavenMetadataSource" />
			<role name="adaptee" element="org.apache.maven.project.artifact.MavenMetadataSource::repositoryMetadataManager:org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::retrieveAvailableVersions(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest):java.util.List" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::retrieveAvailableVersionsFromDeploymentRepository(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.project.artifact.MavenMetadataCache" />
			<role name="Adapter" element="org.apache.maven.project.artifact.MavenMetadataSource" />
			<role name="adaptee" element="org.apache.maven.project.artifact.MavenMetadataSource::cache:org.apache.maven.project.artifact.MavenMetadataCache" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest):org.apache.maven.artifact.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Adapter" element="org.apache.maven.execution.DefaultMavenExecutionRequest" />
			<role name="adaptee" element="org.apache.maven.execution.DefaultMavenExecutionRequest::localRepository:org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.execution.DefaultMavenExecutionRequest::setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.execution.MavenExecutionRequest" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.legacy.UpdateCheckManager" />
			<role name="Adapter" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager" />
			<role name="adaptee" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::updateCheckManager:org.apache.maven.repository.legacy.UpdateCheckManager" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::resolve(org.apache.maven.artifact.repository.metadata.RepositoryMetadata, org.apache.maven.artifact.repository.RepositoryRequest):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator" />
			<role name="Adapter" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor" />
			<role name="adaptee" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::lifecycleExecutionPlanCalculator:org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::calculateExecutionPlan(org.apache.maven.execution.MavenSession, boolean, java.lang.String[]):org.apache.maven.lifecycle.MavenExecutionPlan" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::calculateForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.inheritance.DefaultInheritanceAssembler$InheritanceModelMerger" />
			<role name="Adapter" element="org.apache.maven.model.inheritance.DefaultInheritanceAssembler" />
			<role name="adaptee" element="org.apache.maven.model.inheritance.DefaultInheritanceAssembler::merger:org.apache.maven.model.inheritance.DefaultInheritanceAssembler$InheritanceModelMerger" />
			<role name="Request()" element="org.apache.maven.model.inheritance.DefaultInheritanceAssembler::assembleModelInheritance(org.apache.maven.model.Model, org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.management.DefaultDependencyManagementInjector$ManagementModelMerger" />
			<role name="Adapter" element="org.apache.maven.model.management.DefaultDependencyManagementInjector" />
			<role name="adaptee" element="org.apache.maven.model.management.DefaultDependencyManagementInjector::merger:org.apache.maven.model.management.DefaultDependencyManagementInjector$ManagementModelMerger" />
			<role name="Request()" element="org.apache.maven.model.management.DefaultDependencyManagementInjector::injectManagement(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.management.DefaultPluginManagementInjector$ManagementModelMerger" />
			<role name="Adapter" element="org.apache.maven.model.management.DefaultPluginManagementInjector" />
			<role name="adaptee" element="org.apache.maven.model.management.DefaultPluginManagementInjector::merger:org.apache.maven.model.management.DefaultPluginManagementInjector$ManagementModelMerger" />
			<role name="Request()" element="org.apache.maven.model.management.DefaultPluginManagementInjector::injectManagement(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.normalization.DefaultModelNormalizer$DuplicateMerger" />
			<role name="Adapter" element="org.apache.maven.model.normalization.DefaultModelNormalizer" />
			<role name="adaptee" element="org.apache.maven.model.normalization.DefaultModelNormalizer::merger:org.apache.maven.model.normalization.DefaultModelNormalizer$DuplicateMerger" />
			<role name="Request()" element="org.apache.maven.model.normalization.DefaultModelNormalizer::mergeDuplicates(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector$LifecycleBindingsMerger" />
			<role name="Adapter" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector" />
			<role name="adaptee" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector::merger:org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector$LifecycleBindingsMerger" />
			<role name="Request()" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector::injectLifecycleBindings(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.LegacySupport" />
			<role name="Adapter" element="org.apache.maven.plugin.DefaultBuildPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.DefaultBuildPluginManager::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::executeMojo(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.MavenPluginManager" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultPluginManager::pluginManager:org.apache.maven.plugin.MavenPluginManager" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginComponent(org.apache.maven.model.Plugin, java.lang.String, java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginComponents(org.apache.maven.model.Plugin, java.lang.String):java.util.Map" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::loadPluginFully(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.execution.MavenSession):org.apache.maven.plugin.descriptor.PluginDescriptor" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::verifyPlugin(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.internal.PluginDependenciesResolver" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::pluginDependenciesResolver:org.apache.maven.plugin.internal.PluginDependenciesResolver" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::getPluginDescriptor(org.apache.maven.model.Plugin, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.legacy.WagonManager" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::wagonManager:org.apache.maven.repository.legacy.WagonManager" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::retrieve(org.apache.maven.artifact.repository.ArtifactRepository, java.io.File, java.lang.String, org.apache.maven.repository.ArtifactTransferListener):void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::publish(org.apache.maven.artifact.repository.ArtifactRepository, java.io.File, java.lang.String, org.apache.maven.repository.ArtifactTransferListener):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.ArtifactFilterManager" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver::artifactFilterManager:org.apache.maven.ArtifactFilterManager" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver::resolve(org.apache.maven.model.Plugin, org.sonatype.aether.artifact.Artifact, org.sonatype.aether.graph.DependencyFilter, java.util.List, org.sonatype.aether.RepositorySystemSession):org.sonatype.aether.graph.DependencyNode" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.execution.MavenExecutionRequestPopulator" />
			<role name="Adapter" element="org.apache.maven.DefaultMaven" />
			<role name="adaptee" element="org.apache.maven.DefaultMaven::populator:org.apache.maven.execution.MavenExecutionRequestPopulator" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::execute(org.apache.maven.execution.MavenExecutionRequest):org.apache.maven.execution.MavenExecutionResult" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.LegacySupport" />
			<role name="Adapter" element="org.apache.maven.DefaultMaven" />
			<role name="adaptee" element="org.apache.maven.DefaultMaven::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::execute(org.apache.maven.execution.MavenExecutionRequest):org.apache.maven.execution.MavenExecutionResult" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Adapter" element="org.apache.maven.repository.metadata.TestMetadataSource" />
			<role name="adaptee" element="org.apache.maven.repository.metadata.TestMetadataSource::factory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.repository.metadata.TestMetadataSource::retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.repository.legacy.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="Adapter" element="org.apache.maven.project.DefaultMavenProjectHelper" />
			<role name="adaptee" element="org.apache.maven.project.DefaultMavenProjectHelper::artifactHandlerManager:org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectHelper::attachArtifact(org.apache.maven.project.MavenProject, java.lang.String, java.lang.String, java.io.File):void" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectHelper::attachArtifact(org.apache.maven.project.MavenProject, java.lang.String, java.io.File):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.repository.ArtifactRepositoryFactory" />
			<role name="Adapter" element="org.apache.maven.artifact.manager.DefaultWagonManager" />
			<role name="adaptee" element="org.apache.maven.artifact.manager.DefaultWagonManager::artifactRepositoryFactory:org.apache.maven.artifact.repository.ArtifactRepositoryFactory" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getMirrorRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.LegacySupport" />
			<role name="Adapter" element="org.apache.maven.artifact.manager.DefaultWagonManager" />
			<role name="adaptee" element="org.apache.maven.artifact.manager.DefaultWagonManager::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getAuthenticationInfo(java.lang.String):org.apache.maven.wagon.authentication.AuthenticationInfo" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getProxy(java.lang.String):org.apache.maven.wagon.proxy.ProxyInfo" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getMirrorRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.MirrorSelector" />
			<role name="Adapter" element="org.apache.maven.artifact.manager.DefaultWagonManager" />
			<role name="adaptee" element="org.apache.maven.artifact.manager.DefaultWagonManager::mirrorSelector:org.apache.maven.repository.MirrorSelector" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getMirrorRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="Adapter" element="org.apache.maven.artifact.manager.DefaultWagonManager" />
			<role name="adaptee" element="org.apache.maven.artifact.manager.DefaultWagonManager::settingsDecrypter:org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getAuthenticationInfo(java.lang.String):org.apache.maven.wagon.authentication.AuthenticationInfo" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getProxy(java.lang.String):org.apache.maven.wagon.proxy.ProxyInfo" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.metadata.ArtifactMetadataSource" />
			<role name="Adapter" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver" />
			<role name="adaptee" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::source:org.apache.maven.artifact.metadata.ArtifactMetadataSource" />
			<role name="Request()" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::resolve(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.resolver.ArtifactCollector" />
			<role name="Adapter" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver" />
			<role name="adaptee" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::artifactCollector:org.apache.maven.artifact.resolver.ArtifactCollector" />
			<role name="Request()" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::resolve(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.artifact.resolver.ArtifactResolver" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::artifactResolver:org.apache.maven.artifact.resolver.ArtifactResolver" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::resolve(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.execution.MavenSession" />
			<role name="Adapter" element="org.apache.maven.lifecycle.internal.DefaultExecutionEvent" />
			<role name="adaptee" element="org.apache.maven.lifecycle.internal.DefaultExecutionEvent::session:org.apache.maven.execution.MavenSession" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultExecutionEvent::getProject():org.apache.maven.project.MavenProject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.lifecycle.LifeCyclePluginAnalyzer" />
			<role name="Adapter" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector" />
			<role name="adaptee" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector::lifecycle:org.apache.maven.lifecycle.LifeCyclePluginAnalyzer" />
			<role name="Request()" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector::injectLifecycleBindings(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.lifecycle.LifeCyclePluginAnalyzer" />
			<role name="Adapter" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor" />
			<role name="adaptee" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::lifeCyclePluginAnalyzer:org.apache.maven.lifecycle.LifeCyclePluginAnalyzer" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::getPluginsBoundByDefaultToAllLifecycles(java.lang.String):java.util.Set" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.BuildPluginManager" />
			<role name="Adapter" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator" />
			<role name="adaptee" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::pluginManager:org.apache.maven.plugin.BuildPluginManager" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::setupMojoExecution(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.plugin.MojoExecution):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator" />
			<role name="Adapter" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor" />
			<role name="adaptee" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::lifecycleTaskSegmentCalculator:org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::calculateExecutionPlan(org.apache.maven.execution.MavenSession, boolean, java.lang.String[]):org.apache.maven.lifecycle.MavenExecutionPlan" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.lifecycle.internal.MojoExecutor" />
			<role name="Adapter" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor" />
			<role name="adaptee" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::mojoExecutor:org.apache.maven.lifecycle.internal.MojoExecutor" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::executeForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.building.ModelProcessor" />
			<role name="Adapter" element="org.apache.maven.model.superpom.DefaultSuperPomProvider" />
			<role name="adaptee" element="org.apache.maven.model.superpom.DefaultSuperPomProvider::modelProcessor:org.apache.maven.model.building.ModelProcessor" />
			<role name="Request()" element="org.apache.maven.model.superpom.DefaultSuperPomProvider::getSuperModel(java.lang.String):org.apache.maven.model.Model" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.path.PathTranslator" />
			<role name="Adapter" element="org.apache.maven.model.profile.activation.FileProfileActivator" />
			<role name="adaptee" element="org.apache.maven.model.profile.activation.FileProfileActivator::pathTranslator:org.apache.maven.model.path.PathTranslator" />
			<role name="Request()" element="org.apache.maven.model.profile.activation.FileProfileActivator::isActive(org.apache.maven.model.Profile, org.apache.maven.model.profile.ProfileActivationContext, org.apache.maven.model.building.ModelProblemCollector):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.profile.ProfileSelector" />
			<role name="Adapter" element="org.apache.maven.profiles.DefaultProfileManager" />
			<role name="adaptee" element="org.apache.maven.profiles.DefaultProfileManager::profileSelector:org.apache.maven.model.profile.ProfileSelector" />
			<role name="Request()" element="org.apache.maven.profiles.DefaultProfileManager::getActiveProfiles():java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.validation.ModelValidator" />
			<role name="Adapter" element="org.apache.maven.project.validation.DefaultModelValidator" />
			<role name="adaptee" element="org.apache.maven.project.validation.DefaultModelValidator::modelValidator:org.apache.maven.model.validation.ModelValidator" />
			<role name="Request()" element="org.apache.maven.project.validation.DefaultModelValidator::validate(org.apache.maven.model.Model):org.apache.maven.project.validation.ModelValidationResult" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.LegacySupport" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultPluginManager::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginComponent(org.apache.maven.model.Plugin, java.lang.String, java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginComponents(org.apache.maven.model.Plugin, java.lang.String):java.util.Map" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginDescriptorForPrefix(java.lang.String):org.apache.maven.plugin.descriptor.PluginDescriptor" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::verifyPlugin(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.rtinfo.RuntimeInformation" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::runtimeInformation:org.apache.maven.rtinfo.RuntimeInformation" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::checkRequiredMavenVersion(org.apache.maven.plugin.descriptor.PluginDescriptor):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.prefix.PluginPrefixResolver" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultPluginManager::pluginPrefixResolver:org.apache.maven.plugin.prefix.PluginPrefixResolver" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginDefinitionForPrefix(java.lang.String, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject):org.apache.maven.model.Plugin" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginDescriptorForPrefix(java.lang.String):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="Adapter" element="org.apache.maven.plugin.internal.DefaultPluginManager" />
			<role name="adaptee" element="org.apache.maven.plugin.internal.DefaultPluginManager::pluginVersionResolver:org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::verifyPlugin(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="Adapter" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="adaptee" element="org.apache.maven.project.DefaultProjectBuildingHelper::pluginVersionResolver:org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.model.io.ModelReader" />
			<role name="Adapter" element="org.apache.maven.repository.TestRepositorySystem" />
			<role name="adaptee" element="org.apache.maven.repository.TestRepositorySystem::modelReader:org.apache.maven.model.io.ModelReader" />
			<role name="Request()" element="org.apache.maven.repository.TestRepositorySystem::resolve(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.MirrorSelector" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::mirrorSelector:org.apache.maven.repository.MirrorSelector" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::getMirror(org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.settings.Mirror" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::artifactRepositoryFactory:org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="Adapter" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="adaptee" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::settingsDecrypter:org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::injectAuthentication(java.util.List, java.util.List):void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::injectProxy(java.util.List, java.util.List):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.repository.metadata.GraphConflictResolver" />
			<role name="Adapter" element="org.apache.maven.repository.metadata.DefaultClasspathTransformation" />
			<role name="adaptee" element="org.apache.maven.repository.metadata.DefaultClasspathTransformation::conflictResolver:org.apache.maven.repository.metadata.GraphConflictResolver" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultClasspathTransformation::transform(org.apache.maven.repository.metadata.MetadataGraph, org.apache.maven.artifact.ArtifactScopeEnum, boolean):org.apache.maven.repository.metadata.ClasspathContainer" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.maven.toolchain.ToolchainsBuilder" />
			<role name="Adapter" element="org.apache.maven.toolchain.DefaultToolchainManagerPrivate" />
			<role name="adaptee" element="org.apache.maven.toolchain.DefaultToolchainManagerPrivate::toolchainsBuilder:org.apache.maven.toolchain.ToolchainsBuilder" />
			<role name="Request()" element="org.apache.maven.toolchain.DefaultToolchainManagerPrivate::getToolchainsForType(java.lang.String, org.apache.maven.execution.MavenSession):org.apache.maven.toolchain.ToolchainPrivate[]" />
		</instance>
	</pattern>
	<pattern name="Command" />
	<pattern name="Composite" />
	<pattern name="Decorator">
		<instance>
			<role name="Component" element="org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Decorator" element="org.apache.maven.repository.DelegatingLocalArtifactRepository" />
			<role name="component" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::userLocalArtifactRepository:org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::find(org.apache.maven.artifact.Artifact):org.apache.maven.artifact.Artifact" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::findVersions(org.apache.maven.artifact.Artifact):java.util.List" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository):java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::getId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::pathOf(org.apache.maven.artifact.Artifact):java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::getBasedir():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::getLayout():org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::getReleases():org.apache.maven.artifact.repository.ArtifactRepositoryPolicy" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::getSnapshots():org.apache.maven.artifact.repository.ArtifactRepositoryPolicy" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::getKey():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::getUrl():java.lang.String" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Decorator" element="org.apache.maven.repository.UserLocalArtifactRepository" />
			<role name="component" element="org.apache.maven.repository.UserLocalArtifactRepository::localRepository:org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Operation()" element="org.apache.maven.repository.UserLocalArtifactRepository::getId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.UserLocalArtifactRepository::pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository):java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.UserLocalArtifactRepository::pathOf(org.apache.maven.artifact.Artifact):java.lang.String" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="Decorator" element="org.apache.maven.artifact.resolver.filter.InversionArtifactFilter" />
			<role name="component" element="org.apache.maven.artifact.resolver.filter.InversionArtifactFilter::toInvert:org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="Operation()" element="org.apache.maven.artifact.resolver.filter.InversionArtifactFilter::include(org.apache.maven.artifact.Artifact):boolean" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.execution.ExecutionListener" />
			<role name="Decorator" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener" />
			<role name="component" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::delegate:org.apache.maven.execution.ExecutionListener" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::projectDiscoveryStarted(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::sessionStarted(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::sessionEnded(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::projectSkipped(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::projectStarted(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::projectSucceeded(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::projectFailed(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::forkStarted(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::forkSucceeded(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::forkFailed(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::mojoSkipped(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::mojoStarted(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::mojoSucceeded(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::mojoFailed(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::forkedProjectStarted(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::forkedProjectSucceeded(org.apache.maven.execution.ExecutionEvent):void" />
			<role name="Operation()" element="org.apache.maven.eventspy.internal.EventSpyExecutionListener::forkedProjectFailed(org.apache.maven.execution.ExecutionEvent):void" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.model.building.ModelBuildingRequest" />
			<role name="Decorator" element="org.apache.maven.model.building.FilterModelBuildingRequest" />
			<role name="component" element="org.apache.maven.model.building.FilterModelBuildingRequest::request:org.apache.maven.model.building.ModelBuildingRequest" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getPomFile():java.io.File" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getModelSource():org.apache.maven.model.building.ModelSource" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getValidationLevel():int" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::isProcessPlugins():boolean" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::isTwoPhaseBuilding():boolean" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::isLocationTracking():boolean" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getProfiles():java.util.List" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getActiveProfileIds():java.util.List" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getInactiveProfileIds():java.util.List" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getSystemProperties():java.util.Properties" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getUserProperties():java.util.Properties" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getBuildStartTime():java.util.Date" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::setBuildStartTime(java.util.Date):org.apache.maven.model.building.ModelBuildingRequest" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getModelResolver():org.apache.maven.model.resolution.ModelResolver" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getModelBuildingListener():org.apache.maven.model.building.ModelBuildingListener" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::setModelBuildingListener(org.apache.maven.model.building.ModelBuildingListener):org.apache.maven.model.building.ModelBuildingRequest" />
			<role name="Operation()" element="org.apache.maven.model.building.FilterModelBuildingRequest::getModelCache():org.apache.maven.model.building.ModelCache" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.artifact.Artifact" />
			<role name="Decorator" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact" />
			<role name="component" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::real:org.apache.maven.artifact.Artifact" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getGroupId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getArtifactId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getVersion():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setVersion(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getScope():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getType():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getClassifier():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::hasClassifier():boolean" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getFile():java.io.File" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setFile(java.io.File):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getBaseVersion():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setBaseVersion(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getDependencyConflictId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::addMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getMetadataList():java.util.Collection" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setRepository(org.apache.maven.artifact.repository.ArtifactRepository):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::updateVersion(java.lang.String, org.apache.maven.artifact.repository.ArtifactRepository):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getDownloadUrl():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setDownloadUrl(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getDependencyFilter():org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setDependencyFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getArtifactHandler():org.apache.maven.artifact.handler.ArtifactHandler" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getDependencyTrail():java.util.List" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setDependencyTrail(java.util.List):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setScope(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getVersionRange():org.apache.maven.artifact.versioning.VersionRange" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setVersionRange(org.apache.maven.artifact.versioning.VersionRange):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::selectVersion(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setGroupId(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setArtifactId(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::isSnapshot():boolean" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setResolved(boolean):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::isResolved():boolean" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setResolvedVersion(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setArtifactHandler(org.apache.maven.artifact.handler.ArtifactHandler):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::isRelease():boolean" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setRelease(boolean):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getAvailableVersions():java.util.List" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setAvailableVersions(java.util.List):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::isOptional():boolean" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::setOptional(boolean):void" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::getSelectedVersion():org.apache.maven.artifact.versioning.ArtifactVersion" />
			<role name="Operation()" element="org.apache.maven.lifecycle.internal.ThreadLockedArtifact::isSelectedVersionKnown():boolean" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.artifact.Artifact" />
			<role name="Decorator" element="org.apache.maven.project.artifact.ActiveProjectArtifact" />
			<role name="component" element="org.apache.maven.project.artifact.ActiveProjectArtifact::artifact:org.apache.maven.artifact.Artifact" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getGroupId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getArtifactId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getVersion():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setVersion(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getScope():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getType():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getClassifier():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::hasClassifier():boolean" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setFile(java.io.File):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getBaseVersion():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setBaseVersion(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getDependencyConflictId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::addMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getMetadataList():java.util.Collection" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setRepository(org.apache.maven.artifact.repository.ArtifactRepository):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::updateVersion(java.lang.String, org.apache.maven.artifact.repository.ArtifactRepository):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getDownloadUrl():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setDownloadUrl(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getDependencyFilter():org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setDependencyFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getArtifactHandler():org.apache.maven.artifact.handler.ArtifactHandler" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getDependencyTrail():java.util.List" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setDependencyTrail(java.util.List):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setScope(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getVersionRange():org.apache.maven.artifact.versioning.VersionRange" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setVersionRange(org.apache.maven.artifact.versioning.VersionRange):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::selectVersion(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setGroupId(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setArtifactId(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::isSnapshot():boolean" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setResolved(boolean):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::isResolved():boolean" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setResolvedVersion(java.lang.String):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setArtifactHandler(org.apache.maven.artifact.handler.ArtifactHandler):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::isRelease():boolean" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setRelease(boolean):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getAvailableVersions():java.util.List" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setAvailableVersions(java.util.List):void" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::isOptional():boolean" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::getSelectedVersion():org.apache.maven.artifact.versioning.ArtifactVersion" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::isSelectedVersionKnown():boolean" />
			<role name="Operation()" element="org.apache.maven.project.artifact.ActiveProjectArtifact::setOptional(boolean):void" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.artifact.Artifact" />
			<role name="Decorator" element="org.apache.maven.project.artifact.AttachedArtifact" />
			<role name="component" element="org.apache.maven.project.artifact.AttachedArtifact::parent:org.apache.maven.artifact.Artifact" />
			<role name="Operation()" element="org.apache.maven.project.artifact.AttachedArtifact::getBaseVersion():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.AttachedArtifact::getDownloadUrl():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.AttachedArtifact::getRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Operation()" element="org.apache.maven.project.artifact.AttachedArtifact::getScope():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.AttachedArtifact::getVersion():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.project.artifact.AttachedArtifact::getVersionRange():org.apache.maven.artifact.versioning.VersionRange" />
			<role name="Operation()" element="org.apache.maven.project.artifact.AttachedArtifact::isRelease():boolean" />
			<role name="Operation()" element="org.apache.maven.project.artifact.AttachedArtifact::isSnapshot():boolean" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Decorator" element="org.apache.maven.repository.legacy.LegacyRepositorySystem$UnknownRepositoryLayout" />
			<role name="component" element="org.apache.maven.repository.legacy.LegacyRepositorySystem$UnknownRepositoryLayout::fallback:org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Operation()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem$UnknownRepositoryLayout::pathOf(org.apache.maven.artifact.Artifact):java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem$UnknownRepositoryLayout::pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository):java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem$UnknownRepositoryLayout::pathOfRemoteRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata):java.lang.String" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.maven.execution.ProjectDependencyGraph" />
			<role name="Decorator" element="org.apache.maven.FilteredProjectDependencyGraph" />
			<role name="component" element="org.apache.maven.FilteredProjectDependencyGraph::projectDependencyGraph:org.apache.maven.execution.ProjectDependencyGraph" />
			<role name="Operation()" element="org.apache.maven.FilteredProjectDependencyGraph::getSortedProjects():java.util.List" />
			<role name="Operation()" element="org.apache.maven.FilteredProjectDependencyGraph::getDownstreamProjects(org.apache.maven.project.MavenProject, boolean):java.util.List" />
			<role name="Operation()" element="org.apache.maven.FilteredProjectDependencyGraph::getUpstreamProjects(org.apache.maven.project.MavenProject, boolean):java.util.List" />
		</instance>
	</pattern>
	<pattern name="Observer" />
	<pattern name="State">
		<instance>
			<role name="State" element="org.apache.maven.artifact.Artifact" />
			<role name="Context" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec" />
			<role name="state" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec::artifact:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec::addDependency(java.lang.String, java.lang.String, java.lang.String, boolean):org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.artifact.Artifact" />
			<role name="Context" element="org.apache.maven.artifact.resolver.ResolutionNode" />
			<role name="state" element="org.apache.maven.artifact.resolver.ResolutionNode::artifact:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.artifact.resolver.ResolutionNode::getKey():java.lang.Object" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.artifact.Artifact" />
			<role name="Context" element="org.apache.maven.lifecycle.internal.LifecycleWeaveBuilder$ArtifactLink" />
			<role name="state" element="org.apache.maven.lifecycle.internal.LifecycleWeaveBuilder$ArtifactLink::artifactInThis:org.apache.maven.artifact.Artifact" />
			<role name="state" element="org.apache.maven.lifecycle.internal.LifecycleWeaveBuilder$ArtifactLink::upstream:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.LifecycleWeaveBuilder$ArtifactLink::resolveFromUpstream():void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.artifact.Artifact" />
			<role name="Context" element="org.apache.maven.plugin.MavenPluginValidator" />
			<role name="state" element="org.apache.maven.plugin.MavenPluginValidator::pluginArtifact:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.plugin.MavenPluginValidator::validate(org.apache.maven.plugin.descriptor.PluginDescriptor):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.artifact.Artifact" />
			<role name="Context" element="org.apache.maven.plugin.descriptor.PluginDescriptor" />
			<role name="state" element="org.apache.maven.plugin.descriptor.PluginDescriptor::pluginArtifact:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.plugin.descriptor.PluginDescriptor::getDescriptorStream(java.lang.String):java.io.InputStream" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.artifact.Artifact" />
			<role name="Context" element="org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord" />
			<role name="state" element="org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord::pomArtifact:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord::isStale():boolean" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.repository.ArtifactTransferListener" />
			<role name="Context" element="org.apache.maven.repository.legacy.TransferListenerAdapter" />
			<role name="state" element="org.apache.maven.repository.legacy.TransferListenerAdapter::listener:org.apache.maven.repository.ArtifactTransferListener" />
			<role name="Request()" element="org.apache.maven.repository.legacy.TransferListenerAdapter::transferCompleted(org.apache.maven.wagon.events.TransferEvent):void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.TransferListenerAdapter::transferInitiated(org.apache.maven.wagon.events.TransferEvent):void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.TransferListenerAdapter::transferProgress(org.apache.maven.wagon.events.TransferEvent, byte[], int):void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.TransferListenerAdapter::transferStarted(org.apache.maven.wagon.events.TransferEvent):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.BuilderCommon" />
			<role name="State" element="org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator" />
			<role name="state" element="org.apache.maven.lifecycle.internal.BuilderCommon::lifeCycleExecutionPlanCalculator:org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.BuilderCommon::resolveBuildPlan(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.lifecycle.internal.TaskSegment, java.util.Set):org.apache.maven.lifecycle.MavenExecutionPlan" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.execution.MavenSession" />
			<role name="State" element="org.apache.maven.execution.MavenExecutionRequest" />
			<role name="state" element="org.apache.maven.execution.MavenSession::request:org.apache.maven.execution.MavenExecutionRequest" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getLocalRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getGoals():java.util.List" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getUserProperties():java.util.Properties" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getSystemProperties():java.util.Properties" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getExecutionProperties():java.util.Properties" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getExecutionRootDirectory():java.lang.String" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::isUsingPOMsFromFilesystem():boolean" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getProjectBuildingRequest():org.apache.maven.project.ProjectBuildingRequest" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getPluginGroups():java.util.List" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::isOffline():boolean" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getReactorFailureBehavior():java.lang.String" />
			<role name="Request()" element="org.apache.maven.execution.MavenSession::getStartTime():java.util.Date" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.execution.SettingsAdapter" />
			<role name="State" element="org.apache.maven.execution.MavenExecutionRequest" />
			<role name="state" element="org.apache.maven.execution.SettingsAdapter::request:org.apache.maven.execution.MavenExecutionRequest" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::getLocalRepository():java.lang.String" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::isInteractiveMode():boolean" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::isOffline():boolean" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::getProxies():java.util.List" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::getServers():java.util.List" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::getMirrors():java.util.List" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::getProfiles():java.util.List" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::getActiveProfiles():java.util.List" />
			<role name="Request()" element="org.apache.maven.execution.SettingsAdapter::getPluginGroups():java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.MavenProject" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.project.MavenProject::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getPluginArtifacts():java.util.Set" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getReportArtifacts():java.util.Set" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getExtensionArtifacts():java.util.Set" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getParentArtifact():org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getManagedVersionMap():java.util.Map" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getReleaseArtifactRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getSnapshotArtifactRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.PomConstructionTest" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.project.PomConstructionTest::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.project.PomConstructionTest::buildPom(java.lang.String, boolean, java.util.Properties, java.lang.String[]):org.apache.maven.project.harness.PomTestWrapper" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.artifact.DefaultMavenMetadataCacheTest" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.project.artifact.DefaultMavenMetadataCacheTest::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.project.artifact.DefaultMavenMetadataCacheTest::testCacheKey():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.LegacyRepositorySystemTest" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.repository.LegacyRepositorySystemTest::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.repository.LegacyRepositorySystemTest::getRemoteRepositories():java.util.List" />
			<role name="Request()" element="org.apache.maven.repository.LegacyRepositorySystemTest::getLocalRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.repository.LegacyRepositorySystemTest::testThatASystemScopedDependencyIsNotResolvedFromRepositories():void" />
			<role name="Request()" element="org.apache.maven.repository.LegacyRepositorySystemTest::testLocalRepositoryBasedir():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.LegacyRepositorySystemTest" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.repository.legacy.LegacyRepositorySystemTest::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystemTest::testThatLocalRepositoryWithSpacesIsProperlyHandled():void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystemTest::testAuthenticationHandling():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.settings.PomConstructionWithSettingsTest" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.settings.PomConstructionWithSettingsTest::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.settings.PomConstructionWithSettingsTest::buildPom(java.lang.String):org.apache.maven.project.harness.PomTestWrapper" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.MavenProject" />
			<role name="State" element="org.apache.maven.project.ProjectBuilder" />
			<role name="state" element="org.apache.maven.project.MavenProject::mavenProjectBuilder:org.apache.maven.project.ProjectBuilder" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getParent():org.apache.maven.project.MavenProject" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.internal.DefaultArtifactDescriptorReader" />
			<role name="State" element="org.apache.maven.model.building.ModelBuilder" />
			<role name="state" element="org.apache.maven.repository.internal.DefaultArtifactDescriptorReader::modelBuilder:org.apache.maven.model.building.ModelBuilder" />
			<role name="Request()" element="org.apache.maven.repository.internal.DefaultArtifactDescriptorReader::loadPom(org.sonatype.aether.RepositorySystemSession, org.sonatype.aether.resolution.ArtifactDescriptorRequest, org.sonatype.aether.resolution.ArtifactDescriptorResult):org.apache.maven.model.Model" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.repository.metadata.GraphConflictResolver" />
			<role name="Context" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest" />
			<role name="state" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest::resolver:org.apache.maven.repository.metadata.GraphConflictResolver" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest::testCompileResolution():void" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest::testRuntimeResolution():void" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest::testTestResolution():void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.repository.metadata.GraphConflictResolver" />
			<role name="Context" element="org.apache.maven.repository.metadata.MetadataResolutionResult" />
			<role name="state" element="org.apache.maven.repository.metadata.MetadataResolutionResult::conflictResolver:org.apache.maven.repository.metadata.GraphConflictResolver" />
			<role name="Request()" element="org.apache.maven.repository.metadata.MetadataResolutionResult::getGraph(org.apache.maven.artifact.ArtifactScopeEnum):org.apache.maven.repository.metadata.MetadataGraph" />
			<role name="Request()" element="org.apache.maven.repository.metadata.MetadataResolutionResult::getGraph(org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum):org.apache.maven.repository.metadata.MetadataGraph" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest" />
			<role name="State" element="org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector" />
			<role name="state" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest::artifactCollector:org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector" />
			<role name="Request()" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest::collect(java.util.Set, org.apache.maven.artifact.resolver.filter.ArtifactFilter):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
			<role name="Request()" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest::collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
			<role name="Request()" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest::collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec, org.apache.maven.artifact.resolver.filter.ArtifactFilter):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
			<role name="Request()" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest::collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec, org.apache.maven.artifact.Artifact):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.LegacyLocalRepositoryManager" />
			<role name="State" element="org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="state" element="org.apache.maven.artifact.repository.LegacyLocalRepositoryManager::delegate:org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.LegacyLocalRepositoryManager::getPathForLocalArtifact(org.sonatype.aether.artifact.Artifact):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.LegacyLocalRepositoryManager::getPathForRemoteArtifact(org.sonatype.aether.artifact.Artifact, org.sonatype.aether.repository.RemoteRepository, java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.LegacyLocalRepositoryManager::getPathForLocalMetadata(org.sonatype.aether.metadata.Metadata):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.LegacyLocalRepositoryManager::getPathForRemoteMetadata(org.sonatype.aether.metadata.Metadata, org.sonatype.aether.repository.RemoteRepository, java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.cli.MavenCli" />
			<role name="State" element="org.apache.maven.Maven" />
			<role name="state" element="org.apache.maven.cli.MavenCli::maven:org.apache.maven.Maven" />
			<role name="Request()" element="org.apache.maven.cli.MavenCli::execute(org.apache.maven.cli.MavenCli$CliRequest):int" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.execution.ProjectDependencyGraph" />
			<role name="Context" element="org.apache.maven.lifecycle.internal.ConcurrencyDependencyGraph" />
			<role name="state" element="org.apache.maven.lifecycle.internal.ConcurrencyDependencyGraph::projectDependencyGraph:org.apache.maven.execution.ProjectDependencyGraph" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.ConcurrencyDependencyGraph::getRootSchedulableBuilds():java.util.List" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.ConcurrencyDependencyGraph::getSchedulableNewProcesses(org.apache.maven.project.MavenProject):java.util.List" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.execution.ProjectDependencyGraph" />
			<role name="Context" element="org.apache.maven.lifecycle.internal.ReactorBuildStatus" />
			<role name="state" element="org.apache.maven.lifecycle.internal.ReactorBuildStatus::projectDependencyGraph:org.apache.maven.execution.ProjectDependencyGraph" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.ReactorBuildStatus::blackList(org.apache.maven.project.MavenProject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.MavenProject" />
			<role name="State" element="org.apache.maven.project.ProjectBuildingRequest" />
			<role name="state" element="org.apache.maven.project.MavenProject::projectBuilderConfiguration:org.apache.maven.project.ProjectBuildingRequest" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getParent():org.apache.maven.project.MavenProject" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getReleaseArtifactRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getSnapshotArtifactRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.LifecycleStarter" />
			<role name="State" element="org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator" />
			<role name="state" element="org.apache.maven.lifecycle.internal.LifecycleStarter::lifecycleTaskSegmentCalculator:org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.LifecycleStarter::execute(org.apache.maven.execution.MavenSession):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.interpolation.ProblemDetectingValueSource" />
			<role name="State" element="org.apache.maven.model.building.ModelProblemCollector" />
			<role name="state" element="org.apache.maven.model.interpolation.ProblemDetectingValueSource::problems:org.apache.maven.model.building.ModelProblemCollector" />
			<role name="Request()" element="org.apache.maven.model.interpolation.ProblemDetectingValueSource::getValue(java.lang.String):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction" />
			<role name="State" element="org.apache.maven.model.building.ModelProblemCollector" />
			<role name="state" element="org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction::problems:org.apache.maven.model.building.ModelProblemCollector" />
			<role name="Request()" element="org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction::interpolateField(java.lang.Class, java.lang.Object, java.lang.reflect.Field, java.lang.Class):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata" />
			<role name="State" element="org.apache.maven.artifact.Artifact" />
			<role name="state" element="org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata::artifact:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata::getGroupId():java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata::getArtifactId():java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata::getKey():java.lang.Object" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.ArtifactRepositoryMetadata::getNature():int" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata" />
			<role name="State" element="org.apache.maven.artifact.Artifact" />
			<role name="state" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata::artifact:org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata::getGroupId():java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata::getArtifactId():java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata::getBaseVersion():java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata::getKey():java.lang.Object" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata::isSnapshot():boolean" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata::getRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata::setRepository(org.apache.maven.artifact.repository.ArtifactRepository):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.LegacyRepositorySystemTest" />
			<role name="State" element="org.apache.maven.artifact.resolver.ResolutionErrorHandler" />
			<role name="state" element="org.apache.maven.repository.LegacyRepositorySystemTest::resolutionErrorHandler:org.apache.maven.artifact.resolver.ResolutionErrorHandler" />
			<role name="Request()" element="org.apache.maven.repository.LegacyRepositorySystemTest::testThatASystemScopedDependencyIsNotResolvedFromRepositories():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.cli.MavenCli" />
			<role name="State" element="org.apache.maven.settings.building.SettingsBuilder" />
			<role name="state" element="org.apache.maven.cli.MavenCli::settingsBuilder:org.apache.maven.settings.building.SettingsBuilder" />
			<role name="Request()" element="org.apache.maven.cli.MavenCli::settings(org.apache.maven.cli.MavenCli$CliRequest):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.execution.DefaultMavenExecutionRequest" />
			<role name="State" element="org.apache.maven.project.ProjectBuildingRequest" />
			<role name="state" element="org.apache.maven.execution.DefaultMavenExecutionRequest::projectBuildingRequest:org.apache.maven.project.ProjectBuildingRequest" />
			<role name="Request()" element="org.apache.maven.execution.DefaultMavenExecutionRequest::getProjectBuildingRequest():org.apache.maven.project.ProjectBuildingRequest" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.LifecycleDependencyResolver" />
			<role name="State" element="org.apache.maven.project.ProjectDependenciesResolver" />
			<role name="state" element="org.apache.maven.lifecycle.internal.LifecycleDependencyResolver::dependenciesResolver:org.apache.maven.project.ProjectDependenciesResolver" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.LifecycleDependencyResolver::getDependencies(org.apache.maven.project.MavenProject, java.util.Collection, java.util.Collection, org.apache.maven.execution.MavenSession, boolean, java.util.Set):java.util.Set" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.repository.metadata.ClasspathTransformation" />
			<role name="Context" element="org.apache.maven.repository.metadata.DefaultClasspathTransformationTest" />
			<role name="state" element="org.apache.maven.repository.metadata.DefaultClasspathTransformationTest::transform:org.apache.maven.repository.metadata.ClasspathTransformation" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultClasspathTransformationTest::testCompileClasspathTransform():void" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultClasspathTransformationTest::testRuntimeClasspathTransform():void" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultClasspathTransformationTest::testTestClasspathTransform():void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.repository.metadata.ClasspathTransformation" />
			<role name="Context" element="org.apache.maven.repository.metadata.MetadataResolutionResult" />
			<role name="state" element="org.apache.maven.repository.metadata.MetadataResolutionResult::classpathTransformation:org.apache.maven.repository.metadata.ClasspathTransformation" />
			<role name="Request()" element="org.apache.maven.repository.metadata.MetadataResolutionResult::getClasspath(org.apache.maven.artifact.ArtifactScopeEnum):org.apache.maven.repository.metadata.ClasspathContainer" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest" />
			<role name="State" element="org.apache.maven.artifact.repository.RepositoryRequest" />
			<role name="state" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::repositoryRequest:org.apache.maven.artifact.repository.RepositoryRequest" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::getLocalRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::getRemoteRepositories():java.util.List" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::setRemoteRepositories(java.util.List):org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::isOffline():boolean" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::setOffline(boolean):org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::isForceUpdate():boolean" />
			<role name="Request()" element="org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest::setForceUpdate(boolean):org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelProblemCollector" />
			<role name="State" element="org.apache.maven.model.building.ModelBuildingResult" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelProblemCollector::result:org.apache.maven.model.building.ModelBuildingResult" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelProblemCollector::newModelBuildingException():org.apache.maven.model.building.ModelBuildingException" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.ModelBuildingException" />
			<role name="State" element="org.apache.maven.model.building.ModelBuildingResult" />
			<role name="state" element="org.apache.maven.model.building.ModelBuildingException::result:org.apache.maven.model.building.ModelBuildingResult" />
			<role name="Request()" element="org.apache.maven.model.building.ModelBuildingException::getModel():org.apache.maven.model.Model" />
			<role name="Request()" element="org.apache.maven.model.building.ModelBuildingException::getModelId():java.lang.String" />
			<role name="Request()" element="org.apache.maven.model.building.ModelBuildingException::getProblems():java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="State" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="state" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::artifactFactory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createArtifactWithClassifier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createProjectArtifact(java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createDependencyArtifact(org.apache.maven.model.Dependency):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createExtensionArtifact(java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createParentArtifact(java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createPluginArtifact(org.apache.maven.model.Plugin):org.apache.maven.artifact.Artifact" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory" />
			<role name="State" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="state" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::factory:org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::getLayout(java.lang.String):org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::createDeploymentArtifactRepository(java.lang.String, java.lang.String, java.lang.String, boolean):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::createDeploymentArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, boolean):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::createArtifactRepository(java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::createArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::setGlobalUpdatePolicy(java.lang.String):void" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::setGlobalChecksumPolicy(java.lang.String):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="Context" element="org.apache.maven.lifecycle.internal.LifecycleStarter" />
			<role name="state" element="org.apache.maven.lifecycle.internal.LifecycleStarter::eventCatapult:org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.LifecycleStarter::execute(org.apache.maven.execution.MavenSession):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="Context" element="org.apache.maven.lifecycle.internal.BuilderCommon" />
			<role name="state" element="org.apache.maven.lifecycle.internal.BuilderCommon::eventCatapult:org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.BuilderCommon::handleBuildError(org.apache.maven.lifecycle.internal.ReactorContext, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, java.lang.Exception, long):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="Context" element="org.apache.maven.lifecycle.internal.LifecycleModuleBuilder" />
			<role name="state" element="org.apache.maven.lifecycle.internal.LifecycleModuleBuilder::eventCatapult:org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.LifecycleModuleBuilder::buildProject(org.apache.maven.execution.MavenSession, org.apache.maven.execution.MavenSession, org.apache.maven.lifecycle.internal.ReactorContext, org.apache.maven.project.MavenProject, org.apache.maven.lifecycle.internal.TaskSegment):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.DefaultArtifactRepository" />
			<role name="State" element="org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="state" element="org.apache.maven.artifact.repository.DefaultArtifactRepository::layout:org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepository::pathOf(org.apache.maven.artifact.Artifact):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepository::pathOfRemoteRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepository::pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.MavenArtifactRepository" />
			<role name="State" element="org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="state" element="org.apache.maven.artifact.repository.MavenArtifactRepository::layout:org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout" />
			<role name="Request()" element="org.apache.maven.artifact.repository.MavenArtifactRepository::pathOf(org.apache.maven.artifact.Artifact):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.MavenArtifactRepository::pathOfRemoteRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata):java.lang.String" />
			<role name="Request()" element="org.apache.maven.artifact.repository.MavenArtifactRepository::pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator" />
			<role name="State" element="org.apache.maven.plugin.BuildPluginManager" />
			<role name="state" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator::pluginManager:org.apache.maven.plugin.BuildPluginManager" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator::getMojoDescriptor(java.lang.String, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject):org.apache.maven.plugin.descriptor.MojoDescriptor" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.execution.DefaultMavenExecutionRequestPopulator" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.execution.DefaultMavenExecutionRequestPopulator::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.execution.DefaultMavenExecutionRequestPopulator::injectDefaultRepositories(org.apache.maven.execution.MavenExecutionRequest):void" />
			<role name="Request()" element="org.apache.maven.execution.DefaultMavenExecutionRequestPopulator::injectDefaultPluginRepositories(org.apache.maven.execution.MavenExecutionRequest):void" />
			<role name="Request()" element="org.apache.maven.execution.DefaultMavenExecutionRequestPopulator::processRepositoriesInSettings(org.apache.maven.execution.MavenExecutionRequest):void" />
			<role name="Request()" element="org.apache.maven.execution.DefaultMavenExecutionRequestPopulator::createLocalRepository(org.apache.maven.execution.MavenExecutionRequest):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.LifecycleExecutorTest" />
			<role name="State" element="org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator" />
			<role name="state" element="org.apache.maven.lifecycle.LifecycleExecutorTest::lifeCycleExecutionPlanCalculator:org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator" />
			<role name="Request()" element="org.apache.maven.lifecycle.LifecycleExecutorTest::calculateExecutionPlan(org.apache.maven.execution.MavenSession, java.lang.String[]):org.apache.maven.lifecycle.MavenExecutionPlan" />
			<role name="Request()" element="org.apache.maven.lifecycle.LifecycleExecutorTest::testSetupMojoExecution():void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Context" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest" />
			<role name="state" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest::artifactFactory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest::createArtifactSpec(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean):org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Context" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest" />
			<role name="state" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest::artifactFactory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest::createTestPomArtifact(java.lang.String):org.apache.maven.artifact.Artifact" />
			<role name="Request()" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest::createTestArtifact(java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.metadata.TestMetadataSource" />
			<role name="State" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="state" element="org.apache.maven.artifact.metadata.TestMetadataSource::factory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.artifact.metadata.TestMetadataSource::retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.artifact.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.artifact.MavenMetadataSource" />
			<role name="State" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="state" element="org.apache.maven.project.artifact.MavenMetadataSource::repositorySystem:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::retrieveRelocatedProject(org.apache.maven.artifact.Artifact, org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest):org.apache.maven.project.artifact.MavenMetadataSource$ProjectRelocation" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.MavenProject" />
			<role name="State" element="org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="state" element="org.apache.maven.project.MavenProject::artifactFilter:org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="Request()" element="org.apache.maven.project.MavenProject::getArtifacts():java.util.Set" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.DefaultBuildPluginManager" />
			<role name="State" element="org.apache.maven.plugin.MavenPluginManager" />
			<role name="state" element="org.apache.maven.plugin.DefaultBuildPluginManager::mavenPluginManager:org.apache.maven.plugin.MavenPluginManager" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::loadPlugin(org.apache.maven.model.Plugin, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.descriptor.PluginDescriptor" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::executeMojo(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution):void" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::getPluginRealm(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.descriptor.PluginDescriptor):org.codehaus.plexus.classworlds.realm.ClassRealm" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::getMojoDescriptor(org.apache.maven.model.Plugin, java.lang.String, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.descriptor.MojoDescriptor" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="State" element="org.apache.maven.plugin.PluginArtifactsCache" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuildingHelper::pluginArtifactsCache:org.apache.maven.plugin.PluginArtifactsCache" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuildingHelper::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createArtifactRepositories(java.util.List, java.util.List, org.apache.maven.project.ProjectBuildingRequest):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.MirrorProcessorTest" />
			<role name="State" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="state" element="org.apache.maven.repository.MirrorProcessorTest::repositorySystem:org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Request()" element="org.apache.maven.repository.MirrorProcessorTest::getRepo(java.lang.String, java.lang.String):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest" />
			<role name="State" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="state" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest::artifactRepositoryFactory:org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Request()" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest::testUnnecessaryRepositoryLookup():void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest::createStringRepo():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest::getRepo(java.lang.String, java.lang.String):org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.repository.legacy.DefaultWagonManagerTest::xtestChecksumVerification():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.PluginParameterExpressionEvaluatorTest" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.plugin.PluginParameterExpressionEvaluatorTest::factory:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.plugin.PluginParameterExpressionEvaluatorTest::createExpressionEvaluator(org.apache.maven.project.MavenProject, org.apache.maven.plugin.descriptor.PluginDescriptor, java.util.Properties):org.codehaus.plexus.component.configurator.expression.ExpressionEvaluator" />
			<role name="Request()" element="org.apache.maven.plugin.PluginParameterExpressionEvaluatorTest::createArtifact(java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.configuration.DefaultBeanConfiguratorTest" />
			<role name="State" element="org.apache.maven.configuration.BeanConfigurator" />
			<role name="state" element="org.apache.maven.configuration.DefaultBeanConfiguratorTest::configurator:org.apache.maven.configuration.BeanConfigurator" />
			<role name="Request()" element="org.apache.maven.configuration.DefaultBeanConfiguratorTest::testMinimal():void" />
			<role name="Request()" element="org.apache.maven.configuration.DefaultBeanConfiguratorTest::testPreAndPostProcessing():void" />
			<role name="Request()" element="org.apache.maven.configuration.DefaultBeanConfiguratorTest::testChildConfigurationElement():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="State" element="org.apache.maven.plugin.PluginRealmCache" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::pluginRealmCache:org.apache.maven.plugin.PluginRealmCache" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::setupPluginRealm(org.apache.maven.plugin.descriptor.PluginDescriptor, org.apache.maven.execution.MavenSession, java.lang.ClassLoader, java.util.List, org.sonatype.aether.graph.DependencyFilter):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator" />
			<role name="State" element="org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="state" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator::pluginVersionResolver:org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator::resolvePluginVersion(org.apache.maven.model.Plugin, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.LifecyclePluginResolver" />
			<role name="State" element="org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="state" element="org.apache.maven.lifecycle.internal.LifecyclePluginResolver::pluginVersionResolver:org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.LifecyclePluginResolver::resolveMissingPluginVersions(org.apache.maven.project.MavenProject, org.apache.maven.execution.MavenSession):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultMavenProjectBuilder" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.project.DefaultMavenProjectBuilder::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::normalizeToArtifactRepositories(java.util.List, org.apache.maven.project.ProjectBuildingRequest):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="State" element="org.apache.maven.classrealm.ClassRealmManager" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuildingHelper::classRealmManager:org.apache.maven.classrealm.ClassRealmManager" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::selectProjectRealm(org.apache.maven.project.MavenProject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.cli.PrintStreamLogger" />
			<role name="State" element="org.apache.maven.cli.PrintStreamLogger$Provider" />
			<role name="state" element="org.apache.maven.cli.PrintStreamLogger::provider:org.apache.maven.cli.PrintStreamLogger$Provider" />
			<role name="Request()" element="org.apache.maven.cli.PrintStreamLogger::debug(java.lang.String, java.lang.Throwable):void" />
			<role name="Request()" element="org.apache.maven.cli.PrintStreamLogger::info(java.lang.String, java.lang.Throwable):void" />
			<role name="Request()" element="org.apache.maven.cli.PrintStreamLogger::warn(java.lang.String, java.lang.Throwable):void" />
			<role name="Request()" element="org.apache.maven.cli.PrintStreamLogger::error(java.lang.String, java.lang.Throwable):void" />
			<role name="Request()" element="org.apache.maven.cli.PrintStreamLogger::fatalError(java.lang.String, java.lang.Throwable):void" />
			<role name="Request()" element="org.apache.maven.cli.PrintStreamLogger::close():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.cli.MavenCli" />
			<role name="State" element="org.apache.maven.execution.MavenExecutionRequestPopulator" />
			<role name="state" element="org.apache.maven.cli.MavenCli::executionRequestPopulator:org.apache.maven.execution.MavenExecutionRequestPopulator" />
			<role name="Request()" element="org.apache.maven.cli.MavenCli::settings(org.apache.maven.cli.MavenCli$CliRequest):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultModelBuildingListener" />
			<role name="State" element="org.apache.maven.project.ProjectBuildingHelper" />
			<role name="state" element="org.apache.maven.project.DefaultModelBuildingListener::projectBuildingHelper:org.apache.maven.project.ProjectBuildingHelper" />
			<role name="Request()" element="org.apache.maven.project.DefaultModelBuildingListener::buildExtensionsAssembled(org.apache.maven.model.building.ModelBuildingEvent):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelProcessor" />
			<role name="State" element="org.apache.maven.model.io.ModelReader" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelProcessor::reader:org.apache.maven.model.io.ModelReader" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelProcessor::read(java.io.File, java.util.Map):org.apache.maven.model.Model" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelProcessor::read(java.io.Reader, java.util.Map):org.apache.maven.model.Model" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelProcessor::read(java.io.InputStream, java.util.Map):org.apache.maven.model.Model" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest" />
			<role name="State" element="org.apache.maven.model.io.ModelReader" />
			<role name="state" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest::reader:org.apache.maven.model.io.ModelReader" />
			<role name="Request()" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest::getModel(java.lang.String):org.apache.maven.model.Model" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.validation.DefaultModelValidatorTest" />
			<role name="State" element="org.apache.maven.model.validation.ModelValidator" />
			<role name="state" element="org.apache.maven.model.validation.DefaultModelValidatorTest::validator:org.apache.maven.model.validation.ModelValidator" />
			<role name="Request()" element="org.apache.maven.model.validation.DefaultModelValidatorTest::validateEffective(java.lang.String, int):org.apache.maven.model.building.SimpleProblemCollector" />
			<role name="Request()" element="org.apache.maven.model.validation.DefaultModelValidatorTest::validateRaw(java.lang.String, int):org.apache.maven.model.building.SimpleProblemCollector" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="State" element="org.apache.maven.plugin.ExtensionRealmCache" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuildingHelper::extensionRealmCache:org.apache.maven.plugin.ExtensionRealmCache" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="State" element="org.apache.maven.plugin.PluginDescriptorCache" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::pluginDescriptorCache:org.apache.maven.plugin.PluginDescriptorCache" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::getPluginDescriptor(org.apache.maven.model.Plugin, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator" />
			<role name="State" element="org.apache.maven.plugin.prefix.PluginPrefixResolver" />
			<role name="state" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator::pluginPrefixResolver:org.apache.maven.plugin.prefix.PluginPrefixResolver" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.MojoDescriptorCreator::findPluginForPrefix(java.lang.String, org.apache.maven.execution.MavenSession):org.apache.maven.model.Plugin" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultMavenProjectBuilder" />
			<role name="State" element="org.apache.maven.project.ProjectBuilder" />
			<role name="state" element="org.apache.maven.project.DefaultMavenProjectBuilder::projectBuilder:org.apache.maven.project.ProjectBuilder" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::build(java.io.File, org.apache.maven.project.ProjectBuilderConfiguration):org.apache.maven.project.MavenProject" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::buildFromRepository(org.apache.maven.artifact.Artifact, java.util.List, org.apache.maven.project.ProjectBuilderConfiguration, boolean):org.apache.maven.project.MavenProject" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::buildStandaloneSuperProject(org.apache.maven.project.ProjectBuilderConfiguration):org.apache.maven.project.MavenProject" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::buildWithDependencies(java.io.File, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.profiles.ProfileManager, org.apache.maven.wagon.events.TransferListener):org.apache.maven.project.MavenProject" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="State" element="org.apache.maven.project.ProjectRealmCache" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuildingHelper::projectRealmCache:org.apache.maven.project.ProjectRealmCache" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::injectSession(org.apache.maven.artifact.repository.ArtifactRepository, boolean):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager" />
			<role name="State" element="org.apache.maven.repository.legacy.WagonManager" />
			<role name="state" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::wagonManager:org.apache.maven.repository.legacy.WagonManager" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::resolve(org.apache.maven.artifact.repository.metadata.RepositoryMetadata, org.apache.maven.artifact.repository.RepositoryRequest):void" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::getArtifactMetadataFromDeploymentRepository(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository):java.io.File" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::deploy(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.DefaultWagonManager" />
			<role name="State" element="org.apache.maven.repository.legacy.UpdateCheckManager" />
			<role name="state" element="org.apache.maven.repository.legacy.DefaultWagonManager::updateCheckManager:org.apache.maven.repository.legacy.UpdateCheckManager" />
			<role name="Request()" element="org.apache.maven.repository.legacy.DefaultWagonManager::getArtifact(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.wagon.events.TransferListener, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolutionPolicyTest" />
			<role name="State" element="org.apache.maven.repository.metadata.GraphConflictResolutionPolicy" />
			<role name="state" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolutionPolicyTest::policy:org.apache.maven.repository.metadata.GraphConflictResolutionPolicy" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolutionPolicyTest::testDefaultPolicy():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.deployer.DefaultArtifactDeployer" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.artifact.deployer.DefaultArtifactDeployer::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.artifact.deployer.DefaultArtifactDeployer::deploy(java.io.File, org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.installer.DefaultArtifactInstaller" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.artifact.installer.DefaultArtifactInstaller::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.artifact.installer.DefaultArtifactInstaller::install(java.io.File, org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.artifact.MavenMetadataSource" />
			<role name="State" element="org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager" />
			<role name="state" element="org.apache.maven.project.artifact.MavenMetadataSource::repositoryMetadataManager:org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::retrieveAvailableVersions(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest):java.util.List" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::retrieveAvailableVersionsFromDeploymentRepository(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.artifact.MavenMetadataSource" />
			<role name="State" element="org.apache.maven.project.artifact.MavenMetadataCache" />
			<role name="state" element="org.apache.maven.project.artifact.MavenMetadataSource::cache:org.apache.maven.project.artifact.MavenMetadataCache" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest):org.apache.maven.artifact.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="State" element="org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Context" element="org.apache.maven.execution.DefaultMavenExecutionRequest" />
			<role name="state" element="org.apache.maven.execution.DefaultMavenExecutionRequest::localRepository:org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Request()" element="org.apache.maven.execution.DefaultMavenExecutionRequest::setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.execution.MavenExecutionRequest" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager" />
			<role name="State" element="org.apache.maven.repository.legacy.UpdateCheckManager" />
			<role name="state" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::updateCheckManager:org.apache.maven.repository.legacy.UpdateCheckManager" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::resolve(org.apache.maven.artifact.repository.metadata.RepositoryMetadata, org.apache.maven.artifact.repository.RepositoryRequest):void" />
			<role name="Request()" element="org.apache.maven.artifact.repository.metadata.DefaultRepositoryMetadataManager::getArtifactMetadataFromDeploymentRepository(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository):java.io.File" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::getSession(org.apache.maven.artifact.repository.ArtifactRepository):org.sonatype.aether.RepositorySystemSession" />
			<role name="Request()" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::resolveTransitively(java.util.Set, org.apache.maven.artifact.Artifact, java.util.Map, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List, org.apache.maven.artifact.metadata.ArtifactMetadataSource, org.apache.maven.artifact.resolver.filter.ArtifactFilter, java.util.List, java.util.List):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="State" element="org.apache.maven.classrealm.ClassRealmManager" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::classRealmManager:org.apache.maven.classrealm.ClassRealmManager" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::createPluginRealm(org.apache.maven.plugin.descriptor.PluginDescriptor, org.apache.maven.execution.MavenSession, java.lang.ClassLoader, java.util.Map, org.sonatype.aether.graph.DependencyFilter):void" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::calcImports(org.apache.maven.project.MavenProject, java.lang.ClassLoader, java.util.List):java.util.Map" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.configuration.internal.DefaultBeanConfigurator$BeanExpressionEvaluator" />
			<role name="State" element="org.apache.maven.configuration.BeanConfigurationPathTranslator" />
			<role name="state" element="org.apache.maven.configuration.internal.DefaultBeanConfigurator$BeanExpressionEvaluator::translator:org.apache.maven.configuration.BeanConfigurationPathTranslator" />
			<role name="Request()" element="org.apache.maven.configuration.internal.DefaultBeanConfigurator$BeanExpressionEvaluator::alignToBaseDirectory(java.io.File):java.io.File" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.configuration.internal.DefaultBeanConfigurator$BeanExpressionEvaluator" />
			<role name="State" element="org.apache.maven.configuration.BeanConfigurationValuePreprocessor" />
			<role name="state" element="org.apache.maven.configuration.internal.DefaultBeanConfigurator$BeanExpressionEvaluator::preprocessor:org.apache.maven.configuration.BeanConfigurationValuePreprocessor" />
			<role name="Request()" element="org.apache.maven.configuration.internal.DefaultBeanConfigurator$BeanExpressionEvaluator::evaluate(java.lang.String, java.lang.Class):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor" />
			<role name="State" element="org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator" />
			<role name="state" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::lifecycleExecutionPlanCalculator:org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::calculateExecutionPlan(org.apache.maven.execution.MavenSession, boolean, java.lang.String[]):org.apache.maven.lifecycle.MavenExecutionPlan" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::calculateForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.MojoExecutor" />
			<role name="State" element="org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="state" element="org.apache.maven.lifecycle.internal.MojoExecutor::eventCatapult:org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.MojoExecutor::execute(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution, org.apache.maven.lifecycle.internal.ProjectIndex, org.apache.maven.lifecycle.internal.DependencyContext):void" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.MojoExecutor::executeForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession, org.apache.maven.lifecycle.internal.ProjectIndex):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.MojoExecutor" />
			<role name="State" element="org.apache.maven.plugin.BuildPluginManager" />
			<role name="state" element="org.apache.maven.lifecycle.internal.MojoExecutor::pluginManager:org.apache.maven.plugin.BuildPluginManager" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.MojoExecutor::execute(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution, org.apache.maven.lifecycle.internal.ProjectIndex, org.apache.maven.lifecycle.internal.DependencyContext):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.normalization.ModelNormalizer" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::modelNormalizer:org.apache.maven.model.normalization.ModelNormalizer" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.validation.ModelValidator" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::modelValidator:org.apache.maven.model.validation.ModelValidator" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::readModel(org.apache.maven.model.building.ModelSource, java.io.File, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector):org.apache.maven.model.Model" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest" />
			<role name="State" element="org.apache.maven.model.inheritance.InheritanceAssembler" />
			<role name="state" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest::assembler:org.apache.maven.model.inheritance.InheritanceAssembler" />
			<role name="Request()" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest::testPluginConfiguration():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.interpolation.PathTranslatingPostProcessor" />
			<role name="State" element="org.apache.maven.model.path.PathTranslator" />
			<role name="state" element="org.apache.maven.model.interpolation.PathTranslatingPostProcessor::pathTranslator:org.apache.maven.model.path.PathTranslator" />
			<role name="Request()" element="org.apache.maven.model.interpolation.PathTranslatingPostProcessor::execute(java.lang.String, java.lang.Object):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.interpolation.UrlNormalizingPostProcessor" />
			<role name="State" element="org.apache.maven.model.path.UrlNormalizer" />
			<role name="state" element="org.apache.maven.model.interpolation.UrlNormalizingPostProcessor::normalizer:org.apache.maven.model.path.UrlNormalizer" />
			<role name="Request()" element="org.apache.maven.model.interpolation.UrlNormalizingPostProcessor::execute(java.lang.String, java.lang.Object):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.DefaultBuildPluginManager" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.plugin.DefaultBuildPluginManager::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.plugin.DefaultBuildPluginManager::executeMojo(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultPluginManager" />
			<role name="State" element="org.apache.maven.plugin.MavenPluginManager" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultPluginManager::pluginManager:org.apache.maven.plugin.MavenPluginManager" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginComponent(org.apache.maven.model.Plugin, java.lang.String, java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginComponents(org.apache.maven.model.Plugin, java.lang.String):java.util.Map" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::loadPluginFully(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.execution.MavenSession):org.apache.maven.plugin.descriptor.PluginDescriptor" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::verifyPlugin(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="State" element="org.apache.maven.plugin.internal.PluginDependenciesResolver" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::pluginDependenciesResolver:org.apache.maven.plugin.internal.PluginDependenciesResolver" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::getPluginDescriptor(org.apache.maven.model.Plugin, java.util.List, org.sonatype.aether.RepositorySystemSession):org.apache.maven.plugin.descriptor.PluginDescriptor" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::createPluginRealm(org.apache.maven.plugin.descriptor.PluginDescriptor, org.apache.maven.execution.MavenSession, java.lang.ClassLoader, java.util.Map, org.sonatype.aether.graph.DependencyFilter):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver" />
			<role name="State" element="org.apache.maven.plugin.MavenPluginManager" />
			<role name="state" element="org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver::pluginManager:org.apache.maven.plugin.MavenPluginManager" />
			<role name="Request()" element="org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver::isCompatible(org.apache.maven.plugin.version.PluginVersionRequest, java.lang.String):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.DefaultMaven" />
			<role name="State" element="org.apache.maven.project.ProjectBuilder" />
			<role name="state" element="org.apache.maven.DefaultMaven::projectBuilder:org.apache.maven.project.ProjectBuilder" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::getProjectsForMavenReactor(org.apache.maven.execution.MavenExecutionRequest):java.util.List" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::collectProjects(java.util.List, java.util.List, org.apache.maven.execution.MavenExecutionRequest):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuilder" />
			<role name="State" element="org.apache.maven.model.building.ModelBuilder" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuilder::modelBuilder:org.apache.maven.model.building.ModelBuilder" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuilder::build(java.io.File, org.apache.maven.model.building.ModelSource, org.apache.maven.project.DefaultProjectBuilder$InternalConfig):org.apache.maven.project.ProjectBuildingResult" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuilder::build(java.util.List, java.util.List, java.util.Map, java.io.File, java.util.Set, boolean, boolean, org.apache.maven.project.DefaultProjectBuilder$InternalConfig):boolean" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuilder::build(java.util.List, java.util.List, java.util.Map, java.util.List, org.apache.maven.project.ProjectBuildingRequest, java.util.Map):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="State" element="org.apache.maven.repository.legacy.WagonManager" />
			<role name="state" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::wagonManager:org.apache.maven.repository.legacy.WagonManager" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::retrieve(org.apache.maven.artifact.repository.ArtifactRepository, java.io.File, java.lang.String, org.apache.maven.repository.ArtifactTransferListener):void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::publish(org.apache.maven.artifact.repository.ArtifactRepository, java.io.File, java.lang.String, org.apache.maven.repository.ArtifactTransferListener):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.settings.building.DefaultSettingsBuilder" />
			<role name="State" element="org.apache.maven.settings.io.SettingsReader" />
			<role name="state" element="org.apache.maven.settings.building.DefaultSettingsBuilder::settingsReader:org.apache.maven.settings.io.SettingsReader" />
			<role name="Request()" element="org.apache.maven.settings.building.DefaultSettingsBuilder::readSettings(org.apache.maven.settings.building.SettingsSource, org.apache.maven.settings.building.SettingsBuildingRequest, org.apache.maven.settings.building.DefaultSettingsProblemCollector):org.apache.maven.settings.Settings" />
			<role name="Request()" element="org.apache.maven.settings.building.DefaultSettingsBuilder::interpolate(org.apache.maven.settings.Settings, org.apache.maven.settings.building.SettingsBuildingRequest, org.apache.maven.settings.building.SettingsProblemCollector):org.apache.maven.settings.Settings" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.ProjectDependenciesResolverTest" />
			<role name="State" element="org.apache.maven.ProjectDependenciesResolver" />
			<role name="state" element="org.apache.maven.ProjectDependenciesResolverTest::resolver:org.apache.maven.ProjectDependenciesResolver" />
			<role name="Request()" element="org.apache.maven.ProjectDependenciesResolverTest::testSystemScopeDependencies():void" />
			<role name="Request()" element="org.apache.maven.ProjectDependenciesResolverTest::testSystemScopeDependencyIsPresentInTheCompileClasspathElements():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver" />
			<role name="State" element="org.apache.maven.ArtifactFilterManager" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver::artifactFilterManager:org.apache.maven.ArtifactFilterManager" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver::resolve(org.apache.maven.model.Plugin, org.sonatype.aether.artifact.Artifact, org.sonatype.aether.graph.DependencyFilter, java.util.List, org.sonatype.aether.RepositorySystemSession):org.sonatype.aether.graph.DependencyNode" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.DefaultMaven" />
			<role name="State" element="org.apache.maven.execution.MavenExecutionRequestPopulator" />
			<role name="state" element="org.apache.maven.DefaultMaven::populator:org.apache.maven.execution.MavenExecutionRequestPopulator" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::execute(org.apache.maven.execution.MavenExecutionRequest):org.apache.maven.execution.MavenExecutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.DefaultMaven" />
			<role name="State" element="org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="state" element="org.apache.maven.DefaultMaven::eventCatapult:org.apache.maven.lifecycle.internal.ExecutionEventCatapult" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::doExecute(org.apache.maven.execution.MavenExecutionRequest):org.apache.maven.execution.MavenExecutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.DefaultMaven" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.DefaultMaven::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::execute(org.apache.maven.execution.MavenExecutionRequest):org.apache.maven.execution.MavenExecutionResult" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::doExecute(org.apache.maven.execution.MavenExecutionRequest):org.apache.maven.execution.MavenExecutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.DefaultMaven" />
			<role name="State" element="org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="state" element="org.apache.maven.DefaultMaven::settingsDecrypter:org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="Request()" element="org.apache.maven.DefaultMaven::newRepositorySession(org.apache.maven.execution.MavenExecutionRequest):org.sonatype.aether.RepositorySystemSession" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.deployer.ArtifactDeployerTest" />
			<role name="State" element="org.apache.maven.artifact.deployer.ArtifactDeployer" />
			<role name="state" element="org.apache.maven.artifact.deployer.ArtifactDeployerTest::artifactDeployer:org.apache.maven.artifact.deployer.ArtifactDeployer" />
			<role name="Request()" element="org.apache.maven.artifact.deployer.ArtifactDeployerTest::testArtifactInstallation():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.installer.ArtifactInstallerTest" />
			<role name="State" element="org.apache.maven.artifact.installer.ArtifactInstaller" />
			<role name="state" element="org.apache.maven.artifact.installer.ArtifactInstallerTest::artifactInstaller:org.apache.maven.artifact.installer.ArtifactInstaller" />
			<role name="Request()" element="org.apache.maven.artifact.installer.ArtifactInstallerTest::testArtifactInstallation():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.factory.DefaultArtifactFactory" />
			<role name="State" element="org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="state" element="org.apache.maven.artifact.factory.DefaultArtifactFactory::artifactHandlerManager:org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="Request()" element="org.apache.maven.artifact.factory.DefaultArtifactFactory::createArtifact(java.lang.String, java.lang.String, org.apache.maven.artifact.versioning.VersionRange, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean):org.apache.maven.artifact.Artifact" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.metadata.TestMetadataSource" />
			<role name="State" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="state" element="org.apache.maven.repository.metadata.TestMetadataSource::factory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Request()" element="org.apache.maven.repository.metadata.TestMetadataSource::retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.repository.legacy.metadata.ResolutionGroup" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.RepositoryUtils$MavenArtifactTypeRegistry" />
			<role name="State" element="org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="state" element="org.apache.maven.RepositoryUtils$MavenArtifactTypeRegistry::handlerManager:org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="Request()" element="org.apache.maven.RepositoryUtils$MavenArtifactTypeRegistry::get(java.lang.String):org.sonatype.aether.artifact.ArtifactType" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultMavenProjectHelper" />
			<role name="State" element="org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="state" element="org.apache.maven.project.DefaultMavenProjectHelper::artifactHandlerManager:org.apache.maven.artifact.handler.manager.ArtifactHandlerManager" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectHelper::attachArtifact(org.apache.maven.project.MavenProject, java.lang.String, java.lang.String, java.io.File):void" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectHelper::attachArtifact(org.apache.maven.project.MavenProject, java.lang.String, java.io.File):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.manager.DefaultWagonManager" />
			<role name="State" element="org.apache.maven.artifact.repository.ArtifactRepositoryFactory" />
			<role name="state" element="org.apache.maven.artifact.manager.DefaultWagonManager::artifactRepositoryFactory:org.apache.maven.artifact.repository.ArtifactRepositoryFactory" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getMirrorRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.manager.DefaultWagonManager" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.artifact.manager.DefaultWagonManager::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getAuthenticationInfo(java.lang.String):org.apache.maven.wagon.authentication.AuthenticationInfo" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getProxy(java.lang.String):org.apache.maven.wagon.proxy.ProxyInfo" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getMirrorRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.manager.DefaultWagonManager" />
			<role name="State" element="org.apache.maven.repository.MirrorSelector" />
			<role name="state" element="org.apache.maven.artifact.manager.DefaultWagonManager::mirrorSelector:org.apache.maven.repository.MirrorSelector" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getMirrorRepository(org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.manager.DefaultWagonManager" />
			<role name="State" element="org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="state" element="org.apache.maven.artifact.manager.DefaultWagonManager::settingsDecrypter:org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getAuthenticationInfo(java.lang.String):org.apache.maven.wagon.authentication.AuthenticationInfo" />
			<role name="Request()" element="org.apache.maven.artifact.manager.DefaultWagonManager::getProxy(java.lang.String):org.apache.maven.wagon.proxy.ProxyInfo" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver" />
			<role name="State" element="org.apache.maven.artifact.metadata.ArtifactMetadataSource" />
			<role name="state" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::source:org.apache.maven.artifact.metadata.ArtifactMetadataSource" />
			<role name="Request()" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::resolve(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.artifact.MavenMetadataSource" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.project.artifact.MavenMetadataSource::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::injectSession(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest):void" />
			<role name="Request()" element="org.apache.maven.project.artifact.MavenMetadataSource::retrieveRelocatedProject(org.apache.maven.artifact.Artifact, org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest):org.apache.maven.project.artifact.MavenMetadataSource$ProjectRelocation" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.artifact.repository.DefaultArtifactRepositoryFactory::injectSession(org.apache.maven.artifact.repository.ArtifactRepository, boolean):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver" />
			<role name="State" element="org.apache.maven.artifact.repository.metadata.io.MetadataReader" />
			<role name="state" element="org.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver::metadataReader:org.apache.maven.artifact.repository.metadata.io.MetadataReader" />
			<role name="Request()" element="org.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver::resolveFromRepository(org.apache.maven.plugin.prefix.PluginPrefixRequest, org.sonatype.aether.RequestTrace, java.lang.String, org.sonatype.aether.metadata.Metadata, org.sonatype.aether.repository.ArtifactRepository):org.apache.maven.plugin.prefix.PluginPrefixResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver" />
			<role name="State" element="org.apache.maven.artifact.repository.metadata.io.MetadataReader" />
			<role name="state" element="org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver::metadataReader:org.apache.maven.artifact.repository.metadata.io.MetadataReader" />
			<role name="Request()" element="org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver::mergeMetadata(org.sonatype.aether.RepositorySystemSession, org.sonatype.aether.RequestTrace, org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver$Versions, org.sonatype.aether.metadata.Metadata, org.sonatype.aether.repository.ArtifactRepository):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver" />
			<role name="State" element="org.apache.maven.artifact.resolver.ResolutionErrorHandler" />
			<role name="state" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::resolutionErrorHandler:org.apache.maven.artifact.resolver.ResolutionErrorHandler" />
			<role name="Request()" element="org.apache.maven.artifact.resolver.DefaultArtifactResolver::resolveWithExceptions(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="State" element="org.apache.maven.artifact.resolver.ArtifactResolver" />
			<role name="state" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::artifactResolver:org.apache.maven.artifact.resolver.ArtifactResolver" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::resolve(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.DefaultProjectDependenciesResolver" />
			<role name="State" element="org.apache.maven.artifact.resolver.ResolutionErrorHandler" />
			<role name="state" element="org.apache.maven.DefaultProjectDependenciesResolver::resolutionErrorHandler:org.apache.maven.artifact.resolver.ResolutionErrorHandler" />
			<role name="Request()" element="org.apache.maven.DefaultProjectDependenciesResolver::resolveImpl(java.util.Collection, java.util.Collection, java.util.Collection, org.apache.maven.execution.MavenSession, java.util.Set):java.util.Set" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.PluginDependencyResolutionListener" />
			<role name="State" element="org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="state" element="org.apache.maven.plugin.internal.PluginDependencyResolutionListener::coreFilter:org.apache.maven.artifact.resolver.filter.ArtifactFilter" />
			<role name="Request()" element="org.apache.maven.plugin.internal.PluginDependencyResolutionListener::isLegacyCoreArtifact(org.apache.maven.artifact.Artifact):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.execution.DefaultRuntimeInformation" />
			<role name="State" element="org.apache.maven.rtinfo.RuntimeInformation" />
			<role name="state" element="org.apache.maven.execution.DefaultRuntimeInformation::rtInfo:org.apache.maven.rtinfo.RuntimeInformation" />
			<role name="Request()" element="org.apache.maven.execution.DefaultRuntimeInformation::initialize():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector" />
			<role name="State" element="org.apache.maven.lifecycle.LifeCyclePluginAnalyzer" />
			<role name="state" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector::lifecycle:org.apache.maven.lifecycle.LifeCyclePluginAnalyzer" />
			<role name="Request()" element="org.apache.maven.model.plugin.DefaultLifecycleBindingsInjector::injectLifecycleBindings(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor" />
			<role name="State" element="org.apache.maven.lifecycle.LifeCyclePluginAnalyzer" />
			<role name="state" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::lifeCyclePluginAnalyzer:org.apache.maven.lifecycle.LifeCyclePluginAnalyzer" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::getPluginsBoundByDefaultToAllLifecycles(java.lang.String):java.util.Set" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator" />
			<role name="State" element="org.apache.maven.plugin.BuildPluginManager" />
			<role name="state" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::pluginManager:org.apache.maven.plugin.BuildPluginManager" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::setupMojoExecution(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.plugin.MojoExecution):void" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::calculateLifecycleMappings(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, java.lang.String):java.util.Map" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator::calculateForkedLifecycle(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, java.util.Collection):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor" />
			<role name="State" element="org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator" />
			<role name="state" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::lifecycleTaskSegmentCalculator:org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator" />
			<role name="Request()" element="org.apache.maven.lifecycle.DefaultLifecycleExecutor::calculateExecutionPlan(org.apache.maven.execution.MavenSession, boolean, java.lang.String[]):org.apache.maven.lifecycle.MavenExecutionPlan" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.lifecycle.internal.MojoExecutor" />
			<role name="State" element="org.apache.maven.plugin.MavenPluginManager" />
			<role name="state" element="org.apache.maven.lifecycle.internal.MojoExecutor::mavenPluginManager:org.apache.maven.plugin.MavenPluginManager" />
			<role name="Request()" element="org.apache.maven.lifecycle.internal.MojoExecutor::execute(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution, org.apache.maven.lifecycle.internal.ProjectIndex, org.apache.maven.lifecycle.internal.DependencyContext):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.composition.DependencyManagementImporter" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::dependencyManagementImporter:org.apache.maven.model.composition.DependencyManagementImporter" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::importDependencyManagement(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector, java.util.Collection):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.inheritance.InheritanceAssembler" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::inheritanceAssembler:org.apache.maven.model.inheritance.InheritanceAssembler" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::assembleInheritance(java.util.List, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.management.DependencyManagementInjector" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::dependencyManagementInjector:org.apache.maven.model.management.DependencyManagementInjector" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.management.PluginManagementInjector" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::pluginManagementInjector:org.apache.maven.model.management.PluginManagementInjector" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.path.ModelPathTranslator" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::modelPathTranslator:org.apache.maven.model.path.ModelPathTranslator" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.path.ModelUrlNormalizer" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::modelUrlNormalizer:org.apache.maven.model.path.ModelUrlNormalizer" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.plugin.LifecycleBindingsInjector" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::lifecycleBindingsInjector:org.apache.maven.model.plugin.LifecycleBindingsInjector" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.plugin.PluginConfigurationExpander" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::pluginConfigurationExpander:org.apache.maven.model.plugin.PluginConfigurationExpander" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.plugin.ReportConfigurationExpander" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::reportConfigurationExpander:org.apache.maven.model.plugin.ReportConfigurationExpander" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.plugin.ReportingConverter" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::reportingConverter:org.apache.maven.model.plugin.ReportingConverter" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.profile.ProfileInjector" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::profileInjector:org.apache.maven.model.profile.ProfileInjector" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.profile.ProfileSelector" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::profileSelector:org.apache.maven.model.profile.ProfileSelector" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::build(org.apache.maven.model.building.ModelBuildingRequest, java.util.Collection):org.apache.maven.model.building.ModelBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.superpom.SuperPomProvider" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::superPomProvider:org.apache.maven.model.superpom.SuperPomProvider" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::getSuperModel():org.apache.maven.model.Model" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelProcessor" />
			<role name="State" element="org.apache.maven.model.locator.ModelLocator" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelProcessor::locator:org.apache.maven.model.locator.ModelLocator" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelProcessor::locatePom(java.io.File):java.io.File" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.building.DefaultModelBuilder" />
			<role name="State" element="org.apache.maven.model.interpolation.ModelInterpolator" />
			<role name="state" element="org.apache.maven.model.building.DefaultModelBuilder::modelInterpolator:org.apache.maven.model.interpolation.ModelInterpolator" />
			<role name="Request()" element="org.apache.maven.model.building.DefaultModelBuilder::interpolateModel(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector):org.apache.maven.model.Model" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest" />
			<role name="State" element="org.apache.maven.model.io.ModelWriter" />
			<role name="state" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest::writer:org.apache.maven.model.io.ModelWriter" />
			<role name="Request()" element="org.apache.maven.model.inheritance.DefaultInheritanceAssemblerTest::testPluginConfiguration():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.path.DefaultModelPathTranslator" />
			<role name="State" element="org.apache.maven.model.path.PathTranslator" />
			<role name="state" element="org.apache.maven.model.path.DefaultModelPathTranslator::pathTranslator:org.apache.maven.model.path.PathTranslator" />
			<role name="Request()" element="org.apache.maven.model.path.DefaultModelPathTranslator::alignToBaseDirectory(java.lang.String, java.io.File):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.path.DefaultModelUrlNormalizer" />
			<role name="State" element="org.apache.maven.model.path.UrlNormalizer" />
			<role name="state" element="org.apache.maven.model.path.DefaultModelUrlNormalizer::urlNormalizer:org.apache.maven.model.path.UrlNormalizer" />
			<role name="Request()" element="org.apache.maven.model.path.DefaultModelUrlNormalizer::normalize(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.model.profile.activation.FileProfileActivator" />
			<role name="State" element="org.apache.maven.model.path.PathTranslator" />
			<role name="state" element="org.apache.maven.model.profile.activation.FileProfileActivator::pathTranslator:org.apache.maven.model.path.PathTranslator" />
			<role name="Request()" element="org.apache.maven.model.profile.activation.FileProfileActivator::isActive(org.apache.maven.model.Profile, org.apache.maven.model.profile.ProfileActivationContext, org.apache.maven.model.building.ModelProblemCollector):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.profiles.DefaultProfileManager" />
			<role name="State" element="org.apache.maven.model.profile.ProfileSelector" />
			<role name="state" element="org.apache.maven.profiles.DefaultProfileManager::profileSelector:org.apache.maven.model.profile.ProfileSelector" />
			<role name="Request()" element="org.apache.maven.profiles.DefaultProfileManager::getActiveProfiles():java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.validation.DefaultModelValidator" />
			<role name="State" element="org.apache.maven.model.validation.ModelValidator" />
			<role name="state" element="org.apache.maven.project.validation.DefaultModelValidator::modelValidator:org.apache.maven.model.validation.ModelValidator" />
			<role name="Request()" element="org.apache.maven.project.validation.DefaultModelValidator::validate(org.apache.maven.model.Model):org.apache.maven.project.validation.ModelValidationResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver" />
			<role name="State" element="org.apache.maven.plugin.BuildPluginManager" />
			<role name="state" element="org.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver::pluginManager:org.apache.maven.plugin.BuildPluginManager" />
			<role name="Request()" element="org.apache.maven.plugin.prefix.internal.DefaultPluginPrefixResolver::resolveFromProject(org.apache.maven.plugin.prefix.PluginPrefixRequest, java.util.List):org.apache.maven.plugin.prefix.PluginPrefixResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultPluginManager" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultPluginManager::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginComponent(org.apache.maven.model.Plugin, java.lang.String, java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginComponents(org.apache.maven.model.Plugin, java.lang.String):java.util.Map" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginDescriptorForPrefix(java.lang.String):org.apache.maven.plugin.descriptor.PluginDescriptor" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::verifyPlugin(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultMavenProjectBuilder" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.project.DefaultMavenProjectBuilder::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::toRequest(org.apache.maven.project.ProjectBuilderConfiguration):org.apache.maven.project.ProjectBuildingRequest" />
			<role name="Request()" element="org.apache.maven.project.DefaultMavenProjectBuilder::injectSession(org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectBuildingRequest" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager" />
			<role name="State" element="org.apache.maven.rtinfo.RuntimeInformation" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::runtimeInformation:org.apache.maven.rtinfo.RuntimeInformation" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultMavenPluginManager::checkRequiredMavenVersion(org.apache.maven.plugin.descriptor.PluginDescriptor):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="State" element="org.apache.maven.plugin.internal.PluginDependenciesResolver" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuildingHelper::pluginDependenciesResolver:org.apache.maven.plugin.internal.PluginDependenciesResolver" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::resolveExtensionArtifacts(org.apache.maven.model.Plugin, java.util.List, org.apache.maven.project.ProjectBuildingRequest):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultPluginManager" />
			<role name="State" element="org.apache.maven.plugin.prefix.PluginPrefixResolver" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultPluginManager::pluginPrefixResolver:org.apache.maven.plugin.prefix.PluginPrefixResolver" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginDefinitionForPrefix(java.lang.String, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject):org.apache.maven.model.Plugin" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::getPluginDescriptorForPrefix(java.lang.String):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.plugin.internal.DefaultPluginManager" />
			<role name="State" element="org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="state" element="org.apache.maven.plugin.internal.DefaultPluginManager::pluginVersionResolver:org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="Request()" element="org.apache.maven.plugin.internal.DefaultPluginManager::verifyPlugin(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository):org.apache.maven.plugin.descriptor.PluginDescriptor" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuildingHelper" />
			<role name="State" element="org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuildingHelper::pluginVersionResolver:org.apache.maven.plugin.version.PluginVersionResolver" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuildingHelper::createProjectRealm(org.apache.maven.project.MavenProject, org.apache.maven.model.Model, org.apache.maven.project.ProjectBuildingRequest):org.apache.maven.project.ProjectRealmCache$CacheRecord" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuilder" />
			<role name="State" element="org.apache.maven.project.ProjectBuildingHelper" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuilder::projectBuildingHelper:org.apache.maven.project.ProjectBuildingHelper" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuilder::build(java.io.File, org.apache.maven.model.building.ModelSource, org.apache.maven.project.DefaultProjectBuilder$InternalConfig):org.apache.maven.project.ProjectBuildingResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuilder" />
			<role name="State" element="org.apache.maven.project.ProjectDependenciesResolver" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuilder::dependencyResolver:org.apache.maven.project.ProjectDependenciesResolver" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuilder::resolveDependencies(org.apache.maven.project.MavenProject, org.sonatype.aether.RepositorySystemSession):org.apache.maven.project.DependencyResolutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.interpolation.PathTranslatingPostProcessor" />
			<role name="State" element="org.apache.maven.project.path.PathTranslator" />
			<role name="state" element="org.apache.maven.project.interpolation.PathTranslatingPostProcessor::pathTranslator:org.apache.maven.project.path.PathTranslator" />
			<role name="Request()" element="org.apache.maven.project.interpolation.PathTranslatingPostProcessor::execute(java.lang.String, java.lang.Object):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.DefaultProjectDependenciesResolver" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.DefaultProjectDependenciesResolver::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.DefaultProjectDependenciesResolver::resolveImpl(java.util.Collection, java.util.Collection, java.util.Collection, org.apache.maven.execution.MavenSession, java.util.Set):java.util.Set" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.TestRepositorySystem" />
			<role name="State" element="org.apache.maven.model.io.ModelReader" />
			<role name="state" element="org.apache.maven.repository.TestRepositorySystem::modelReader:org.apache.maven.model.io.ModelReader" />
			<role name="Request()" element="org.apache.maven.repository.TestRepositorySystem::resolve(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):org.apache.maven.artifact.resolver.ArtifactResolutionResult" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.project.DefaultProjectBuilder" />
			<role name="State" element="org.apache.maven.repository.RepositorySystem" />
			<role name="state" element="org.apache.maven.project.DefaultProjectBuilder::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Request()" element="org.apache.maven.project.DefaultProjectBuilder::initProject(org.apache.maven.project.MavenProject, java.util.Map, org.apache.maven.model.building.ModelBuildingResult, java.util.Map):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="State" element="org.apache.maven.repository.MirrorSelector" />
			<role name="state" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::mirrorSelector:org.apache.maven.repository.MirrorSelector" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::getMirror(org.apache.maven.artifact.repository.ArtifactRepository, java.util.List):org.apache.maven.settings.Mirror" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="State" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="state" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::artifactRepositoryFactory:org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::createArtifactRepository(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy):org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.LegacyRepositorySystem" />
			<role name="State" element="org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="state" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::settingsDecrypter:org.apache.maven.settings.crypto.SettingsDecrypter" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::injectAuthentication(java.util.List, java.util.List):void" />
			<role name="Request()" element="org.apache.maven.repository.legacy.LegacyRepositorySystem::injectProxy(java.util.List, java.util.List):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.legacy.resolver.DefaultLegacyArtifactCollector" />
			<role name="State" element="org.apache.maven.plugin.LegacySupport" />
			<role name="state" element="org.apache.maven.repository.legacy.resolver.DefaultLegacyArtifactCollector::legacySupport:org.apache.maven.plugin.LegacySupport" />
			<role name="Request()" element="org.apache.maven.repository.legacy.resolver.DefaultLegacyArtifactCollector::injectSession(org.apache.maven.artifact.resolver.ArtifactResolutionRequest):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.metadata.DefaultClasspathTransformation" />
			<role name="State" element="org.apache.maven.repository.metadata.GraphConflictResolver" />
			<role name="state" element="org.apache.maven.repository.metadata.DefaultClasspathTransformation::conflictResolver:org.apache.maven.repository.metadata.GraphConflictResolver" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultClasspathTransformation::transform(org.apache.maven.repository.metadata.MetadataGraph, org.apache.maven.artifact.ArtifactScopeEnum, boolean):org.apache.maven.repository.metadata.ClasspathContainer" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolver" />
			<role name="State" element="org.apache.maven.repository.metadata.GraphConflictResolutionPolicy" />
			<role name="state" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolver::policy:org.apache.maven.repository.metadata.GraphConflictResolutionPolicy" />
			<role name="Request()" element="org.apache.maven.repository.metadata.DefaultGraphConflictResolver::cleanEdges(org.apache.maven.repository.metadata.MetadataGraphVertex, java.util.List, org.apache.maven.artifact.ArtifactScopeEnum):org.apache.maven.repository.metadata.MetadataGraphEdge" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.settings.DefaultMavenSettingsBuilder" />
			<role name="State" element="org.apache.maven.settings.building.SettingsBuilder" />
			<role name="state" element="org.apache.maven.settings.DefaultMavenSettingsBuilder::settingsBuilder:org.apache.maven.settings.building.SettingsBuilder" />
			<role name="Request()" element="org.apache.maven.settings.DefaultMavenSettingsBuilder::build(org.apache.maven.settings.building.SettingsBuildingRequest):org.apache.maven.settings.Settings" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.settings.building.DefaultSettingsBuilder" />
			<role name="State" element="org.apache.maven.settings.io.SettingsWriter" />
			<role name="state" element="org.apache.maven.settings.building.DefaultSettingsBuilder::settingsWriter:org.apache.maven.settings.io.SettingsWriter" />
			<role name="Request()" element="org.apache.maven.settings.building.DefaultSettingsBuilder::interpolate(org.apache.maven.settings.Settings, org.apache.maven.settings.building.SettingsBuildingRequest, org.apache.maven.settings.building.SettingsProblemCollector):org.apache.maven.settings.Settings" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.settings.building.DefaultSettingsBuilder" />
			<role name="State" element="org.apache.maven.settings.validation.SettingsValidator" />
			<role name="state" element="org.apache.maven.settings.building.DefaultSettingsBuilder::settingsValidator:org.apache.maven.settings.validation.SettingsValidator" />
			<role name="Request()" element="org.apache.maven.settings.building.DefaultSettingsBuilder::readSettings(org.apache.maven.settings.building.SettingsSource, org.apache.maven.settings.building.SettingsBuildingRequest, org.apache.maven.settings.building.DefaultSettingsProblemCollector):org.apache.maven.settings.Settings" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.maven.toolchain.DefaultToolchainManagerPrivate" />
			<role name="State" element="org.apache.maven.toolchain.ToolchainsBuilder" />
			<role name="state" element="org.apache.maven.toolchain.DefaultToolchainManagerPrivate::toolchainsBuilder:org.apache.maven.toolchain.ToolchainsBuilder" />
			<role name="Request()" element="org.apache.maven.toolchain.DefaultToolchainManagerPrivate::getToolchainsForType(java.lang.String, org.apache.maven.execution.MavenSession):org.apache.maven.toolchain.ToolchainPrivate[]" />
		</instance>
	</pattern>
	<pattern name="Strategy" />
	<pattern name="Bridge">
		<instance>
			<role name="Abstraction" element="org.apache.maven.repository.legacy.metadata.AbstractArtifactMetadata" />
			<role name="Implementor" element="org.apache.maven.artifact.Artifact" />
			<role name="implementor" element="org.apache.maven.repository.legacy.metadata.AbstractArtifactMetadata::artifact:org.apache.maven.artifact.Artifact" />
			<role name="Operation()" element="org.apache.maven.repository.legacy.metadata.AbstractArtifactMetadata::getGroupId():java.lang.String" />
			<role name="Operation()" element="org.apache.maven.repository.legacy.metadata.AbstractArtifactMetadata::getArtifactId():java.lang.String" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.AbstractCoreMavenComponentTestCase" />
			<role name="Implementor" element="org.apache.maven.repository.RepositorySystem" />
			<role name="implementor" element="org.apache.maven.AbstractCoreMavenComponentTestCase::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Operation()" element="org.apache.maven.AbstractCoreMavenComponentTestCase::getRemoteRepositories():java.util.List" />
			<role name="Operation()" element="org.apache.maven.AbstractCoreMavenComponentTestCase::getLocalRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.project.AbstractMavenProjectTestCase" />
			<role name="Implementor" element="org.apache.maven.project.ProjectBuilder" />
			<role name="implementor" element="org.apache.maven.project.AbstractMavenProjectTestCase::projectBuilder:org.apache.maven.project.ProjectBuilder" />
			<role name="Operation()" element="org.apache.maven.project.AbstractMavenProjectTestCase::getProjectWithDependencies(java.io.File):org.apache.maven.project.MavenProject" />
			<role name="Operation()" element="org.apache.maven.project.AbstractMavenProjectTestCase::getProject(java.io.File):org.apache.maven.project.MavenProject" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.project.AbstractMavenProjectTestCase" />
			<role name="Implementor" element="org.apache.maven.repository.RepositorySystem" />
			<role name="implementor" element="org.apache.maven.project.AbstractMavenProjectTestCase::repositorySystem:org.apache.maven.repository.RepositorySystem" />
			<role name="Operation()" element="org.apache.maven.project.AbstractMavenProjectTestCase::getLocalRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase" />
			<role name="Implementor" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="implementor" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::artifactFactory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Operation()" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String):org.apache.maven.artifact.Artifact" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.repository.legacy.resolver.transform.AbstractVersionTransformation" />
			<role name="Implementor" element="org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager" />
			<role name="implementor" element="org.apache.maven.repository.legacy.resolver.transform.AbstractVersionTransformation::repositoryMetadataManager:org.apache.maven.artifact.repository.metadata.RepositoryMetadataManager" />
			<role name="Operation()" element="org.apache.maven.repository.legacy.resolver.transform.AbstractVersionTransformation::resolveVersion(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.RepositoryRequest):java.lang.String" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.AbstractCoreMavenComponentTestCase" />
			<role name="Implementor" element="org.apache.maven.project.ProjectBuilder" />
			<role name="implementor" element="org.apache.maven.AbstractCoreMavenComponentTestCase::projectBuilder:org.apache.maven.project.ProjectBuilder" />
			<role name="Operation()" element="org.apache.maven.AbstractCoreMavenComponentTestCase::createMavenSession(java.io.File, java.util.Properties):org.apache.maven.execution.MavenSession" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase" />
			<role name="Implementor" element="org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="implementor" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::artifactRepositoryFactory:org.apache.maven.repository.legacy.repository.ArtifactRepositoryFactory" />
			<role name="Operation()" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::badLocalRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Operation()" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::localRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Operation()" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::remoteRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="Operation()" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::badRemoteRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.model.profile.activation.AbstractProfileActivatorTest" />
			<role name="Implementor" element="org.apache.maven.model.profile.activation.ProfileActivator" />
			<role name="implementor" element="org.apache.maven.model.profile.activation.AbstractProfileActivatorTest::activator:org.apache.maven.model.profile.activation.ProfileActivator" />
			<role name="Operation()" element="org.apache.maven.model.profile.activation.AbstractProfileActivatorTest::assertActivation(boolean, org.apache.maven.model.Profile, org.apache.maven.model.profile.ProfileActivationContext):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.maven.repository.legacy.resolver.conflict.AbstractConflictResolverTest" />
			<role name="Implementor" element="org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="implementor" element="org.apache.maven.repository.legacy.resolver.conflict.AbstractConflictResolverTest::artifactFactory:org.apache.maven.artifact.factory.ArtifactFactory" />
			<role name="Operation()" element="org.apache.maven.repository.legacy.resolver.conflict.AbstractConflictResolverTest::createArtifact(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean):org.apache.maven.artifact.Artifact" />
		</instance>
	</pattern>
	<pattern name="Template Method">
		<instance>
			<role name="AbstractClass" element="org.apache.maven.AbstractCoreMavenComponentTestCase" />
			<role name="TemplateMethod()" element="org.apache.maven.AbstractCoreMavenComponentTestCase::getProject(java.lang.String):java.io.File" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testShouldNotThrowExceptionOnReferenceToNonExistentValue():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testShouldThrowExceptionOnRecursiveScmConnectionReference():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testShouldNotThrowExceptionOnReferenceToValueContainingNakedExpression():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testShouldInterpolateOrganizationNameCorrectly():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testShouldInterpolateDependencyVersionToSetSameAsProjectVersion():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testShouldNotInterpolateDependencyVersionWithInvalidReference():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testTwoReferences():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testBasedir():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testBaseUri():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testEnvars():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testEnvarExpressionThatEvaluatesToNullReturnsTheLiteralString():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testExpressionThatEvaluatesToNullReturnsTheLiteralString():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testShouldInterpolateSourceDirectoryReferencedFromResourceDirectoryCorrectly():void" />
			<role name="TemplateMethod()" element="org.apache.maven.model.interpolation.AbstractModelInterpolatorTest::testShouldInterpolateUnprefixedBasedirExpression():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.maven.profiles.activation.DetectedProfileActivator" />
			<role name="TemplateMethod()" element="org.apache.maven.profiles.activation.DetectedProfileActivator::canDetermineActivation(org.apache.maven.model.Profile):boolean" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.maven.project.interpolation.AbstractStringBasedModelInterpolator" />
			<role name="TemplateMethod()" element="org.apache.maven.project.interpolation.AbstractStringBasedModelInterpolator::initialize():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.maven.repository.internal.MavenMetadata" />
			<role name="TemplateMethod()" element="org.apache.maven.repository.internal.MavenMetadata::merge(java.io.File, java.io.File):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.maven.repository.legacy.resolver.transform.AbstractVersionTransformation" />
			<role name="TemplateMethod()" element="org.apache.maven.repository.legacy.resolver.transform.AbstractVersionTransformation::resolveVersion(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.RepositoryRequest):java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase" />
			<role name="TemplateMethod()" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::badLocalRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="TemplateMethod()" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::localRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
			<role name="TemplateMethod()" element="org.apache.maven.artifact.AbstractArtifactComponentTestCase::remoteRepository():org.apache.maven.artifact.repository.ArtifactRepository" />
		</instance>
	</pattern>
	<pattern name="Visitor" />
	<pattern name="Proxy">
		<instance>
			<role name="Proxy" element="org.apache.maven.repository.DelegatingLocalArtifactRepository" />
			<role name="RealSubject" element="org.apache.maven.repository.LocalArtifactRepository" />
			<role name="Request()" element="org.apache.maven.repository.DelegatingLocalArtifactRepository::find(org.apache.maven.artifact.Artifact):org.apache.maven.artifact.Artifact" />
		</instance>
	</pattern>
	<pattern name="Proxy2" />
	<pattern name="Chain of Responsibility" />
</system>

