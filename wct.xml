<?xml version="1.0" encoding="UTF-8"?>
<system>
	<pattern name="Factory Method">
		<instance>
			<role name="Creator" element="nz.govt.natlib.ndha.wctdpsdepositor.extractor.filefinder.FileArchiveBuilder" />
			<role name="FactoryMethod()" element="nz.govt.natlib.ndha.wctdpsdepositor.extractor.filefinder.FileArchiveBuilder::createFileFrom(java.lang.String, java.lang.String, java.lang.String):nz.govt.natlib.ndha.wctdpsdepositor.extractor.FileSystemArchiveFile" />
		</instance>
		<instance>
			<role name="Creator" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsWriterFactory" />
			<role name="FactoryMethod()" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsWriterFactory::createMetsWriter():nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsWriter" />
		</instance>
		<instance>
			<role name="Creator" element="org.webcurator.core.harvester.agent.HarvestAgentFactory" />
			<role name="FactoryMethod()" element="org.webcurator.core.harvester.agent.HarvestAgentFactory::getHarvestAgent(java.lang.String, int):org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="FactoryMethod()" element="org.webcurator.core.harvester.agent.HarvestAgentFactory::getLogReader(java.lang.String, int):org.webcurator.core.reader.LogReader" />
		</instance>
		<instance>
			<role name="Creator" element="org.webcurator.core.store.DigitalAssetStore" />
			<role name="FactoryMethod()" element="org.webcurator.core.store.DigitalAssetStore::copyAndPrune(java.lang.String, int, int, java.util.List, java.util.List):org.webcurator.domain.model.core.HarvestResultDTO" />
		</instance>
		<instance>
			<role name="Creator" element="org.webcurator.core.store.DigitalAssetStoreFactory" />
			<role name="FactoryMethod()" element="org.webcurator.core.store.DigitalAssetStoreFactory::getDAS():org.webcurator.core.store.DigitalAssetStore" />
			<role name="FactoryMethod()" element="org.webcurator.core.store.DigitalAssetStoreFactory::getLogReader():org.webcurator.core.reader.LogReader" />
		</instance>
		<instance>
			<role name="Creator" element="org.webcurator.domain.model.core.ProfileCredentials" />
			<role name="FactoryMethod()" element="org.webcurator.domain.model.core.ProfileCredentials::copy():org.webcurator.domain.model.core.ProfileCredentials" />
		</instance>
	</pattern>
	<pattern name="Prototype" />
	<pattern name="Singleton">
		<instance>
			<role name="Singleton" element="nz.govt.natlib.ndha.common.dublincore.DublinCoreFactory" />
			<role name="uniqueInstance" element="nz.govt.natlib.ndha.common.dublincore.DublinCoreFactory::m_instance:nz.govt.natlib.ndha.common.dublincore.DublinCoreFactory" />
		</instance>
		<instance>
			<role name="Singleton" element="org.webcurator.core.permissionmapping.PermissionMappingStrategy" />
			<role name="uniqueInstance" element="org.webcurator.core.permissionmapping.PermissionMappingStrategy::instance:org.webcurator.core.permissionmapping.PermissionMappingStrategy" />
		</instance>
		<instance>
			<role name="Singleton" element="org.webcurator.core.report.FileFactory" />
			<role name="uniqueInstance" element="org.webcurator.core.report.FileFactory::instance:org.webcurator.core.report.FileFactory" />
		</instance>
		<instance>
			<role name="Singleton" element="org.webcurator.core.util.ApplicationContextFactory" />
			<role name="uniqueInstance" element="org.webcurator.core.util.ApplicationContextFactory::instance:org.webcurator.core.util.ApplicationContextFactory" />
		</instance>
		<instance>
			<role name="Singleton" element="org.webcurator.ui.util.DateUtils" />
			<role name="uniqueInstance" element="org.webcurator.ui.util.DateUtils::instance:org.webcurator.ui.util.DateUtils" />
		</instance>
	</pattern>
	<pattern name="(Object)Adapter">
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetSchedulesHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::businessObjectFactory:org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.profiles.ProfileManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.AbstractOverrideTabHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.AbstractOverrideTabHandler::profileManager:org.webcurator.core.profiles.ProfileManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AbstractOverrideTabHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.ui.util.OverrideGetter" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.AbstractOverrideTabHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.AbstractOverrideTabHandler::overrideGetter:org.webcurator.ui.util.OverrideGetter" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AbstractOverrideTabHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AbstractOverrideTabHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AbstractOverrideTabHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="Adaptee" element="org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::businessObjectFactory:org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::copy(org.webcurator.domain.model.core.Target):org.webcurator.domain.model.core.Target" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::copy(org.webcurator.domain.model.core.TargetGroup):org.webcurator.domain.model.core.TargetGroup" />
		</instance>
		<instance>
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="Adaptee" element="org.webcurator.core.common.WCTTreeSet" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::subGroupParentTypesList:org.webcurator.core.common.WCTTreeSet" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getSubGroupParentDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Adapter" element="org.webcurator.ui.groups.controller.TabbedGroupController" />
			<role name="adaptee" element="org.webcurator.ui.groups.controller.TabbedGroupController::businessObjectFactory:org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.TabbedGroupController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Adapter" element="org.webcurator.ui.site.controller.SiteController" />
			<role name="adaptee" element="org.webcurator.ui.site.controller.SiteController::businessObjectFactory:org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TabbedTargetController" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TabbedTargetController::businessObjectFactory:org.webcurator.domain.model.core.BusinessObjectFactory" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.profiles.ProfileManager" />
			<role name="Adapter" element="org.webcurator.ui.profiles.controller.ProfileController" />
			<role name="adaptee" element="org.webcurator.ui.profiles.controller.ProfileController::profileManager:org.webcurator.core.profiles.ProfileManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.ui.target.controller.QueueController" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::queueController:org.webcurator.ui.target.controller.QueueController" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.profiles.ProfileManager" />
			<role name="Adapter" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.agency.AgencyUserManagerImpl::profileManager:org.webcurator.core.profiles.ProfileManager" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateAgency(org.webcurator.domain.model.auth.Agency, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.store.Indexer" />
			<role name="Adapter" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService" />
			<role name="adaptee" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::indexer:org.webcurator.core.store.Indexer" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::initiateIndexing(org.webcurator.domain.model.core.ArcHarvestResultDTO):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::initiateRemoveIndexes(org.webcurator.domain.model.core.ArcHarvestResultDTO):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::checkIndexing(java.lang.Long):java.lang.Boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.TargetDAO" />
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::targetDao:org.webcurator.domain.TargetDAO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::load(java.lang.Long, boolean):org.webcurator.domain.model.core.Target" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::isNameOk(org.webcurator.domain.model.core.AbstractTarget):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::isTargetHarvestable(org.webcurator.domain.model.core.TargetInstance):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadGroup(java.lang.Long):org.webcurator.domain.model.core.TargetGroup" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadGroup(java.lang.Long, boolean):org.webcurator.domain.model.core.TargetGroup" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getMembers(org.webcurator.domain.model.core.TargetGroup, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getParents(org.webcurator.domain.model.core.AbstractTarget, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getAbstractTargetDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getGroupDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getSubGroupParentDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getNonSubGroupDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createGroupMemberDTO(org.webcurator.domain.model.core.TargetGroup, java.lang.Long):org.webcurator.domain.model.dto.GroupMemberDTO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createGroupMemberDTO(java.lang.Long, org.webcurator.domain.model.core.Target):org.webcurator.domain.model.dto.GroupMemberDTO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::searchGroups(int, int, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::processSchedulesJob():void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, boolean):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getSeeds(org.webcurator.domain.model.core.AbstractTarget, java.lang.Long):java.util.Set" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::countTargets(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::countTargetGroups(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getAncestorOids(org.webcurator.domain.model.core.AbstractTarget):java.util.Set" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::isDuplicateMember(org.webcurator.domain.model.core.TargetGroup, java.lang.Long):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadAbstractTarget(java.lang.Long):org.webcurator.domain.model.core.AbstractTarget" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::transferSeeds(org.webcurator.domain.model.core.Permission, org.webcurator.domain.model.core.Permission):int" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::searchPermissions(org.webcurator.core.targets.PermissionCriteria):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::deleteTarget(org.webcurator.domain.model.core.Target):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::deleteTargetGroup(org.webcurator.domain.model.core.TargetGroup):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getParents(org.webcurator.domain.model.core.AbstractTarget):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.UserRoleDAO" />
			<role name="Adapter" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.agency.AgencyUserManagerImpl::userRoleDAO:org.webcurator.domain.UserRoleDAO" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgencies():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgencyByOid(java.lang.Long):org.webcurator.domain.model.auth.Agency" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOs():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOs(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOByOid(java.lang.Long):org.webcurator.domain.model.dto.UserDTO" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUsers():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUsers(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgenciesForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgenciesForTemplatePriv():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateAgency(org.webcurator.domain.model.auth.Agency, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOsForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserByOid(java.lang.Long):org.webcurator.domain.model.auth.User" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserByUserName(java.lang.String):org.webcurator.domain.model.auth.User" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::modifyUserStatus(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteUser(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRolesForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRoleByOid(java.lang.Long):org.webcurator.domain.model.auth.Role" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateRole(org.webcurator.domain.model.auth.Role, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteRole(org.webcurator.domain.model.auth.Role):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAssociatedRolesForUser(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateUserRoles(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRolesForUser(org.webcurator.domain.model.auth.User):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateUser(org.webcurator.domain.model.auth.User, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getPossibleOwners(org.webcurator.domain.UserOwnable):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUsersWithAllPrivilege(java.util.List):java.util.Map" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUsersWithAtLeastOnePrivilege(java.util.List):java.util.Map" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOsByTargetPrivilege(java.lang.Long):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="Adapter" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorNotifier" />
			<role name="adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorNotifier::agent:org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorNotifier::notification(java.lang.String, int, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.model.core.harvester.agent.HarvesterStatusDTO" />
			<role name="Adapter" element="org.webcurator.core.harvester.agent.HarvesterHeritrix" />
			<role name="adaptee" element="org.webcurator.core.harvester.agent.HarvesterHeritrix::status:org.webcurator.domain.model.core.harvester.agent.HarvesterStatusDTO" />
			<role name="Request()" element="org.webcurator.core.harvester.agent.HarvesterHeritrix::getStatus():org.webcurator.domain.model.core.harvester.agent.HarvesterStatusDTO" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.targets.TargetManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetSchedulesHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.InTrayDAO" />
			<role name="Adapter" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.notification.InTrayManagerImpl::inTrayDAO:org.webcurator.domain.InTrayDAO" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateNotification(java.util.List, java.lang.String, int, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateNotification(java.lang.Long, int, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getNotifications(org.webcurator.domain.model.auth.User, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::countNotifications(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::countTasks(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::countTasks(java.lang.String, org.webcurator.core.notification.InTrayResource):int" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateTask(java.lang.String, java.lang.String, org.webcurator.core.notification.InTrayResource):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteNotification(java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteAllNotifications(java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteTask(java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteTask(java.lang.Long, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteTasks(java.lang.Long, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getNotification(java.lang.Long):org.webcurator.domain.model.core.Notification" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getTask(java.lang.Long):org.webcurator.domain.model.core.Task" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getTasks(org.webcurator.domain.model.auth.User, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::claimTask(org.webcurator.domain.model.auth.User, java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::unclaimTask(org.webcurator.domain.model.auth.User, java.lang.Long):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.TargetInstanceDAO" />
			<role name="Adapter" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::targetInstanceDao:org.webcurator.domain.TargetInstanceDAO" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::search(org.webcurator.domain.TargetInstanceCriteria, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getNextTargetInstanceToHarvest():org.webcurator.domain.model.core.TargetInstance" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getTargetInstance(java.lang.Long, boolean):org.webcurator.domain.model.core.TargetInstance" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::delete(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.HarvestResult):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::countTargetInstances(org.webcurator.domain.model.auth.User, java.util.ArrayList):int" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::countTargetInstancesByTarget(java.lang.Long):int" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::saveAll(java.util.Collection):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::deleteTargetInstances(java.lang.Long, java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getHarvestHistory(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getHarvestResults(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::purgeTargetInstance(org.webcurator.domain.model.core.TargetInstance):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService" />
			<role name="Adapter" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService" />
			<role name="adaptee" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::service:org.webcurator.core.store.arc.ArcDigitalAssetStoreService" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::save(java.lang.String, java.lang.String[], javax.activation.DataHandler[]):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::save(java.lang.String, java.lang.String, java.lang.String[], javax.activation.DataHandler[]):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::getResource(java.lang.String, int, org.webcurator.domain.model.core.HarvestResourceDTO):javax.activation.DataHandler" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::getSmallResource(java.lang.String, int, org.webcurator.domain.model.core.HarvestResourceDTO):byte[]" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::getHeaders(java.lang.String, int, org.webcurator.domain.model.core.HarvestResourceDTO):org.apache.commons.httpclient.Header[]" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::copyAndPrune(java.lang.String, int, int, java.util.List, java.util.List):org.webcurator.domain.model.core.HarvestResultDTO" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::purge(java.lang.String[]):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::purgeAbortedTargetInstances(java.lang.String[]):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::submitToArchive(java.lang.String, java.lang.String, java.util.Map, int):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::initiateIndexing(org.webcurator.domain.model.core.ArcHarvestResultDTO):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::initiateRemoveIndexes(org.webcurator.domain.model.core.ArcHarvestResultDTO):void" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::checkIndexing(java.lang.Long):java.lang.Boolean" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreSOAPService::getCustomDepositFormDetails(org.webcurator.domain.model.core.CustomDepositFormCriteriaDTO):org.webcurator.domain.model.core.CustomDepositFormResultDTO" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetSchedulesHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.TargetInstanceDAO" />
			<role name="Adapter" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::targetInstanceDao:org.webcurator.domain.TargetInstanceDAO" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::reIndexHarvestResult(org.webcurator.domain.model.core.HarvestResult):java.lang.Boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::pause(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::abort(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::processSchedule():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestOrQueue(org.webcurator.domain.model.dto.QueuedTargetInstanceDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::isMiniumBandwidthAvailable(org.webcurator.domain.model.core.TargetInstance):boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeDigitalAssets():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeAbortedTargetInstances():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::completeArchiving(java.lang.Long, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::failedArchiving(java.lang.Long, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceAnnotationHandler" />
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceAnnotationHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceAnnotationHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceDisplayHandler" />
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceDisplayHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceDisplayHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler" />
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler" />
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler" />
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler" />
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.SiteDAO" />
			<role name="Adapter" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.sites.SiteManagerImpl::siteDao:org.webcurator.domain.SiteDAO" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::save(org.webcurator.domain.model.core.Site):void" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::getSite(java.lang.Long, boolean):org.webcurator.domain.model.core.Site" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::isSiteTitleUnique(org.webcurator.domain.model.core.Site):boolean" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::isAuthAgencyNameUnique(java.lang.Long, java.lang.String):boolean" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::countSites():int" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::search(org.webcurator.domain.SiteCriteria, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::countLinkedSeeds(java.lang.Long):int" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::searchAuthAgents(java.lang.String, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::loadAuthorisingAgent(long):org.webcurator.domain.model.core.AuthorisingAgent" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.store.DigitalAssetStoreConfig" />
			<role name="Adapter" element="org.webcurator.core.store.DigitalAssetStoreFactoryImpl" />
			<role name="adaptee" element="org.webcurator.core.store.DigitalAssetStoreFactoryImpl::digitalAssetStoreConfig:org.webcurator.core.store.DigitalAssetStoreConfig" />
			<role name="Request()" element="org.webcurator.core.store.DigitalAssetStoreFactoryImpl::getDAS():org.webcurator.core.store.DigitalAssetStore" />
			<role name="Request()" element="org.webcurator.core.store.DigitalAssetStoreFactoryImpl::getLogReader():org.webcurator.core.reader.LogReader" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.agent.HarvestAgentConfig" />
			<role name="Adapter" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestAgentConfig:org.webcurator.core.harvester.agent.HarvestAgentConfig" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeAbortedTargetInstances():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.ui.groups.controller.TabbedGroupController" />
			<role name="adaptee" element="org.webcurator.ui.groups.controller.TabbedGroupController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.TabbedGroupController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.ui.profiles.controller.ProfileController" />
			<role name="adaptee" element="org.webcurator.ui.profiles.controller.ProfileController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.ui.site.controller.SiteController" />
			<role name="adaptee" element="org.webcurator.ui.site.controller.SiteController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TabbedTargetController" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TabbedTargetController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.targets.TargetManager" />
			<role name="Adapter" element="org.webcurator.ui.groups.controller.TabbedGroupController" />
			<role name="adaptee" element="org.webcurator.ui.groups.controller.TabbedGroupController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.TabbedGroupController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.TabbedGroupController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.targets.TargetManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TabbedTargetController" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TabbedTargetController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.PermissionTemplateDAO" />
			<role name="Adapter" element="org.webcurator.core.admin.PermissionTemplateManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::permissionTemplateDAO:org.webcurator.domain.PermissionTemplateDAO" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::getTemplate(java.lang.Long):org.webcurator.domain.model.core.PermissionTemplate" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::getPermission(java.lang.Long):org.webcurator.domain.model.core.Permission" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::getTemplates(org.webcurator.domain.model.auth.User):java.util.List" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::saveTemplate(org.webcurator.domain.model.core.PermissionTemplate):void" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::delete(java.lang.Long):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.permissionmapping.HierPermMappingDAO" />
			<role name="Adapter" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy" />
			<role name="adaptee" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::dao:org.webcurator.core.permissionmapping.HierPermMappingDAO" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::add(org.webcurator.domain.model.core.Permission, org.webcurator.domain.model.core.UrlPattern):void" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::remove(org.webcurator.domain.model.core.Permission, org.webcurator.domain.model.core.UrlPattern):void" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::removeMappings(org.webcurator.domain.model.core.Site):void" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::saveMappings(org.webcurator.domain.model.core.Site):void" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::getMatchingPermissions(org.webcurator.domain.model.core.Target, java.lang.String):java.util.Set" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.sites.SiteManager" />
			<role name="Adapter" element="org.webcurator.ui.site.controller.SiteController" />
			<role name="adaptee" element="org.webcurator.ui.site.controller.SiteController::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.RejReasonDAO" />
			<role name="Adapter" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.agency.AgencyUserManagerImpl::rejReasonDAO:org.webcurator.domain.RejReasonDAO" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRejReasonsForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getValidRejReasonsForTargets(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getValidRejReasonsForTIs(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteRejReason(org.webcurator.domain.model.core.RejReason):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRejReasonByOid(java.lang.Long):org.webcurator.domain.model.core.RejReason" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateRejReason(org.webcurator.domain.model.core.RejReason, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.notification.InTrayManager" />
			<role name="Adapter" element="org.webcurator.core.check.CoreCheckNotifier" />
			<role name="adaptee" element="org.webcurator.core.check.CoreCheckNotifier::inTrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.check.CoreCheckNotifier::notification(java.lang.String, int, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.notification.InTrayManager" />
			<role name="Adapter" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::inTrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::reIndexHarvestResult(org.webcurator.domain.model.core.HarvestResult):java.lang.Boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestOrQueue(org.webcurator.domain.model.dto.QueuedTargetInstanceDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::completeArchiving(java.lang.Long, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::failedArchiving(java.lang.Long, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.TargetInstanceDAO" />
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::targetInstanceDao:org.webcurator.domain.TargetInstanceDAO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, boolean):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::endDateGroups():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverStrategy" />
			<role name="Adapter" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverImpl" />
			<role name="adaptee" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverImpl::fileMover:nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverStrategy" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverImpl::move(nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsDocument, java.util.List, nz.govt.natlib.ndha.wctdpsdepositor.WctDepositParameter):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.agency.AgencyUserManagerImpl::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgenciesForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgenciesForTemplatePriv():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOsForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRolesForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRejReasonsForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::canGiveTo(org.webcurator.domain.UserOwnable, org.webcurator.domain.model.auth.User):boolean" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getPossibleOwners(org.webcurator.domain.UserOwnable):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAllowedOwners(org.webcurator.domain.model.auth.User):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.notification.InTrayManager" />
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::intrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Adapter" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.notification.InTrayManagerImpl::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateNotification(java.util.List, java.lang.String, int, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateNotification(java.lang.Long, int, java.lang.String, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Adapter" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::resume(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeDigitalAssets():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeAbortedTargetInstances():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::completeArchiving(java.lang.Long, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::failedArchiving(java.lang.Long, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Adapter" element="org.webcurator.core.check.BandwidthChecker" />
			<role name="adaptee" element="org.webcurator.core.check.BandwidthChecker::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.core.check.BandwidthChecker::check():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.notification.InTrayManager" />
			<role name="Adapter" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.sites.SiteManagerImpl::intrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::save(org.webcurator.domain.model.core.Site):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.UserRoleDAO" />
			<role name="Adapter" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.notification.InTrayManagerImpl::userRoleDAO:org.webcurator.domain.UserRoleDAO" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::countTasks(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getNotification(java.lang.Long):org.webcurator.domain.model.core.Notification" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getTask(java.lang.Long):org.webcurator.domain.model.core.Task" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getTasks(org.webcurator.domain.model.auth.User, int, int):org.webcurator.domain.Pagination" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.reader.LogProvider" />
			<role name="Adapter" element="org.webcurator.core.reader.LogReaderImpl" />
			<role name="adaptee" element="org.webcurator.core.reader.LogReaderImpl::logProvider:org.webcurator.core.reader.LogProvider" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::listLogFiles(java.lang.String):java.util.List" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::listLogFileAttributes(java.lang.String):org.webcurator.domain.model.core.LogFilePropertiesDTO[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::countLines(java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::tail(java.lang.String, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::get(java.lang.String, java.lang.String, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::getHopPath(java.lang.String, java.lang.String, java.lang.String, java.lang.String):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::getByRegExpr(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::findFirstLineBeginning(java.lang.String, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::findFirstLineContaining(java.lang.String, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::findFirstLineAfterTimeStamp(java.lang.String, java.lang.String, java.lang.Long):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::retrieveLogfile(java.lang.String, java.lang.String):java.io.File" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.AnnotationDAO" />
			<role name="Adapter" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::annotationDAO:org.webcurator.domain.AnnotationDAO" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getAnnotations(org.webcurator.domain.model.core.TargetInstance):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.AnnotationDAO" />
			<role name="Adapter" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.sites.SiteManagerImpl::annotationDAO:org.webcurator.domain.AnnotationDAO" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::getAnnotations(org.webcurator.domain.model.core.Site):java.util.List" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::getAnnotations(org.webcurator.domain.model.core.Permission):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.AnnotationDAO" />
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::annotationDAO:org.webcurator.domain.AnnotationDAO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getAnnotations(org.webcurator.domain.model.core.AbstractTarget):java.util.List" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.SiteDAO" />
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::siteDao:org.webcurator.domain.SiteDAO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getQuickPickPermissions(org.webcurator.domain.model.core.Target):java.util.List" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::findPermissionsBySiteTitle(org.webcurator.domain.model.core.Target, java.lang.String, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadPermission(org.webcurator.ui.target.TargetEditorContext, java.lang.String):org.webcurator.domain.model.core.Permission" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadPermission(java.lang.Long):org.webcurator.domain.model.core.Permission" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.ProfileDAO" />
			<role name="Adapter" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::profileDAO:org.webcurator.domain.ProfileDAO" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.TargetInstance):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.domain.SchedulePatternFactory" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TargetSchedulesHandler" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::patternFactory:org.webcurator.domain.SchedulePatternFactory" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.util.Auditor" />
			<role name="Adapter" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.agency.AgencyUserManagerImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateAgency(org.webcurator.domain.model.auth.Agency, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::modifyUserStatus(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteUser(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateRole(org.webcurator.domain.model.auth.Role, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteRole(org.webcurator.domain.model.auth.Role):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateUserRoles(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteRejReason(org.webcurator.domain.model.core.RejReason):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateRejReason(org.webcurator.domain.model.core.RejReason, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateUser(org.webcurator.domain.model.auth.User, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.agent.HarvestAgentFactory" />
			<role name="Adapter" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestAgentFactory:org.webcurator.core.harvester.agent.HarvestAgentFactory" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::updateProfileOverrides(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::pause(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::resume(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::abort(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::stop(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::pauseAll():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::resumeAll():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::listLogFiles(org.webcurator.domain.model.core.TargetInstance):java.util.List" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::listLogFileAttributes(org.webcurator.domain.model.core.TargetInstance):org.webcurator.domain.model.core.LogFilePropertiesDTO[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::tailLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::countLogLines(org.webcurator.domain.model.core.TargetInstance, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::headLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineBeginning(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineContaining(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineAfterTimeStamp(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.Long):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLogLinesByRegex(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int, java.lang.String, boolean):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getHopPath(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLogfile(org.webcurator.domain.model.core.TargetInstance, java.lang.String):java.io.File" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.store.DigitalAssetStoreFactory" />
			<role name="Adapter" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::digitalAssetStoreFactory:org.webcurator.core.store.DigitalAssetStoreFactory" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::reIndexHarvestResult(org.webcurator.domain.model.core.HarvestResult):java.lang.Boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::listLogFiles(org.webcurator.domain.model.core.TargetInstance):java.util.List" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::listLogFileAttributes(org.webcurator.domain.model.core.TargetInstance):org.webcurator.domain.model.core.LogFilePropertiesDTO[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::tailLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::countLogLines(org.webcurator.domain.model.core.TargetInstance, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::headLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineBeginning(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineContaining(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineAfterTimeStamp(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.Long):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLogLinesByRegex(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int, java.lang.String, boolean):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getHopPath(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeDigitalAssets():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeAbortedTargetInstances():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLogfile(org.webcurator.domain.model.core.TargetInstance, java.lang.String):java.io.File" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::removeIndexes(org.webcurator.domain.model.core.HarvestResult):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.notification.InTrayManager" />
			<role name="Adapter" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::inTrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.TargetInstance):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpClientFactory" />
			<role name="Adapter" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpFileMover" />
			<role name="adaptee" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpFileMover::ftpClientFactory:nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpClientFactory" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpFileMover::connect(nz.govt.natlib.ndha.wctdpsdepositor.WctDepositParameter):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsWriterFactory" />
			<role name="Adapter" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.DnxMapperImpl" />
			<role name="adaptee" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.DnxMapperImpl::metsWriterFactory:nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsWriterFactory" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.DnxMapperImpl::generateDnxFrom(nz.govt.natlib.ndha.wctdpsdepositor.extractor.WctDataExtractor):nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsDocument" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.core.admin.PermissionTemplateManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::getTemplates(org.webcurator.domain.model.auth.User):java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.auth.AuthorityManager" />
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::authMgr:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getNextStates(org.webcurator.domain.model.core.Target):int[]" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::deleteTarget(org.webcurator.domain.model.core.Target):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::deleteTargetGroup(org.webcurator.domain.model.core.TargetGroup):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Adapter" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.sites.SiteManagerImpl::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::save(org.webcurator.domain.model.core.Site):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.archive.Archive" />
			<role name="Adapter" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService" />
			<role name="adaptee" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::archive:org.webcurator.core.archive.Archive" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::getCustomDepositFormDetails(org.webcurator.domain.model.core.CustomDepositFormCriteriaDTO):org.webcurator.domain.model.core.CustomDepositFormResultDTO" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Adapter" element="org.webcurator.core.archive.ArchiveAdapterImpl" />
			<role name="adaptee" element="org.webcurator.core.archive.ArchiveAdapterImpl::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.core.archive.ArchiveAdapterImpl::submitToArchive(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.util.Map, int):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.store.DigitalAssetStore" />
			<role name="Adapter" element="org.webcurator.core.archive.ArchiveAdapterImpl" />
			<role name="adaptee" element="org.webcurator.core.archive.ArchiveAdapterImpl::digitalAssetStore:org.webcurator.core.store.DigitalAssetStore" />
			<role name="Request()" element="org.webcurator.core.archive.ArchiveAdapterImpl::submitToArchive(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.util.Map, int):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.util.Auditor" />
			<role name="Adapter" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.notification.InTrayManagerImpl::audit:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::claimTask(org.webcurator.domain.model.auth.User, java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::unclaimTask(org.webcurator.domain.model.auth.User, java.lang.Long):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.store.arc.DasFileMover" />
			<role name="Adapter" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService" />
			<role name="adaptee" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::dasFileMover:org.webcurator.core.store.arc.DasFileMover" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::save(java.lang.String, java.lang.String, java.io.File[]):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::instanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.util.Auditor" />
			<role name="Adapter" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::delete(org.webcurator.domain.model.core.TargetInstance):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.util.Auditor" />
			<role name="Adapter" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.sites.SiteManagerImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::save(org.webcurator.domain.model.core.Site):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.util.Auditor" />
			<role name="Adapter" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="adaptee" element="org.webcurator.core.targets.TargetManagerImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.util.Auditor" />
			<role name="Adapter" element="org.webcurator.domain.TargetInstanceDAOImpl" />
			<role name="adaptee" element="org.webcurator.domain.TargetInstanceDAOImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.domain.TargetInstanceDAOImpl::save(java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Adapter" element="org.webcurator.ui.profiles.controller.ProfileController" />
			<role name="adaptee" element="org.webcurator.ui.profiles.controller.ProfileController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Adapter" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController" />
			<role name="adaptee" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
	</pattern>
	<pattern name="Command" />
	<pattern name="Composite" />
	<pattern name="Decorator">
		<instance>
			<role name="Component" element="org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="Decorator" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService" />
			<role name="component" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::ha:org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::getName():java.lang.String" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::initiateHarvest(java.lang.String, java.lang.String, java.lang.String):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::restrictBandwidth(java.lang.String, int):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::pause(java.lang.String):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::resume(java.lang.String):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::abort(java.lang.String):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::stop(java.lang.String):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::pauseAll():void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::resumeAll():void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::getStatus():org.webcurator.domain.model.core.harvester.agent.HarvestAgentStatusDTO" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::loadSettings(java.lang.String):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::updateProfileOverrides(java.lang.String, java.lang.String):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::purgeAbortedTargetInstances(java.lang.String[]):void" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::getMemoryWarning():boolean" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.HarvestAgentSOAPService::setMemoryWarning(boolean):void" />
		</instance>
		<instance>
			<role name="Component" element="org.webcurator.core.harvester.agent.FileFilter" />
			<role name="Decorator" element="org.webcurator.core.harvester.agent.NegateFilter" />
			<role name="component" element="org.webcurator.core.harvester.agent.NegateFilter::delegate:org.webcurator.core.harvester.agent.FileFilter" />
			<role name="Operation()" element="org.webcurator.core.harvester.agent.NegateFilter::accepts(java.io.File):boolean" />
		</instance>
	</pattern>
	<pattern name="Observer" />
	<pattern name="State">
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.bl.TargetAPISOAPService" />
			<role name="state" element="org.webcurator.bl.TargetAPISOAPService::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.bl.TargetAPISOAPService::processTargetXML(org.w3c.dom.Element[]):org.w3c.dom.Element[]" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.GroupSearchController" />
			<role name="state" element="org.webcurator.ui.groups.controller.GroupSearchController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GroupSearchController::prepareSearchView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.groups.command.SearchCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GroupSearchController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.profiles.controller.ProfileTargetsController" />
			<role name="state" element="org.webcurator.ui.profiles.controller.ProfileTargetsController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileTargetsController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.tools.controller.QualityReviewToolController" />
			<role name="state" element="org.webcurator.ui.tools.controller.QualityReviewToolController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.tools.controller.QualityReviewToolController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.core.archive.SipBuilder" />
			<role name="state" element="org.webcurator.core.archive.SipBuilder::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.core.archive.SipBuilder::updateTargetReference(org.webcurator.domain.model.core.AbstractTarget, java.util.Map):boolean" />
			<role name="Request()" element="org.webcurator.core.archive.SipBuilder::getTargetSection(org.webcurator.domain.model.core.TargetInstance):java.lang.String" />
			<role name="Request()" element="org.webcurator.core.archive.SipBuilder::getPermissionSection(org.webcurator.domain.model.core.TargetInstance):java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.core.targets.GroupEventPropagator" />
			<role name="state" element="org.webcurator.core.targets.GroupEventPropagator::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.core.targets.GroupEventPropagator::runEventChain(org.webcurator.domain.model.core.TargetGroup, boolean):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.core.targets.MembersRemovedEventPropagator" />
			<role name="state" element="org.webcurator.core.targets.MembersRemovedEventPropagator::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.core.targets.MembersRemovedEventPropagator::recurseDown(org.webcurator.domain.model.core.AbstractTarget):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.AddMembersController" />
			<role name="state" element="org.webcurator.ui.groups.controller.AddMembersController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.AddMembersController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.AddMembersController::doSearch(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.AddParentsController" />
			<role name="state" element="org.webcurator.ui.groups.controller.AddParentsController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.AddParentsController::getParents(javax.servlet.http.HttpServletRequest):java.util.List" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.AddParentsController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.AddParentsController::doSearch(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.MoveTargetsController" />
			<role name="state" element="org.webcurator.ui.groups.controller.MoveTargetsController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.MoveTargetsController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.MoveTargetsController::doSearch(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.home.controller.HomeController" />
			<role name="state" element="org.webcurator.ui.home.controller.HomeController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.home.controller.HomeController::handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.site.controller.TransferSeedsController" />
			<role name="state" element="org.webcurator.ui.site.controller.TransferSeedsController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.TransferSeedsController::getSearchView(org.webcurator.ui.site.command.TransferSeedsCommand, org.webcurator.core.targets.PermissionCriteria):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.TransferSeedsController::handleTransfer(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.site.command.TransferSeedsCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.AddParentsController" />
			<role name="state" element="org.webcurator.ui.target.controller.AddParentsController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AddParentsController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AddParentsController::doSearch(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.PermissionPopupController" />
			<role name="state" element="org.webcurator.ui.target.controller.PermissionPopupController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.PermissionPopupController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.TargetSearchController" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetSearchController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSearchController::prepareSearchView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetSearchCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSearchController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.core.scheduler.ScheduleJob" />
			<role name="state" element="org.webcurator.core.scheduler.ScheduleJob::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.core.scheduler.ScheduleJob::executeInternal(org.quartz.JobExecutionContext):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController" />
			<role name="state" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::processAgentDetails(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.agent.command.ManageHarvestAgentCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::processAgentSummary(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.agent.command.ManageHarvestAgentCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::processPauseAll(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.agent.command.ManageHarvestAgentCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::processResumeAll(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.agent.command.ManageHarvestAgentCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::processPauseQueue(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.agent.command.ManageHarvestAgentCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.ManageHarvestAgentController::processResumeQueue(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.agent.command.ManageHarvestAgentCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.target.controller.AQAReaderController" />
			<role name="state" element="org.webcurator.ui.target.controller.AQAReaderController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AQAReaderController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.target.controller.AssignToHarvesterController" />
			<role name="state" element="org.webcurator.ui.target.controller.AssignToHarvesterController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AssignToHarvesterController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.target.controller.ContentReaderController" />
			<role name="state" element="org.webcurator.ui.target.controller.ContentReaderController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.ContentReaderController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.target.controller.HarvestNowController" />
			<role name="state" element="org.webcurator.ui.target.controller.HarvestNowController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.HarvestNowController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.target.controller.LogReaderController" />
			<role name="state" element="org.webcurator.ui.target.controller.LogReaderController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.LogReaderController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.LogReaderController::getFollowingIndentedLines(org.webcurator.domain.model.core.TargetInstance, org.webcurator.ui.target.command.LogReaderCommand, java.lang.String, boolean):java.lang.String" />
			<role name="Request()" element="org.webcurator.ui.target.controller.LogReaderController::fetchNonIndentedLines(org.webcurator.domain.model.core.TargetInstance, org.webcurator.ui.target.command.LogReaderCommand):java.lang.String[]" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.target.controller.LogRetrieverController" />
			<role name="state" element="org.webcurator.ui.target.controller.LogRetrieverController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.LogRetrieverController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.target.controller.QueueController" />
			<role name="state" element="org.webcurator.ui.target.controller.QueueController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processFilter(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processPause(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processResume(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processAbort(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processStop(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Context" element="org.webcurator.ui.target.controller.ShowHopPathController" />
			<role name="state" element="org.webcurator.ui.target.controller.ShowHopPathController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.ShowHopPathController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.bl.TargetAPISOAPService" />
			<role name="state" element="org.webcurator.bl.TargetAPISOAPService::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.bl.TargetAPISOAPService::getNewTarget(org.webcurator.bl.XPathReader):org.webcurator.domain.model.core.Target" />
			<role name="Request()" element="org.webcurator.bl.TargetAPISOAPService::getTargetSite(org.webcurator.bl.XPathReader):org.webcurator.domain.model.core.Site" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.GroupSearchController" />
			<role name="state" element="org.webcurator.ui.groups.controller.GroupSearchController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GroupSearchController::prepareSearchView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.groups.command.SearchCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.AgencyController" />
			<role name="state" element="org.webcurator.ui.admin.controller.AgencyController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.AgencyController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.AgencyController::populateAgencyList():org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.AssociateUserRoleController" />
			<role name="state" element="org.webcurator.ui.admin.controller.AssociateUserRoleController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.AssociateUserRoleController::processUserToRoleAssoc(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.admin.command.AssociateUserRoleCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.AssociateUserRoleController::processSaveUserToRoleAssoc(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.admin.command.AssociateUserRoleCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.ChangePasswordController" />
			<role name="state" element="org.webcurator.ui.admin.controller.ChangePasswordController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.ChangePasswordController::processPasswordChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.admin.command.ChangePasswordCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.CreateRejReasonController" />
			<role name="state" element="org.webcurator.ui.admin.controller.CreateRejReasonController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.CreateRejReasonController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.CreateUserController" />
			<role name="state" element="org.webcurator.ui.admin.controller.CreateUserController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.CreateUserController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.RejReasonController" />
			<role name="state" element="org.webcurator.ui.admin.controller.RejReasonController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RejReasonController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RejReasonController::populateRejReasonList(org.springframework.web.servlet.ModelAndView):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.RoleController" />
			<role name="state" element="org.webcurator.ui.admin.controller.RoleController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RoleController::defaultView(java.lang.String):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RoleController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RoleController::saveRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.admin.command.RoleCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RoleController::deleteRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.admin.command.RoleCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RoleController::editRole(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.admin.command.RoleCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.TemplateController" />
			<role name="state" element="org.webcurator.ui.admin.controller.TemplateController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.TemplateController::getViewTemplateView(org.webcurator.ui.admin.command.TemplateCommand):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.TemplateController::getNewTemplateView(org.webcurator.ui.admin.command.TemplateCommand):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.TemplateController::getSaveTemplateView(org.webcurator.ui.admin.command.TemplateCommand):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.UserController" />
			<role name="state" element="org.webcurator.ui.admin.controller.UserController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.UserController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.UserController::populateUserList(org.springframework.web.servlet.ModelAndView):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.site.controller.SiteSearchController" />
			<role name="state" element="org.webcurator.ui.site.controller.SiteSearchController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteSearchController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteSearchController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.QueueController" />
			<role name="state" element="org.webcurator.ui.target.controller.QueueController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processFilter(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.TargetSearchController" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetSearchController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSearchController::prepareSearchView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetSearchCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.domain.TargetDAO" />
			<role name="Context" element="org.webcurator.ui.profiles.controller.ProfileTargetsController" />
			<role name="state" element="org.webcurator.ui.profiles.controller.ProfileTargetsController::targetDao:org.webcurator.domain.TargetDAO" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileTargetsController::getView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.profiles.command.ProfileTargetsCommand):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.domain.TargetDAO" />
			<role name="Context" element="org.webcurator.ui.target.controller.TargetSearchController" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetSearchController::targetDao:org.webcurator.domain.TargetDAO" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSearchController::prepareSearchView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetSearchCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.home.controller.HomeController" />
			<role name="State" element="org.webcurator.core.notification.InTrayManager" />
			<role name="state" element="org.webcurator.ui.home.controller.HomeController::inTrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.ui.home.controller.HomeController::handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.intray.controller.InTrayController" />
			<role name="State" element="org.webcurator.core.notification.InTrayManager" />
			<role name="state" element="org.webcurator.ui.intray.controller.InTrayController::inTrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.ui.intray.controller.InTrayController::deleteNotification(org.webcurator.ui.intray.command.InTrayCommand, int):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.intray.controller.InTrayController::viewNotification(org.webcurator.ui.intray.command.InTrayCommand, int):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.intray.controller.InTrayController::deleteTask(org.webcurator.ui.intray.command.InTrayCommand, int, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.intray.controller.InTrayController::viewTask(org.webcurator.ui.intray.command.InTrayCommand, int):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.intray.controller.InTrayController::claimTask(org.webcurator.ui.intray.command.InTrayCommand, int):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.intray.controller.InTrayController::unclaimTask(org.webcurator.ui.intray.command.InTrayCommand, int):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.intray.controller.InTrayController::defaultView(int, int, int):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.intray.controller.InTrayController::deleteAllNotifications(org.webcurator.ui.intray.command.InTrayCommand, int):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.tools.controller.QualityReviewToolController" />
			<role name="State" element="org.webcurator.domain.TargetInstanceDAO" />
			<role name="state" element="org.webcurator.ui.tools.controller.QualityReviewToolController::targetInstanceDao:org.webcurator.domain.TargetInstanceDAO" />
			<role name="Request()" element="org.webcurator.ui.tools.controller.QualityReviewToolController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.tools.controller.QualityReviewToolController::load(java.util.List, org.webcurator.domain.model.core.Seed, boolean, org.webcurator.domain.model.core.HarvestResult):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.store.tools.QualityReviewFacade" />
			<role name="State" element="org.webcurator.domain.TargetInstanceDAO" />
			<role name="state" element="org.webcurator.core.store.tools.QualityReviewFacade::targetInstanceDao:org.webcurator.domain.TargetInstanceDAO" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::getHarvestResult(java.lang.Long):org.webcurator.domain.model.core.HarvestResult" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::getHarvestResultTree(java.lang.Long):org.webcurator.core.store.tools.HarvestResourceNodeTreeBuilder" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::getHarvestResourceDTO(long, java.lang.String):org.webcurator.domain.model.core.HarvestResourceDTO" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::copyAndPrune(long, java.util.List, java.util.List, java.lang.String, java.util.List):org.webcurator.domain.model.core.HarvestResult" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.agent.schedule.HarvestAgentHeartBeatJob" />
			<role name="State" element="org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="state" element="org.webcurator.core.harvester.agent.schedule.HarvestAgentHeartBeatJob::harvestAgent:org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="Request()" element="org.webcurator.core.harvester.agent.schedule.HarvestAgentHeartBeatJob::executeInternal(org.quartz.JobExecutionContext):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.profiles.controller.ProfileViewController" />
			<role name="state" element="org.webcurator.ui.profiles.controller.ProfileViewController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileViewController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.EditScheduleController" />
			<role name="state" element="org.webcurator.ui.target.controller.EditScheduleController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.EditScheduleController::handleNew(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.EditScheduleController::handleEdit(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.EditScheduleController::handleSave(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.auth.tag.HasAgencyOwnedPrivTag" />
			<role name="state" element="org.webcurator.auth.tag.HasAgencyOwnedPrivTag::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.auth.tag.HasAgencyOwnedPrivTag::doStartTag():int" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.auth.tag.HasAtLeastOnePrivTag" />
			<role name="state" element="org.webcurator.auth.tag.HasAtLeastOnePrivTag::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.auth.tag.HasAtLeastOnePrivTag::doStartTag():int" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.auth.tag.HasPrivilegeTag" />
			<role name="state" element="org.webcurator.auth.tag.HasPrivilegeTag::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.auth.tag.HasPrivilegeTag::hasPrivilege(java.lang.String, int):boolean" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.auth.tag.HasUserOwnedPrivTag" />
			<role name="state" element="org.webcurator.auth.tag.HasUserOwnedPrivTag::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.auth.tag.HasUserOwnedPrivTag::doStartTag():int" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.auth.tag.NoPrivilegeTag" />
			<role name="state" element="org.webcurator.auth.tag.NoPrivilegeTag::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.auth.tag.NoPrivilegeTag::doStartTag():int" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.auth.tag.ShowControlTag" />
			<role name="state" element="org.webcurator.auth.tag.ShowControlTag::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.auth.tag.ShowControlTag::doStartTag():int" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.core.profiles.ProfileManager" />
			<role name="state" element="org.webcurator.core.profiles.ProfileManager::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::getAvailableProfiles(org.webcurator.domain.model.core.AbstractTarget):java.util.List" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::getAvailableProfiles(java.lang.Long):java.util.List" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.AssociateUserRoleController" />
			<role name="state" element="org.webcurator.ui.admin.controller.AssociateUserRoleController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.AssociateUserRoleController::processSaveUserToRoleAssoc(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.admin.command.AssociateUserRoleCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.ChangePasswordController" />
			<role name="state" element="org.webcurator.ui.admin.controller.ChangePasswordController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.ChangePasswordController::processPasswordChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.admin.command.ChangePasswordCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.CreateRejReasonController" />
			<role name="state" element="org.webcurator.ui.admin.controller.CreateRejReasonController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.CreateRejReasonController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.CreateUserController" />
			<role name="state" element="org.webcurator.ui.admin.controller.CreateUserController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.CreateUserController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.RejReasonController" />
			<role name="state" element="org.webcurator.ui.admin.controller.RejReasonController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RejReasonController::populateRejReasonList(org.springframework.web.servlet.ModelAndView):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.RoleController" />
			<role name="state" element="org.webcurator.ui.admin.controller.RoleController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.RoleController::defaultView(java.lang.String):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.admin.controller.UserController" />
			<role name="state" element="org.webcurator.ui.admin.controller.UserController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.UserController::populateUserList(org.springframework.web.servlet.ModelAndView):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.agent.controller.BandwidthRestrictionsController" />
			<role name="state" element="org.webcurator.ui.agent.controller.BandwidthRestrictionsController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.agent.controller.BandwidthRestrictionsController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.AddMembersController" />
			<role name="state" element="org.webcurator.ui.groups.controller.AddMembersController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.AddMembersController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.MoveTargetsController" />
			<role name="state" element="org.webcurator.ui.groups.controller.MoveTargetsController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.MoveTargetsController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="Context" element="org.webcurator.ui.site.controller.TransferSeedsController" />
			<role name="state" element="org.webcurator.ui.site.controller.TransferSeedsController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.TransferSeedsController::handleTransfer(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.site.command.TransferSeedsCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="State" element="org.webcurator.domain.TargetDAO" />
			<role name="state" element="org.webcurator.core.targets.TargetManagerImpl::targetDao:org.webcurator.domain.TargetDAO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::load(java.lang.Long, boolean):org.webcurator.domain.model.core.Target" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::isNameOk(org.webcurator.domain.model.core.AbstractTarget):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::isTargetHarvestable(org.webcurator.domain.model.core.TargetInstance):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::isTargetUsingAQA(java.lang.Long):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadGroup(java.lang.Long):org.webcurator.domain.model.core.TargetGroup" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadGroup(java.lang.Long, boolean):org.webcurator.domain.model.core.TargetGroup" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getMembers(org.webcurator.domain.model.core.TargetGroup, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getParents(org.webcurator.domain.model.core.AbstractTarget, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getAbstractTargetDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getGroupDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getSubGroupParentDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getNonSubGroupDTOs(java.lang.String, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createGroupMemberDTO(org.webcurator.domain.model.core.TargetGroup, java.lang.Long):org.webcurator.domain.model.dto.GroupMemberDTO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createGroupMemberDTO(java.lang.Long, org.webcurator.domain.model.core.Target):org.webcurator.domain.model.dto.GroupMemberDTO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::searchGroups(int, int, java.lang.Long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::processSchedulesJob():void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::processSchedule(org.webcurator.domain.model.core.Schedule):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::processBatchSchedule(org.webcurator.domain.model.core.Schedule):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createBatchTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, org.webcurator.domain.model.core.TargetGroup, boolean):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, boolean):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::updateTargetGroupStatus(org.webcurator.domain.model.core.TargetGroup):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getSeeds(org.webcurator.domain.model.core.AbstractTarget, java.lang.Long):java.util.Set" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::countTargets(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::countTargetGroups(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getAncestorOids(org.webcurator.domain.model.core.AbstractTarget):java.util.Set" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::isDuplicateMember(org.webcurator.domain.model.core.TargetGroup, java.lang.Long):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadAbstractTarget(java.lang.Long):org.webcurator.domain.model.core.AbstractTarget" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::transferSeeds(org.webcurator.domain.model.core.Permission, org.webcurator.domain.model.core.Permission):int" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::searchPermissions(org.webcurator.core.targets.PermissionCriteria):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::deleteTarget(org.webcurator.domain.model.core.Target):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::deleteTargetGroup(org.webcurator.domain.model.core.TargetGroup):boolean" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getParents(org.webcurator.domain.model.core.AbstractTarget):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.auth.WCTAuthenticationProcessingFilter" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.auth.WCTAuthenticationProcessingFilter::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.auth.WCTAuthenticationProcessingFilter::onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.acegisecurity.Authentication):void" />
			<role name="Request()" element="org.webcurator.auth.WCTAuthenticationProcessingFilter::onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.acegisecurity.AuthenticationException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.auth.dbms.WCTForcePasswordChange" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.auth.dbms.WCTForcePasswordChange::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.auth.dbms.WCTForcePasswordChange::doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.profiles.ProfileManager" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.core.profiles.ProfileManager::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::createDefaultProfile(org.webcurator.domain.model.auth.Agency):void" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::saveOrUpdate(org.webcurator.domain.model.core.Profile):void" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::delete(org.webcurator.domain.model.core.Profile):void" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::setProfileAsDefault(org.webcurator.domain.model.core.Profile):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.store.tools.QualityReviewFacade" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.core.store.tools.QualityReviewFacade::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::copyAndPrune(long, java.util.List, java.util.List, java.lang.String, java.util.List):org.webcurator.domain.model.core.HarvestResult" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.store.tools.QualityReviewFacade" />
			<role name="State" element="org.webcurator.core.store.DigitalAssetStore" />
			<role name="state" element="org.webcurator.core.store.tools.QualityReviewFacade::digialAssetStore:org.webcurator.core.store.DigitalAssetStore" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::getResource(java.lang.String, int, org.webcurator.domain.model.core.HarvestResource):java.io.File" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::getResource(org.webcurator.domain.model.core.HarvestResourceDTO):java.io.File" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::getSmallResource(org.webcurator.domain.model.core.HarvestResourceDTO):byte[]" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::getHttpHeaders(java.lang.String, int, org.webcurator.domain.model.core.HarvestResource):org.apache.commons.httpclient.Header[]" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::getHttpHeaders(org.webcurator.domain.model.core.HarvestResourceDTO):org.apache.commons.httpclient.Header[]" />
			<role name="Request()" element="org.webcurator.core.store.tools.QualityReviewFacade::copyAndPrune(long, java.util.List, java.util.List, java.lang.String, java.util.List):org.webcurator.domain.model.core.HarvestResult" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.admin.controller.TemplateController" />
			<role name="State" element="org.webcurator.core.admin.PermissionTemplateManager" />
			<role name="state" element="org.webcurator.ui.admin.controller.TemplateController::permissionTemplateManager:org.webcurator.core.admin.PermissionTemplateManager" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.TemplateController::getDefaultView():org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.TemplateController::getDeleteView(org.webcurator.ui.admin.command.TemplateCommand):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.TemplateController::getViewTemplateView(org.webcurator.ui.admin.command.TemplateCommand):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.TemplateController::getNewTemplateView(org.webcurator.ui.admin.command.TemplateCommand):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.admin.controller.TemplateController::getSaveTemplateView(org.webcurator.ui.admin.command.TemplateCommand):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController" />
			<role name="State" element="org.webcurator.core.admin.PermissionTemplateManager" />
			<role name="state" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController::permissionTemplateManager:org.webcurator.core.admin.PermissionTemplateManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.profiles.ProfileManager" />
			<role name="State" element="org.webcurator.domain.ProfileDAO" />
			<role name="state" element="org.webcurator.core.profiles.ProfileManager::profileDao:org.webcurator.domain.ProfileDAO" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::createDefaultProfile(org.webcurator.domain.model.auth.Agency):void" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::saveOrUpdate(org.webcurator.domain.model.core.Profile):void" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::load(java.lang.Long):org.webcurator.domain.model.core.Profile" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::getDefaultProfile(org.webcurator.domain.model.auth.Agency):org.webcurator.domain.model.core.Profile" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::isProfileInUse(org.webcurator.domain.model.core.Profile):boolean" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::getAvailableProfiles(org.webcurator.domain.model.core.AbstractTarget):java.util.List" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::getAvailableProfiles(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::setProfileAsDefault(org.webcurator.domain.model.core.Profile):void" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::getAllDTOs():java.util.List" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::getDTOs(boolean):java.util.List" />
			<role name="Request()" element="org.webcurator.core.profiles.ProfileManager::getAgencyDTOs(org.webcurator.domain.model.auth.Agency, boolean):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.tools.controller.QualityReviewToolController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.tools.controller.QualityReviewToolController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.tools.controller.QualityReviewToolController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.archive.SipBuilder" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.core.archive.SipBuilder::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.core.archive.SipBuilder::getTargetSection(java.lang.Long):java.lang.String" />
			<role name="Request()" element="org.webcurator.core.archive.SipBuilder::getPermissionSection(java.lang.Long):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.MembersRemovedEventPropagator" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.core.targets.MembersRemovedEventPropagator::instanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.core.targets.MembersRemovedEventPropagator::recurseDown(org.webcurator.domain.model.core.AbstractTarget):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.home.controller.HomeController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.home.controller.HomeController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.home.controller.HomeController::handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.AQAReaderController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.AQAReaderController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AQAReaderController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.AssignToHarvesterController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.AssignToHarvesterController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.AssignToHarvesterController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.ContentReaderController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.ContentReaderController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.ContentReaderController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.HarvestNowController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.HarvestNowController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.HarvestNowController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.LogReaderController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.LogReaderController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.LogReaderController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.LogRetrieverController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.LogRetrieverController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.LogRetrieverController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.QueueController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.QueueController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processFilter(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processDelete(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processPause(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processResume(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processAbort(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processStop(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.ShowHopPathController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.ShowHopPathController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.ShowHopPathController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.tools.controller.HarvestHistoryController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.tools.controller.HarvestHistoryController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.tools.controller.HarvestHistoryController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.bl.TargetAPISOAPService" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.bl.TargetAPISOAPService::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.bl.TargetAPISOAPService::getTargetSite(org.webcurator.bl.XPathReader):org.webcurator.domain.model.core.Site" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.home.controller.HomeController" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.ui.home.controller.HomeController::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.home.controller.HomeController::handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.SiteAgencySearchController" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.ui.site.controller.SiteAgencySearchController::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteAgencySearchController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteAgencySearchController::getSearchView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.SiteSearchController" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.ui.site.controller.SiteSearchController::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteSearchController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteSearchController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.TransferSeedsController" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.ui.site.controller.TransferSeedsController::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.TransferSeedsController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.TransferSeedsController::getSearchView(org.webcurator.ui.site.command.TransferSeedsCommand, org.webcurator.core.targets.PermissionCriteria):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="State" element="org.webcurator.domain.UserRoleDAO" />
			<role name="state" element="org.webcurator.core.agency.AgencyUserManagerImpl::userRoleDAO:org.webcurator.domain.UserRoleDAO" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgencies():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgencyByOid(java.lang.Long):org.webcurator.domain.model.auth.Agency" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOs():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOs(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOByOid(java.lang.Long):org.webcurator.domain.model.dto.UserDTO" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUsers():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUsers(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgenciesForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgenciesForTemplatePriv():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateAgency(org.webcurator.domain.model.auth.Agency, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOsForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserByOid(java.lang.Long):org.webcurator.domain.model.auth.User" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserByUserName(java.lang.String):org.webcurator.domain.model.auth.User" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::modifyUserStatus(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteUser(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRolesForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRoleByOid(java.lang.Long):org.webcurator.domain.model.auth.Role" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateRole(org.webcurator.domain.model.auth.Role, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteRole(org.webcurator.domain.model.auth.Role):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAssociatedRolesForUser(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateUserRoles(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRolesForUser(org.webcurator.domain.model.auth.User):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateUser(org.webcurator.domain.model.auth.User, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getPossibleOwners(org.webcurator.domain.UserOwnable):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUsersWithAllPrivilege(java.util.List):java.util.Map" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUsersWithAtLeastOnePrivilege(java.util.List):java.util.Map" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOsByTargetPrivilege(java.lang.Long):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.domain.HarvestCoordinatorDAO" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestCoordinatorDao:org.webcurator.domain.HarvestCoordinatorDAO" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getGlobalMaxBandwidth(int):long" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getBandwidthRestrictions():java.util.HashMap" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getBandwidthRestriction(java.lang.Long):org.webcurator.domain.model.core.BandwidthRestriction" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getBandwidthRestriction(java.lang.String, java.util.Date):org.webcurator.domain.model.core.BandwidthRestriction" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::saveOrUpdate(org.webcurator.domain.model.core.BandwidthRestriction):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::delete(org.webcurator.domain.model.core.BandwidthRestriction):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorNotifier" />
			<role name="State" element="org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorNotifier::agent:org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorNotifier::notification(java.lang.String, int, java.lang.String):void" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.GeneralHandler" />
			<role name="state" element="org.webcurator.ui.groups.controller.GeneralHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GeneralHandler::setParent(javax.servlet.http.HttpServletRequest, java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GeneralHandler::getParent(javax.servlet.http.HttpServletRequest):java.lang.Long" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GeneralHandler::getParentName(javax.servlet.http.HttpServletRequest):java.lang.String" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GeneralHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GeneralHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.GroupAnnotationHandler" />
			<role name="state" element="org.webcurator.ui.groups.controller.GroupAnnotationHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GroupAnnotationHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.MemberOfHandler" />
			<role name="state" element="org.webcurator.ui.groups.controller.MemberOfHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.MemberOfHandler::getParents(javax.servlet.http.HttpServletRequest):java.util.List" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.groups.controller.MembersHandler" />
			<role name="state" element="org.webcurator.ui.groups.controller.MembersHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.MembersHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.MembersHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.TargetAnnotationHandler" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetAnnotationHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetAnnotationHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.TargetGeneralHandler" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetGeneralHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetGeneralHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetGeneralHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.TargetGroupsHandler" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetGroupsHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetGroupsHandler::getParents(javax.servlet.http.HttpServletRequest):java.util.List" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.TargetSchedulesHandler" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="Context" element="org.webcurator.ui.target.controller.TargetSeedsHandler" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetSeedsHandler::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSeedsHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSeedsHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSeedsHandler::processLinkSearch(org.webcurator.ui.util.TabbedController, org.webcurator.domain.model.core.Target, org.webcurator.ui.target.command.SeedsCommand, boolean, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.reader.LogReaderSOAPService" />
			<role name="State" element="org.webcurator.core.reader.LogReader" />
			<role name="state" element="org.webcurator.core.reader.LogReaderSOAPService::lr:org.webcurator.core.reader.LogReader" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::listLogFiles(java.lang.String):java.util.List" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::listLogFileAttributes(java.lang.String):org.webcurator.domain.model.core.LogFilePropertiesDTO[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::countLines(java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::tail(java.lang.String, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::get(java.lang.String, java.lang.String, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::getHopPath(java.lang.String, java.lang.String, java.lang.String, java.lang.String):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::findFirstLineBeginning(java.lang.String, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::findFirstLineContaining(java.lang.String, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::findFirstLineAfterTimeStamp(java.lang.String, java.lang.String, java.lang.Long):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::getByRegExpr(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderSOAPService::retrieveLogfile(java.lang.String, java.lang.String):javax.activation.DataHandler" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="State" element="org.webcurator.domain.InTrayDAO" />
			<role name="state" element="org.webcurator.core.notification.InTrayManagerImpl::inTrayDAO:org.webcurator.domain.InTrayDAO" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateNotification(java.util.List, java.lang.String, int, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateNotification(java.lang.Long, int, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getNotifications(org.webcurator.domain.model.auth.User, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::countNotifications(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::countTasks(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::countTasks(java.lang.String, org.webcurator.core.notification.InTrayResource):int" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateTask(java.lang.String, java.lang.String, org.webcurator.core.notification.InTrayResource):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteNotification(java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteAllNotifications(java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteTask(java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteTask(java.lang.Long, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::deleteTasks(java.lang.Long, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getNotification(java.lang.Long):org.webcurator.domain.model.core.Notification" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getTask(java.lang.Long):org.webcurator.domain.model.core.Task" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getTasks(org.webcurator.domain.model.auth.User, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::claimTask(org.webcurator.domain.model.auth.User, java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::unclaimTask(org.webcurator.domain.model.auth.User, java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::populateOwnerAgencyOfResource(org.webcurator.core.notification.InTrayResource):org.webcurator.core.notification.InTrayResource" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="State" element="org.webcurator.domain.TargetInstanceDAO" />
			<role name="state" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::targetInstanceDao:org.webcurator.domain.TargetInstanceDAO" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::search(org.webcurator.domain.TargetInstanceCriteria, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getNextTargetInstanceToHarvest():org.webcurator.domain.model.core.TargetInstance" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getTargetInstance(java.lang.Long, boolean):org.webcurator.domain.model.core.TargetInstance" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::delete(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.HarvestResult):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::countTargetInstances(org.webcurator.domain.model.auth.User, java.util.ArrayList):int" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::countTargetInstancesByTarget(java.lang.Long):int" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::saveAll(java.util.Collection):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::deleteTargetInstances(java.lang.Long, java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getHarvestHistory(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getHarvestResults(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::purgeTargetInstance(org.webcurator.domain.model.core.TargetInstance):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.groups.controller.AccessHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.groups.controller.AccessHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.AccessHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.groups.controller.DescriptionHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.groups.controller.DescriptionHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.DescriptionHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.groups.controller.GeneralHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.groups.controller.GeneralHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GeneralHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetAccessHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetAccessHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetAccessHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetDescriptionHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetDescriptionHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetDescriptionHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetGeneralHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetGeneralHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetGeneralHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetProfileHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetProfileHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetProfileHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetSchedulesHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetSeedsHandler" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetSeedsHandler::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSeedsHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.domain.TargetInstanceDAO" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::targetInstanceDao:org.webcurator.domain.TargetInstanceDAO" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::heartbeat(org.webcurator.domain.model.core.harvester.agent.HarvestAgentStatusDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestComplete(org.webcurator.domain.model.core.HarvestResultDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::cleanHarvestResult(org.webcurator.domain.model.core.HarvestResult):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::reIndexHarvestResult(org.webcurator.domain.model.core.HarvestResult):java.lang.Boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::notification(java.lang.Long, int, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::prepareHarvest(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::sendBandWidthRestrictions():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::calculateBandwidthAllocation(org.webcurator.domain.model.core.TargetInstance):java.util.HashMap" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::calculateBandwidthAllocation():java.util.HashMap" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::pause(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::abort(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::processSchedule():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestOrQueue(org.webcurator.domain.model.dto.QueuedTargetInstanceDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::isTargetApproved(org.webcurator.domain.model.core.TargetInstance):boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::isMiniumBandwidthAvailable(org.webcurator.domain.model.dto.QueuedTargetInstanceDTO):boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::isMiniumBandwidthAvailable(org.webcurator.domain.model.core.TargetInstance):boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeDigitalAssets():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeAbortedTargetInstances():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::addToHarvestResult(java.lang.Long, org.webcurator.domain.model.core.ArcHarvestFileDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::addHarvestResources(java.lang.Long, java.util.Collection):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::createHarvestResult(org.webcurator.domain.model.core.HarvestResultDTO):java.lang.Long" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::finaliseIndex(java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::notifyAQAComplete(java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::completeArchiving(java.lang.Long, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::failedArchiving(java.lang.Long, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.auth.WCTAuthenticationProcessingFilter" />
			<role name="State" element="org.webcurator.domain.UserRoleDAO" />
			<role name="state" element="org.webcurator.auth.WCTAuthenticationProcessingFilter::authDAO:org.webcurator.domain.UserRoleDAO" />
			<role name="Request()" element="org.webcurator.auth.WCTAuthenticationProcessingFilter::onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.acegisecurity.Authentication):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.auth.ldap.WCTAuthoritiesPopulator" />
			<role name="State" element="org.webcurator.domain.UserRoleDAO" />
			<role name="state" element="org.webcurator.auth.ldap.WCTAuthoritiesPopulator::auth:org.webcurator.domain.UserRoleDAO" />
			<role name="Request()" element="org.webcurator.auth.ldap.WCTAuthoritiesPopulator::getGrantedAuthorities(java.lang.String):org.acegisecurity.GrantedAuthority[]" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.credentials.controller.ResetPasswordController" />
			<role name="State" element="org.webcurator.domain.UserRoleDAO" />
			<role name="state" element="org.webcurator.ui.credentials.controller.ResetPasswordController::authDAO:org.webcurator.domain.UserRoleDAO" />
			<role name="Request()" element="org.webcurator.ui.credentials.controller.ResetPasswordController::processPasswordChange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.credentials.command.ResetPasswordCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.groups.controller.GeneralHandler" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.ui.groups.controller.GeneralHandler::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GeneralHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.GeneralHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetGeneralHandler" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetGeneralHandler::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetGeneralHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetGeneralHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::buildResultsModel(org.webcurator.ui.util.TabbedController, org.webcurator.domain.model.core.TargetInstance, boolean, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceAnnotationHandler" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceAnnotationHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceAnnotationHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceDisplayHandler" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceDisplayHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceDisplayHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::buildResultsModel(org.webcurator.ui.util.TabbedController, org.webcurator.domain.model.core.TargetInstance, boolean, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.report.controller.ReportEmailController" />
			<role name="State" element="org.webcurator.core.notification.MailServer" />
			<role name="state" element="org.webcurator.ui.report.controller.ReportEmailController::mailServer:org.webcurator.core.notification.MailServer" />
			<role name="Request()" element="org.webcurator.ui.report.controller.ReportEmailController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController" />
			<role name="State" element="org.webcurator.core.notification.MailServer" />
			<role name="state" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController::mailServer:org.webcurator.core.notification.MailServer" />
			<role name="Request()" element="org.webcurator.ui.site.controller.GeneratePermissionTemplateController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="State" element="org.webcurator.domain.SiteDAO" />
			<role name="state" element="org.webcurator.core.sites.SiteManagerImpl::siteDao:org.webcurator.domain.SiteDAO" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::save(org.webcurator.domain.model.core.Site):void" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::getSite(java.lang.Long, boolean):org.webcurator.domain.model.core.Site" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::isSiteTitleUnique(org.webcurator.domain.model.core.Site):boolean" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::isAuthAgencyNameUnique(java.lang.Long, java.lang.String):boolean" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::countSites():int" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::search(org.webcurator.domain.SiteCriteria, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::countLinkedSeeds(java.lang.Long):int" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::searchAuthAgents(java.lang.String, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::loadAuthorisingAgent(long):org.webcurator.domain.model.core.AuthorisingAgent" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.store.DigitalAssetStoreFactoryImpl" />
			<role name="State" element="org.webcurator.core.store.DigitalAssetStoreConfig" />
			<role name="state" element="org.webcurator.core.store.DigitalAssetStoreFactoryImpl::digitalAssetStoreConfig:org.webcurator.core.store.DigitalAssetStoreConfig" />
			<role name="Request()" element="org.webcurator.core.store.DigitalAssetStoreFactoryImpl::getDAS():org.webcurator.core.store.DigitalAssetStore" />
			<role name="Request()" element="org.webcurator.core.store.DigitalAssetStoreFactoryImpl::getLogReader():org.webcurator.core.reader.LogReader" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.core.harvester.agent.HarvestAgentConfig" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestAgentConfig:org.webcurator.core.harvester.agent.HarvestAgentConfig" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeAbortedTargetInstances():void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.groups.controller.TabbedGroupController" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.groups.controller.TabbedGroupController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.TabbedGroupController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.profiles.controller.ProfileController" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.profiles.controller.ProfileController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.SiteController" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.site.controller.SiteController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TabbedTargetController" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TabbedTargetController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.groups.controller.TabbedGroupController" />
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="state" element="org.webcurator.ui.groups.controller.TabbedGroupController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.TabbedGroupController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.groups.controller.TabbedGroupController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TabbedTargetController" />
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TabbedTargetController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetController::showForm(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.admin.PermissionTemplateManagerImpl" />
			<role name="State" element="org.webcurator.domain.PermissionTemplateDAO" />
			<role name="state" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::permissionTemplateDAO:org.webcurator.domain.PermissionTemplateDAO" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::getTemplate(java.lang.Long):org.webcurator.domain.model.core.PermissionTemplate" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::getPermission(java.lang.Long):org.webcurator.domain.model.core.Permission" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::getTemplates(org.webcurator.domain.model.auth.User):java.util.List" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::saveTemplate(org.webcurator.domain.model.core.PermissionTemplate):void" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::delete(java.lang.Long):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy" />
			<role name="State" element="org.webcurator.core.permissionmapping.HierPermMappingDAO" />
			<role name="state" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::dao:org.webcurator.core.permissionmapping.HierPermMappingDAO" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::add(org.webcurator.domain.model.core.Permission, org.webcurator.domain.model.core.UrlPattern):void" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::remove(org.webcurator.domain.model.core.Permission, org.webcurator.domain.model.core.UrlPattern):void" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::removeMappings(org.webcurator.domain.model.core.Site):void" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::saveMappings(org.webcurator.domain.model.core.Site):void" />
			<role name="Request()" element="org.webcurator.core.permissionmapping.HierarchicalPermissionMappingStrategy::getMatchingPermissions(org.webcurator.domain.model.core.Target, java.lang.String):java.util.Set" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler" />
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceGeneralHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler" />
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceLogsHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler" />
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler" />
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceStateHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.SiteController" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.ui.site.controller.SiteController::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::checkAuthAgencyNamesUnique(javax.servlet.http.HttpServletRequest, org.springframework.validation.BindException):void" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::checkSave(javax.servlet.http.HttpServletRequest, org.springframework.validation.BindException):void" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SiteController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="State" element="org.webcurator.domain.RejReasonDAO" />
			<role name="state" element="org.webcurator.core.agency.AgencyUserManagerImpl::rejReasonDAO:org.webcurator.domain.RejReasonDAO" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRejReasonsForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getValidRejReasonsForTargets(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getValidRejReasonsForTIs(java.lang.Long):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteRejReason(org.webcurator.domain.model.core.RejReason):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRejReasonByOid(java.lang.Long):org.webcurator.domain.model.core.RejReason" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateRejReason(org.webcurator.domain.model.core.RejReason, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.check.CoreCheckNotifier" />
			<role name="State" element="org.webcurator.core.notification.InTrayManager" />
			<role name="state" element="org.webcurator.core.check.CoreCheckNotifier::inTrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.check.CoreCheckNotifier::notification(java.lang.String, int, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.core.notification.InTrayManager" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::inTrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestComplete(org.webcurator.domain.model.core.HarvestResultDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::reIndexHarvestResult(org.webcurator.domain.model.core.HarvestResult):java.lang.Boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::notification(java.lang.Long, int, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::notification(java.lang.String, int, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestOrQueue(org.webcurator.domain.model.dto.QueuedTargetInstanceDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::isTargetApproved(org.webcurator.domain.model.core.TargetInstance):boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::notifyAQAComplete(java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::completeArchiving(java.lang.Long, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::failedArchiving(java.lang.Long, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="State" element="org.webcurator.domain.TargetInstanceDAO" />
			<role name="state" element="org.webcurator.core.targets.TargetManagerImpl::targetInstanceDao:org.webcurator.domain.TargetInstanceDAO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::unschedule(org.webcurator.domain.model.core.AbstractTarget):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createBatchTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, org.webcurator.domain.model.core.TargetGroup, boolean):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, boolean):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::endDateGroups():void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.core.agency.AgencyUserManagerImpl::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgenciesForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAgenciesForTemplatePriv():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getUserDTOsForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRolesForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getRejReasonsForLoggedInUser():java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::canGiveTo(org.webcurator.domain.UserOwnable, org.webcurator.domain.model.auth.User):boolean" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getPossibleOwners(org.webcurator.domain.UserOwnable):java.util.List" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::getAllowedOwners(org.webcurator.domain.model.auth.User):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestComplete(org.webcurator.domain.model.core.HarvestResultDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::prepareHarvest(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getHarvestProfileString(org.webcurator.domain.model.core.TargetInstance):java.lang.String" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::isTargetApproved(org.webcurator.domain.model.core.TargetInstance):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="State" element="org.webcurator.core.notification.InTrayManager" />
			<role name="state" element="org.webcurator.core.targets.TargetManagerImpl::intrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.archive.ArchiveController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.archive.ArchiveController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.archive.ArchiveController::buildSip(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int):java.lang.String" />
			<role name="Request()" element="org.webcurator.ui.archive.ArchiveController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.archive.ArchiveController" />
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="state" element="org.webcurator.ui.archive.ArchiveController::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.ui.archive.ArchiveController::buildSip(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, int):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.profiles.controller.ProfileListController" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.ui.profiles.controller.ProfileListController::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileListController::getView(org.webcurator.ui.profiles.command.ProfileListCommand):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.core.notification.InTrayManagerImpl::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateNotification(java.util.List, java.lang.String, int, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::generateNotification(java.lang.Long, int, java.lang.String, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::heartbeat(org.webcurator.domain.model.core.harvester.agent.HarvestAgentStatusDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::prepareHarvest(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::_harvest(org.webcurator.domain.model.core.TargetInstance, org.webcurator.domain.model.core.harvester.agent.HarvestAgentStatusDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::resume(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeDigitalAssets():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeAbortedTargetInstances():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::completeArchiving(java.lang.Long, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::failedArchiving(java.lang.Long, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.check.BandwidthChecker" />
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="state" element="org.webcurator.core.check.BandwidthChecker::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.core.check.BandwidthChecker::check():void" />
			<role name="Request()" element="org.webcurator.core.check.BandwidthChecker::calculateTotalBandwidthUsed():long" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix" />
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestAgentListener" />
			<role name="state" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix::harvestCoordinatorNotifier:org.webcurator.core.harvester.coordinator.HarvestAgentListener" />
			<role name="Request()" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix::initiateHarvest(java.lang.String, java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix::tidy(java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix::completeHarvest(java.lang.String, int):int" />
			<role name="Request()" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix::pause(java.lang.String):void" />
			<role name="Request()" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix::resume(java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="State" element="org.webcurator.core.notification.InTrayManager" />
			<role name="state" element="org.webcurator.core.sites.SiteManagerImpl::intrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::save(org.webcurator.domain.model.core.Site):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="State" element="org.webcurator.domain.UserRoleDAO" />
			<role name="state" element="org.webcurator.core.notification.InTrayManagerImpl::userRoleDAO:org.webcurator.domain.UserRoleDAO" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::countTasks(org.webcurator.domain.model.auth.User):int" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getNotification(java.lang.Long):org.webcurator.domain.model.core.Notification" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getTask(java.lang.Long):org.webcurator.domain.model.core.Task" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::getTasks(org.webcurator.domain.model.auth.User, int, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::send(java.lang.String, org.webcurator.domain.model.core.Task):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.reader.LogReaderImpl" />
			<role name="State" element="org.webcurator.core.reader.LogProvider" />
			<role name="state" element="org.webcurator.core.reader.LogReaderImpl::logProvider:org.webcurator.core.reader.LogProvider" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::listLogFiles(java.lang.String):java.util.List" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::listLogFileAttributes(java.lang.String):org.webcurator.domain.model.core.LogFilePropertiesDTO[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::countLines(java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::tail(java.lang.String, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::get(java.lang.String, java.lang.String, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::getHopPath(java.lang.String, java.lang.String, java.lang.String, java.lang.String):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::getByRegExpr(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::findFirstLineBeginning(java.lang.String, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::findFirstLineContaining(java.lang.String, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::findFirstLineAfterTimeStamp(java.lang.String, java.lang.String, java.lang.Long):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.reader.LogReaderImpl::retrieveLogfile(java.lang.String, java.lang.String):java.io.File" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.report.parameter.AgencyParameter" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.core.report.parameter.AgencyParameter::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.core.report.parameter.AgencyParameter::getInputRendering():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.report.parameter.UserParameter" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.core.report.parameter.UserParameter::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.core.report.parameter.UserParameter::getInputRendering():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="State" element="org.webcurator.domain.AnnotationDAO" />
			<role name="state" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::annotationDAO:org.webcurator.domain.AnnotationDAO" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::getAnnotations(org.webcurator.domain.model.core.TargetInstance):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="State" element="org.webcurator.domain.AnnotationDAO" />
			<role name="state" element="org.webcurator.core.sites.SiteManagerImpl::annotationDAO:org.webcurator.domain.AnnotationDAO" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::saveAnnotations(org.webcurator.domain.model.core.Annotatable):void" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::getAnnotations(org.webcurator.domain.model.core.Site):java.util.List" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::getAnnotations(org.webcurator.domain.model.core.Permission):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="State" element="org.webcurator.domain.AnnotationDAO" />
			<role name="state" element="org.webcurator.core.targets.TargetManagerImpl::annotationDAO:org.webcurator.domain.AnnotationDAO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getAnnotations(org.webcurator.domain.model.core.AbstractTarget):java.util.List" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createBatchTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, org.webcurator.domain.model.core.TargetGroup, boolean):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="State" element="org.webcurator.domain.SiteDAO" />
			<role name="state" element="org.webcurator.core.targets.TargetManagerImpl::siteDao:org.webcurator.domain.SiteDAO" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getQuickPickPermissions(org.webcurator.domain.model.core.Target):java.util.List" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::findPermissionsBySiteTitle(org.webcurator.domain.model.core.Target, java.lang.String, int):org.webcurator.domain.Pagination" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadPermission(org.webcurator.ui.target.TargetEditorContext, java.lang.String):org.webcurator.domain.model.core.Permission" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::loadPermission(java.lang.Long):org.webcurator.domain.model.core.Permission" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="State" element="org.webcurator.domain.ProfileDAO" />
			<role name="state" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::profileDAO:org.webcurator.domain.ProfileDAO" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.TargetInstance):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.EditScheduleController" />
			<role name="State" element="org.webcurator.domain.SchedulePatternFactory" />
			<role name="state" element="org.webcurator.ui.target.controller.EditScheduleController::patternFactory:org.webcurator.domain.SchedulePatternFactory" />
			<role name="Request()" element="org.webcurator.ui.target.controller.EditScheduleController::handleSave(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.EditScheduleController::getEditView(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetSchedulesHandler" />
			<role name="State" element="org.webcurator.domain.SchedulePatternFactory" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::patternFactory:org.webcurator.domain.SchedulePatternFactory" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::preProcessNextTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.webcurator.ui.util.TabbedController$TabbedModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetSchedulesHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.agency.AgencyUserManagerImpl" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.core.agency.AgencyUserManagerImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateAgency(org.webcurator.domain.model.auth.Agency, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::modifyUserStatus(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteUser(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateRole(org.webcurator.domain.model.auth.Role, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteRole(org.webcurator.domain.model.auth.Role):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateUserRoles(org.webcurator.domain.model.auth.User):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::deleteRejReason(org.webcurator.domain.model.core.RejReason):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateRejReason(org.webcurator.domain.model.core.RejReason, boolean):void" />
			<role name="Request()" element="org.webcurator.core.agency.AgencyUserManagerImpl::updateUser(org.webcurator.domain.model.auth.User, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.core.harvester.agent.HarvestAgentFactory" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestAgentFactory:org.webcurator.core.harvester.agent.HarvestAgentFactory" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::heartbeat(org.webcurator.domain.model.core.harvester.agent.HarvestAgentStatusDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::_harvest(org.webcurator.domain.model.core.TargetInstance, org.webcurator.domain.model.core.harvester.agent.HarvestAgentStatusDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::sendBandWidthRestrictions():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::updateProfileOverrides(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::pause(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::resume(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::abort(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::stop(org.webcurator.domain.model.core.TargetInstance):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::pauseAll():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::resumeAll():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::listLogFiles(org.webcurator.domain.model.core.TargetInstance):java.util.List" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::listLogFileAttributes(org.webcurator.domain.model.core.TargetInstance):org.webcurator.domain.model.core.LogFilePropertiesDTO[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::tailLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::countLogLines(org.webcurator.domain.model.core.TargetInstance, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::headLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineBeginning(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineContaining(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineAfterTimeStamp(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.Long):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLogLinesByRegex(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int, java.lang.String, boolean):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getHopPath(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLogfile(org.webcurator.domain.model.core.TargetInstance, java.lang.String):java.io.File" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.core.store.DigitalAssetStoreFactory" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::digitalAssetStoreFactory:org.webcurator.core.store.DigitalAssetStoreFactory" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::harvestComplete(org.webcurator.domain.model.core.HarvestResultDTO):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::reIndexHarvestResult(org.webcurator.domain.model.core.HarvestResult):java.lang.Boolean" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::listLogFiles(org.webcurator.domain.model.core.TargetInstance):java.util.List" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::listLogFileAttributes(org.webcurator.domain.model.core.TargetInstance):org.webcurator.domain.model.core.LogFilePropertiesDTO[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::tailLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::countLogLines(org.webcurator.domain.model.core.TargetInstance, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::headLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLog(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int, int):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineBeginning(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineContaining(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getFirstLogLineAfterTimeStamp(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.Long):java.lang.Integer" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLogLinesByRegex(org.webcurator.domain.model.core.TargetInstance, java.lang.String, int, java.lang.String, boolean):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getHopPath(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.lang.String):java.lang.String[]" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeDigitalAssets():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::purgeAbortedTargetInstances():void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::getLogfile(org.webcurator.domain.model.core.TargetInstance, java.lang.String):java.io.File" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::removeIndexes(org.webcurator.domain.model.core.HarvestResult):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.QueueController" />
			<role name="State" element="org.webcurator.core.common.Environment" />
			<role name="state" element="org.webcurator.ui.target.controller.QueueController::environment:org.webcurator.core.common.Environment" />
			<role name="Request()" element="org.webcurator.ui.target.controller.QueueController::processFilter(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.webcurator.ui.target.command.TargetInstanceCommand, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix" />
			<role name="State" element="org.webcurator.core.store.DigitalAssetStore" />
			<role name="state" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix::digitalAssetStore:org.webcurator.core.store.DigitalAssetStore" />
			<role name="Request()" element="org.webcurator.core.harvester.agent.HarvestAgentHeritrix::completeHarvest(java.lang.String, int):int" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="State" element="org.webcurator.core.notification.InTrayManager" />
			<role name="state" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::inTrayManager:org.webcurator.core.notification.InTrayManager" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::save(org.webcurator.domain.model.core.TargetInstance):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.report.parameter.AgencyParameter" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.core.report.parameter.AgencyParameter::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.report.parameter.AgencyParameter::getInputRendering():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.report.parameter.UserParameter" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.core.report.parameter.UserParameter::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.report.parameter.UserParameter::getInputRendering():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processInitial(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl" />
			<role name="State" element="nz.govt.natlib.ndha.wctdpsdepositor.dpsdeposit.DepositWebServicesFactory" />
			<role name="state" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::dwsFactory:nz.govt.natlib.ndha.wctdpsdepositor.dpsdeposit.DepositWebServicesFactory" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::callDepositService(java.lang.String, nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsDocument, nz.govt.natlib.ndha.wctdpsdepositor.WctDepositParameter):org.webcurator.core.archive.dps.DpsDepositFacade$DepositResult" />
		</instance>
		<instance>
			<role name="Context" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpFileMover" />
			<role name="State" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpClientFactory" />
			<role name="state" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpFileMover::ftpClientFactory:nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpClientFactory" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FtpFileMover::connect(nz.govt.natlib.ndha.wctdpsdepositor.WctDepositParameter):void" />
		</instance>
		<instance>
			<role name="Context" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.DnxMapperImpl" />
			<role name="State" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsWriterFactory" />
			<role name="state" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.DnxMapperImpl::metsWriterFactory:nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsWriterFactory" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.DnxMapperImpl::generateDnxFrom(nz.govt.natlib.ndha.wctdpsdepositor.extractor.WctDataExtractor):nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsDocument" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.admin.PermissionTemplateManagerImpl" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::authorityManager:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.admin.PermissionTemplateManagerImpl::getTemplates(org.webcurator.domain.model.auth.User):java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="State" element="org.webcurator.auth.AuthorityManager" />
			<role name="state" element="org.webcurator.core.targets.TargetManagerImpl::authMgr:org.webcurator.auth.AuthorityManager" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::getNextStates(org.webcurator.domain.model.core.Target):int[]" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::deleteTarget(org.webcurator.domain.model.core.Target):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::deleteTargetGroup(org.webcurator.domain.model.core.TargetGroup):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.core.sites.SiteManagerImpl::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::save(org.webcurator.domain.model.core.Site):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService" />
			<role name="State" element="org.webcurator.core.archive.Archive" />
			<role name="state" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::archive:org.webcurator.core.archive.Archive" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::getCustomDepositFormDetails(org.webcurator.domain.model.core.CustomDepositFormCriteriaDTO):org.webcurator.domain.model.core.CustomDepositFormResultDTO" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.archive.ArchiveAdapterImpl" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.core.archive.ArchiveAdapterImpl::targetInstanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.core.archive.ArchiveAdapterImpl::submitToArchive(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.util.Map, int):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.archive.ArchiveAdapterImpl" />
			<role name="State" element="org.webcurator.core.store.DigitalAssetStore" />
			<role name="state" element="org.webcurator.core.archive.ArchiveAdapterImpl::digitalAssetStore:org.webcurator.core.store.DigitalAssetStore" />
			<role name="Request()" element="org.webcurator.core.archive.ArchiveAdapterImpl::submitToArchive(org.webcurator.domain.model.core.TargetInstance, java.lang.String, java.util.Map, int):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.archive.ArchiveAdapterImpl" />
			<role name="State" element="org.webcurator.core.targets.TargetManager" />
			<role name="state" element="org.webcurator.core.archive.ArchiveAdapterImpl::targetManager:org.webcurator.core.targets.TargetManager" />
			<role name="Request()" element="org.webcurator.core.archive.ArchiveAdapterImpl::createMap(org.webcurator.domain.model.core.TargetInstance):java.util.Map" />
		</instance>
		<instance>
			<role name="Context" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl" />
			<role name="State" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMover" />
			<role name="state" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::fileMover:nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMover" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::moveFilesToServer(nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsDocument, java.util.List, nz.govt.natlib.ndha.wctdpsdepositor.WctDepositParameter):void" />
		</instance>
		<instance>
			<role name="Context" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl" />
			<role name="State" element="nz.govt.natlib.ndha.wctdpsdepositor.mets.DnxMapper" />
			<role name="state" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::dnxMapper:nz.govt.natlib.ndha.wctdpsdepositor.mets.DnxMapper" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::deposit(nz.govt.natlib.ndha.wctdpsdepositor.extractor.WctDataExtractor, nz.govt.natlib.ndha.wctdpsdepositor.WctDepositParameter):org.webcurator.core.archive.dps.DpsDepositFacade$DepositResult" />
		</instance>
		<instance>
			<role name="Context" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl" />
			<role name="State" element="nz.govt.natlib.ndha.wctdpsdepositor.pds.PdsClientFactory" />
			<role name="state" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::pdsClientFactory:nz.govt.natlib.ndha.wctdpsdepositor.pds.PdsClientFactory" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::initPdsClient(java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl" />
			<role name="State" element="nz.govt.natlib.ndha.wctdpsdepositor.preprocessor.PreDepositProcessor" />
			<role name="state" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::preDepositProcessor:nz.govt.natlib.ndha.wctdpsdepositor.preprocessor.PreDepositProcessor" />
			<role name="Request()" element="nz.govt.natlib.ndha.wctdpsdepositor.DpsDepositFacadeImpl::deposit(nz.govt.natlib.ndha.wctdpsdepositor.extractor.WctDataExtractor, nz.govt.natlib.ndha.wctdpsdepositor.WctDepositParameter):org.webcurator.core.archive.dps.DpsDepositFacade$DepositResult" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::saveOrUpdate(org.webcurator.domain.model.core.BandwidthRestriction):void" />
			<role name="Request()" element="org.webcurator.core.harvester.coordinator.HarvestCoordinatorImpl::delete(org.webcurator.domain.model.core.BandwidthRestriction):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.check.HarvestAgentMemoryChecker" />
			<role name="State" element="org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="state" element="org.webcurator.core.check.HarvestAgentMemoryChecker::harvestAgent:org.webcurator.core.harvester.agent.HarvestAgent" />
			<role name="Request()" element="org.webcurator.core.check.HarvestAgentMemoryChecker::onSetWarning():void" />
			<role name="Request()" element="org.webcurator.core.check.HarvestAgentMemoryChecker::onRemoveWarning():void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="State" element="org.webcurator.core.notification.MailServer" />
			<role name="state" element="org.webcurator.core.notification.InTrayManagerImpl::mailServer:org.webcurator.core.notification.MailServer" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::send(org.webcurator.domain.model.dto.UserDTO, org.webcurator.domain.model.core.Notification):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::send(java.lang.String, org.webcurator.domain.model.core.Task):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.notification.InTrayManagerImpl" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.core.notification.InTrayManagerImpl::audit:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::claimTask(org.webcurator.domain.model.auth.User, java.lang.Long):void" />
			<role name="Request()" element="org.webcurator.core.notification.InTrayManagerImpl::unclaimTask(org.webcurator.domain.model.auth.User, java.lang.Long):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService" />
			<role name="State" element="org.webcurator.core.store.arc.DasFileMover" />
			<role name="state" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::dasFileMover:org.webcurator.core.store.arc.DasFileMover" />
			<role name="Request()" element="org.webcurator.core.store.arc.ArcDigitalAssetStoreService::save(java.lang.String, java.lang.String, java.io.File[]):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="State" element="org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="state" element="org.webcurator.core.targets.TargetManagerImpl::instanceManager:org.webcurator.core.scheduler.TargetInstanceManager" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createBatchTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, org.webcurator.domain.model.core.TargetGroup, boolean):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::createTargetInstances(org.webcurator.domain.model.core.AbstractTarget, org.webcurator.domain.model.core.Schedule, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.scheduler.TargetInstanceManagerImpl::delete(org.webcurator.domain.model.core.TargetInstance):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.sites.SiteManagerImpl" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.core.sites.SiteManagerImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.sites.SiteManagerImpl::save(org.webcurator.domain.model.core.Site):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.targets.TargetManagerImpl" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.core.targets.TargetManagerImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.Target, java.util.List):void" />
			<role name="Request()" element="org.webcurator.core.targets.TargetManagerImpl::save(org.webcurator.domain.model.core.TargetGroup, java.util.List):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.domain.TargetInstanceDAOImpl" />
			<role name="State" element="org.webcurator.core.util.Auditor" />
			<role name="state" element="org.webcurator.domain.TargetInstanceDAOImpl::auditor:org.webcurator.core.util.Auditor" />
			<role name="Request()" element="org.webcurator.domain.TargetInstanceDAOImpl::save(java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.archive.ArchiveController" />
			<role name="State" element="org.webcurator.core.archive.ArchiveAdapter" />
			<role name="state" element="org.webcurator.ui.archive.ArchiveController::archiveAdapter:org.webcurator.core.archive.ArchiveAdapter" />
			<role name="Request()" element="org.webcurator.ui.archive.ArchiveController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.validator.SiteAgencyValidator" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.ui.site.validator.SiteAgencyValidator::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.site.validator.SiteAgencyValidator::validate(java.lang.Object, org.springframework.validation.Errors):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.profiles.controller.ProfileListController" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.ui.profiles.controller.ProfileListController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileListController::getView(org.webcurator.ui.profiles.command.ProfileListCommand):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.tools.controller.TreeToolController" />
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="state" element="org.webcurator.ui.tools.controller.TreeToolController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.tools.controller.TreeToolController::handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.site.controller.SitePermissionHandler" />
			<role name="State" element="org.webcurator.core.sites.SiteManager" />
			<role name="state" element="org.webcurator.ui.site.controller.SitePermissionHandler::siteManager:org.webcurator.core.sites.SiteManager" />
			<role name="Request()" element="org.webcurator.ui.site.controller.SitePermissionHandler::processOther(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler" />
			<role name="State" element="org.webcurator.core.store.DigitalAssetStore" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::digitalAssetStore:org.webcurator.core.store.DigitalAssetStore" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetInstanceResultHandler::buildCustomDepositFormDetails(javax.servlet.http.HttpServletRequest, org.springframework.validation.BindException, org.webcurator.domain.model.core.TargetInstance, org.webcurator.ui.util.TabbedController$TabbedModelAndView):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TargetGeneralHandler" />
			<role name="State" element="org.webcurator.domain.UserRoleDAO" />
			<role name="state" element="org.webcurator.ui.target.controller.TargetGeneralHandler::userRoleDao:org.webcurator.domain.UserRoleDAO" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TargetGeneralHandler::processTab(org.webcurator.ui.util.TabbedController, org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.profiles.controller.ProfileController" />
			<role name="State" element="org.webcurator.core.agency.AgencyUserManager" />
			<role name="state" element="org.webcurator.ui.profiles.controller.ProfileController::agencyUserManager:org.webcurator.core.agency.AgencyUserManager" />
			<role name="Request()" element="org.webcurator.ui.profiles.controller.ProfileController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController" />
			<role name="State" element="org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="state" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::harvestCoordinator:org.webcurator.core.harvester.coordinator.HarvestCoordinator" />
			<role name="Request()" element="org.webcurator.ui.target.controller.TabbedTargetInstanceController::processSave(org.webcurator.ui.util.Tab, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
		</instance>
	</pattern>
	<pattern name="Strategy">
		<instance>
			<role name="Context" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverImpl" />
			<role name="Strategy" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverStrategy" />
			<role name="strategy" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverImpl::fileMover:nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverStrategy" />
			<role name="ContextInterface()" element="nz.govt.natlib.ndha.wctdpsdepositor.filemover.FileMoverImpl::move(nz.govt.natlib.ndha.wctdpsdepositor.mets.MetsDocument, java.util.List, nz.govt.natlib.ndha.wctdpsdepositor.WctDepositParameter):void" />
		</instance>
		<instance>
			<role name="Context" element="org.webcurator.core.permissionmapping.PermMappingSiteListener" />
			<role name="Strategy" element="org.webcurator.core.permissionmapping.PermissionMappingStrategy" />
			<role name="strategy" element="org.webcurator.core.permissionmapping.PermMappingSiteListener::strategy:org.webcurator.core.permissionmapping.PermissionMappingStrategy" />
			<role name="ContextInterface()" element="org.webcurator.core.permissionmapping.PermMappingSiteListener::beforeSave(org.webcurator.domain.model.core.Site):void" />
			<role name="ContextInterface()" element="org.webcurator.core.permissionmapping.PermMappingSiteListener::afterSave(org.webcurator.domain.model.core.Site):void" />
			<role name="ContextInterface()" element="org.webcurator.core.permissionmapping.PermMappingSiteListener::beforeDelete(org.webcurator.domain.model.core.Site):void" />
		</instance>
	</pattern>
	<pattern name="Bridge">
		<instance>
			<role name="Abstraction" element="org.webcurator.core.check.AbstractChecker" />
			<role name="Implementor" element="org.webcurator.core.check.CheckNotifier" />
			<role name="implementor" element="org.webcurator.core.check.AbstractChecker::notifier:org.webcurator.core.check.CheckNotifier" />
			<role name="Operation()" element="org.webcurator.core.check.AbstractChecker::notify(java.lang.String, java.lang.String):void" />
		</instance>
	</pattern>
	<pattern name="Template Method">
		<instance>
			<role name="AbstractClass" element="org.webcurator.core.store.IndexerBase" />
			<role name="TemplateMethod()" element="org.webcurator.core.store.IndexerBase::markComplete(java.lang.Long):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.webcurator.ui.profiles.renderers.Renderer" />
			<role name="TemplateMethod()" element="org.webcurator.ui.profiles.renderers.Renderer::render(org.webcurator.core.profiles.ProfileElement, javax.servlet.jsp.PageContext):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.webcurator.ui.util.TabbedController" />
			<role name="TemplateMethod()" element="org.webcurator.ui.util.TabbedController::processFormSubmission(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.Object, org.springframework.validation.BindException):org.springframework.web.servlet.ModelAndView" />
			<role name="TemplateMethod()" element="org.webcurator.ui.util.TabbedController::handleRequestInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse):org.springframework.web.servlet.ModelAndView" />
		</instance>
	</pattern>
	<pattern name="Visitor" />
	<pattern name="Proxy">
		<instance>
			<role name="Proxy" element="org.webcurator.domain.model.core.TargetInstance" />
			<role name="RealSubject" element="org.webcurator.domain.model.core.AbstractTarget" />
			<role name="Request()" element="org.webcurator.domain.model.core.TargetInstance::getProfile():org.webcurator.domain.model.core.Profile" />
		</instance>
	</pattern>
	<pattern name="Proxy2" />
	<pattern name="Chain of Responsibility" />
</system>

