<?xml version="1.0" encoding="UTF-8"?>
<system>
	<pattern name="Factory Method">
		<instance>
			<role name="Creator" element="org.nakedobjects.applib.profiles.Profile" />
			<role name="FactoryMethod()" element="org.nakedobjects.applib.profiles.Profile::getPerspective(java.lang.String):org.nakedobjects.applib.profiles.Perspective" />
			<role name="FactoryMethod()" element="org.nakedobjects.applib.profiles.Profile::newPerspective(java.lang.String):org.nakedobjects.applib.profiles.Perspective" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.applib.profiles.ProfileService" />
			<role name="FactoryMethod()" element="org.nakedobjects.applib.profiles.ProfileService::newUserProfile():org.nakedobjects.applib.profiles.Profile" />
			<role name="FactoryMethod()" element="org.nakedobjects.applib.profiles.ProfileService::newUserProfile(org.nakedobjects.applib.profiles.Profile):org.nakedobjects.applib.profiles.Profile" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.example.expenses.claims.ExpenseItem" />
			<role name="FactoryMethod()" element="org.nakedobjects.example.expenses.claims.ExpenseItem::requestedOrApprovedAmount():org.nakedobjects.applib.value.Money" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.config.ConfigurationBuilder::getConfiguration():org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.config.NakedObjectConfiguration::createSubset(java.lang.String):org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.config.NakedObjectConfiguration::getProperties(java.lang.String):org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAction::createActionInvocationInteractionContext(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.consent.InteractionInvocationMethod, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject[]):org.nakedobjects.metamodel.interactions.ActionInvocationContext" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.metamodel.spec.feature.NakedObjectActionParameter" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.spec.feature.NakedObjectActionParameter::createProposedArgumentInteractionContext(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.consent.InteractionInvocationMethod, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject[], int):org.nakedobjects.metamodel.interactions.ActionArgumentContext" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.metamodel.spec.feature.OneToManyAssociation" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.spec.feature.OneToManyAssociation::createValidateAddInteractionContext(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.consent.InteractionInvocationMethod, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.interactions.ValidityContext" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.spec.feature.OneToManyAssociation::createValidateRemoveInteractionContext(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.consent.InteractionInvocationMethod, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.interactions.ValidityContext" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.spec.feature.OneToOneAssociation::createValidateInteractionContext(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.consent.InteractionInvocationMethod, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.interactions.ValidityContext" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.spec.feature.OneToOneAssociation::createAccessInteractionContext(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.consent.InteractionInvocationMethod, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.interactions.PropertyAccessContext" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification::createTitleInteractionContext(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.consent.InteractionInvocationMethod, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.interactions.ObjectTitleContext" />
			<role name="FactoryMethod()" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification::createValidityInteractionContext(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.consent.InteractionInvocationMethod, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.interactions.ObjectValidityContext" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.Canvas" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.Canvas::createSubcanvas():org.nakedobjects.plugins.dnd.Canvas" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.Canvas::createSubcanvas(int, int, int, int):org.nakedobjects.plugins.dnd.Canvas" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.ColorsAndFonts" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ColorsAndFonts::getColor(java.lang.String):org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ColorsAndFonts::getText(java.lang.String):org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ColorsAndFonts::getColor(int):org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.ContentFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ContentFactory::createRootContent(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.plugins.dnd.Content" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ContentFactory::createFieldContent(org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.plugins.dnd.Content" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.ObjectParameter" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ObjectParameter::canSet(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.consent.Consent" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.SubviewSpec::createSubview(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis, int):org.nakedobjects.plugins.dnd.View" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.SubviewSpec::decorateSubview(org.nakedobjects.plugins.dnd.View):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.View" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.View::getSpecification():org.nakedobjects.plugins.dnd.ViewSpecification" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent::canSet(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.consent.Consent" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.viewer.drawing.Color::brighter():org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.viewer.drawing.Color::darker():org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.viewer.table.AbstractTableSpecification" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.viewer.table.AbstractTableSpecification::doCreateView(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.viewer.tree.NodeSpecification" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.viewer.tree.NodeSpecification::createNodeView(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextBlockTarget" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextBlockTarget::getText():org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.ViewFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ViewFactory::createDragViewOutline(org.nakedobjects.plugins.dnd.View):org.nakedobjects.plugins.dnd.View" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ViewFactory::createMinimizedView(org.nakedobjects.plugins.dnd.View):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.dnd.ViewSpecification::createView(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.html.component.ComponentFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createBlock(java.lang.String, java.lang.String):org.nakedobjects.plugins.html.component.Block" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createBreadCrumbs(java.lang.String[], boolean[]):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createCollectionIcon(org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation, org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createDebugPane():org.nakedobjects.plugins.html.component.DebugPane" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createEditOption(java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createRemoveOption(java.lang.String, java.lang.String, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createAddOption(java.lang.String, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createErrorMessage(java.lang.Exception, boolean):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createForm(java.lang.String, java.lang.String, int, int, boolean):org.nakedobjects.plugins.html.component.Form" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createHeading(java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createInlineBlock(java.lang.String, java.lang.String, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createCheckboxBlock(boolean, boolean):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createSubmenu(java.lang.String, org.nakedobjects.plugins.html.component.Component[]):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createLink(java.lang.String, java.lang.String, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createMenuItem(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.nakedobjects.metamodel.spec.feature.NakedObjectActionType, boolean, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createCollectionIcon(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createObjectIcon(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createObjectIcon(org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation, org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createPage():org.nakedobjects.plugins.html.component.Page" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createService(java.lang.String, java.lang.String, java.lang.String):org.nakedobjects.plugins.html.component.Component" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createTable(int, boolean):org.nakedobjects.plugins.html.component.Table" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.component.ComponentFactory::createUserSwap(java.lang.String):org.nakedobjects.plugins.html.component.Component" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.html.task.Task" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.html.task.Task::completeTask(org.nakedobjects.plugins.html.context.Context, org.nakedobjects.plugins.html.component.Page):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.sql.objectstore.DatabaseConnectorFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.sql.objectstore.DatabaseConnectorFactory::createConnector():org.nakedobjects.plugins.sql.objectstore.DatabaseConnector" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.sql.objectstore.mapping.FieldMappingFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.sql.objectstore.mapping.FieldMappingFactory::createFieldMapping(org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation):org.nakedobjects.plugins.sql.objectstore.mapping.FieldMapping" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMappingFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMappingFactory::createReferenceMapping(org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.sql.objectstore.ObjectMappingFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.sql.objectstore.ObjectMappingFactory::createMapper(java.lang.String, java.lang.String, org.nakedobjects.plugins.sql.objectstore.FieldMappingLookup):org.nakedobjects.plugins.sql.objectstore.ObjectMapping" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.plugins.sql.objectstore.PrimaryKeyMapper" />
			<role name="FactoryMethod()" element="org.nakedobjects.plugins.sql.objectstore.PrimaryKeyMapper::generateKey(org.nakedobjects.plugins.sql.objectstore.Results, java.lang.String):org.nakedobjects.plugins.sql.objectstore.PrimaryKey" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.remoting.client.ClientConnection" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.client.ClientConnection::executeRemotely(org.nakedobjects.remoting.exchange.Request):org.nakedobjects.remoting.exchange.ResponseEnvelope" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.remoting.client.ProxyInstallerAbstract" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.client.ProxyInstallerAbstract::createTransport():org.nakedobjects.remoting.transport.Transport" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.client.ProxyInstallerAbstract::createMarshaller(org.nakedobjects.remoting.transport.Transport):org.nakedobjects.remoting.protocol.ClientMarshaller" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.remoting.data.DataFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.data.DataFactory::createNullData(java.lang.String):org.nakedobjects.remoting.data.common.NullData" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.data.DataFactory::createIdentityData(java.lang.String, org.nakedobjects.metamodel.adapter.oid.Oid, org.nakedobjects.metamodel.adapter.version.Version):org.nakedobjects.remoting.data.common.IdentityData" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.data.DataFactory::createValueData(java.lang.String, java.lang.String):org.nakedobjects.remoting.data.common.EncodableObjectData" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.data.DataFactory::createObjectData(java.lang.String, org.nakedobjects.metamodel.adapter.oid.Oid, boolean, org.nakedobjects.metamodel.adapter.version.Version):org.nakedobjects.remoting.data.common.ObjectData" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.data.DataFactory::createCollectionData(java.lang.String, java.lang.String, org.nakedobjects.metamodel.adapter.oid.Oid, org.nakedobjects.remoting.data.common.ReferenceData[], boolean, org.nakedobjects.metamodel.adapter.version.Version):org.nakedobjects.remoting.data.common.CollectionData" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::authorizeUsability(org.nakedobjects.remoting.exchange.AuthorizationRequestUsability):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::authorizeVisibility(org.nakedobjects.remoting.exchange.AuthorizationRequestVisibility):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::openSession(org.nakedobjects.remoting.exchange.OpenSessionRequest):org.nakedobjects.remoting.exchange.OpenSessionResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::closeSession(org.nakedobjects.remoting.exchange.CloseSessionRequest):org.nakedobjects.remoting.exchange.CloseSessionResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::getProperties(org.nakedobjects.remoting.exchange.GetPropertiesRequest):org.nakedobjects.remoting.exchange.GetPropertiesResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::setAssociation(org.nakedobjects.remoting.exchange.SetAssociationRequest):org.nakedobjects.remoting.exchange.SetAssociationResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::setValue(org.nakedobjects.remoting.exchange.SetValueRequest):org.nakedobjects.remoting.exchange.SetValueResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::clearAssociation(org.nakedobjects.remoting.exchange.ClearAssociationRequest):org.nakedobjects.remoting.exchange.ClearAssociationResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::clearValue(org.nakedobjects.remoting.exchange.ClearValueRequest):org.nakedobjects.remoting.exchange.ClearValueResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::getObject(org.nakedobjects.remoting.exchange.GetObjectRequest):org.nakedobjects.remoting.exchange.GetObjectResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::resolveField(org.nakedobjects.remoting.exchange.ResolveFieldRequest):org.nakedobjects.remoting.exchange.ResolveFieldResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::resolveImmediately(org.nakedobjects.remoting.exchange.ResolveObjectRequest):org.nakedobjects.remoting.exchange.ResolveObjectResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::findInstances(org.nakedobjects.remoting.exchange.FindInstancesRequest):org.nakedobjects.remoting.exchange.FindInstancesResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::hasInstances(org.nakedobjects.remoting.exchange.HasInstancesRequest):org.nakedobjects.remoting.exchange.HasInstancesResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.facade.ServerFacade::oidForService(org.nakedobjects.remoting.exchange.OidForServiceRequest):org.nakedobjects.remoting.exchange.OidForServiceResponse" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder::encodeAuthorizeResponse(boolean):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder::encodeClientActionResult(org.nakedobjects.remoting.data.common.ReferenceData[], org.nakedobjects.metamodel.adapter.version.Version[], org.nakedobjects.remoting.data.common.ObjectData[]):org.nakedobjects.remoting.exchange.ExecuteClientActionResponse" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder::encodeForResolveField(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.remoting.data.Data" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder::encodeServerActionResult(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.remoting.data.common.ObjectData[], org.nakedobjects.remoting.data.common.ReferenceData[], org.nakedobjects.remoting.data.common.ObjectData, org.nakedobjects.remoting.data.common.ObjectData[], java.lang.String[], java.lang.String[]):org.nakedobjects.remoting.exchange.ExecuteServerActionResponse" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.remoting.protocol.encoding.internal.PersistenceQueryEncoderAbstract" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.protocol.encoding.internal.PersistenceQueryEncoderAbstract::doDecode(org.nakedobjects.metamodel.spec.NakedObjectSpecification, org.nakedobjects.remoting.data.query.PersistenceQueryData):org.nakedobjects.runtime.persistence.query.PersistenceQuery" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.remoting.server.SocketsViewerAbstract" />
			<role name="FactoryMethod()" element="org.nakedobjects.remoting.server.SocketsViewerAbstract::createServerConnection(java.io.InputStream, java.io.OutputStream, org.nakedobjects.remoting.facade.ServerFacade):org.nakedobjects.remoting.server.ServerConnection" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.authentication.AuthenticationManagerInstaller" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.authentication.AuthenticationManagerInstaller::createAuthenticationManager():org.nakedobjects.runtime.authentication.AuthenticationManager" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.authentication.standard.AuthenticationManagerStandardInstallerAbstract" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.authentication.standard.AuthenticationManagerStandardInstallerAbstract::createAuthenticator(org.nakedobjects.metamodel.config.NakedObjectConfiguration):org.nakedobjects.runtime.authentication.standard.Authenticator" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.authentication.standard.Authenticator" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.authentication.standard.Authenticator::authenticate(org.nakedobjects.runtime.authentication.AuthenticationRequest, java.lang.String):org.nakedobjects.metamodel.authentication.AuthenticationSession" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.authorization.AuthorizationManagerInstaller" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.authorization.AuthorizationManagerInstaller::createAuthorizationManager():org.nakedobjects.runtime.authorization.AuthorizationManager" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.authorization.standard.AuthorizationManagerStandardInstallerAbstract" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.authorization.standard.AuthorizationManagerStandardInstallerAbstract::createAuthorizor(org.nakedobjects.metamodel.config.NakedObjectConfiguration):org.nakedobjects.runtime.authorization.standard.Authorizor" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.imageloader.TemplateImageLoaderInstaller" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.imageloader.TemplateImageLoaderInstaller::createLoader():org.nakedobjects.runtime.imageloader.TemplateImageLoader" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.NakedObjectsAbstract" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.NakedObjectsAbstract::createOptionHandlerDeploymentType():org.nakedobjects.runtime.options.standard.OptionHandlerDeploymentType" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithmContractTest" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithmContractTest::createPersistAlgorithm():org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithm" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStorePersistenceMechanismInstallerAbstract" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStorePersistenceMechanismInstallerAbstract::createObjectStore(org.nakedobjects.metamodel.config.NakedObjectConfiguration, org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory, org.nakedobjects.runtime.persistence.adaptermanager.AdapterManager):org.nakedobjects.runtime.persistence.objectstore.ObjectStore" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.persistence.PersistenceMechanismInstallerAbstract" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.persistence.PersistenceMechanismInstallerAbstract::createPersistenceSession(org.nakedobjects.runtime.persistence.PersistenceSessionFactory, org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerExtended, org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory, org.nakedobjects.runtime.persistence.objectfactory.ObjectFactory, org.nakedobjects.runtime.persistence.oidgenerator.OidGenerator, org.nakedobjects.metamodel.services.ServicesInjector):org.nakedobjects.runtime.persistence.PersistenceSession" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.session.NakedObjectSessionFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.session.NakedObjectSessionFactory::openSession(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.session.NakedObjectSession" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.system.NakedObjectSystemFactory" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.system.NakedObjectSystemFactory::createSystem(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.system.NakedObjectsSystem" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.transaction.messagebroker.MessageBrokerInstaller" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.transaction.messagebroker.MessageBrokerInstaller::createMessageBroker():org.nakedobjects.runtime.transaction.messagebroker.MessageBroker" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.userprofile.UserProfileStoreInstaller" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.userprofile.UserProfileStoreInstaller::createUserProfileStore(org.nakedobjects.metamodel.config.NakedObjectConfiguration):org.nakedobjects.runtime.userprofile.UserProfileStore" />
		</instance>
		<instance>
			<role name="Creator" element="org.nakedobjects.runtime.web.EmbeddedWebServerInstaller" />
			<role name="FactoryMethod()" element="org.nakedobjects.runtime.web.EmbeddedWebServerInstaller::createEmbeddedWebServer():org.nakedobjects.runtime.web.EmbeddedWebServer" />
		</instance>
	</pattern>
	<pattern name="Prototype" />
	<pattern name="Singleton">
		<instance>
			<role name="Singleton" element="org.nakedobjects.applib.clock.Clock" />
			<role name="uniqueInstance" element="org.nakedobjects.applib.clock.Clock::instance:org.nakedobjects.applib.clock.Clock" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.metamodel.consent.Allow" />
			<role name="uniqueInstance" element="org.nakedobjects.metamodel.consent.Allow::DEFAULT:org.nakedobjects.metamodel.consent.Allow" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.metamodel.consent.InteractionAdvisor" />
			<role name="uniqueInstance" element="org.nakedobjects.metamodel.consent.InteractionAdvisor::NOOP:org.nakedobjects.metamodel.consent.InteractionAdvisor" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.metamodel.consent.InteractionAdvisorFacet" />
			<role name="uniqueInstance" element="org.nakedobjects.metamodel.consent.InteractionAdvisorFacet::NOOP:org.nakedobjects.metamodel.consent.InteractionAdvisorFacet" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.metamodel.consent.Veto" />
			<role name="uniqueInstance" element="org.nakedobjects.metamodel.consent.Veto::DEFAULT:org.nakedobjects.metamodel.consent.Veto" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.plugins.dnd.Toolkit" />
			<role name="uniqueInstance" element="org.nakedobjects.plugins.dnd.Toolkit::instance:org.nakedobjects.plugins.dnd.Toolkit" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="uniqueInstance" element="org.nakedobjects.plugins.dnd.viewer.drawing.Size::ALL:org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.plugins.dnd.viewer.image.ImageFactory" />
			<role name="uniqueInstance" element="org.nakedobjects.plugins.dnd.viewer.image.ImageFactory::instance:org.nakedobjects.plugins.dnd.viewer.image.ImageFactory" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.ConverterFactory" />
			<role name="uniqueInstance" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.ConverterFactory::instance:org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.ConverterFactory" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.plugins.sql.objectstore.FieldNameMapper" />
			<role name="uniqueInstance" element="org.nakedobjects.plugins.sql.objectstore.FieldNameMapper::instance:org.nakedobjects.plugins.sql.objectstore.FieldNameMapper" />
		</instance>
		<instance>
			<role name="Singleton" element="org.nakedobjects.runtime.context.NakedObjectsContext" />
			<role name="uniqueInstance" element="org.nakedobjects.runtime.context.NakedObjectsContext::singleton:org.nakedobjects.runtime.context.NakedObjectsContext" />
		</instance>
	</pattern>
	<pattern name="(Object)Adapter">
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.transport.socket.server.WorkerPool" />
			<role name="Adapter" element="org.nakedobjects.remoting.server.SocketsViewerAbstract" />
			<role name="adaptee" element="org.nakedobjects.remoting.server.SocketsViewerAbstract::workerPool:org.nakedobjects.remoting.transport.socket.server.WorkerPool" />
			<role name="Request()" element="org.nakedobjects.remoting.server.SocketsViewerAbstract::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.adapter.ResolveState" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter::resolveState:org.nakedobjects.metamodel.adapter.ResolveState" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter::changeState(org.nakedobjects.metamodel.adapter.ResolveState):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.adapter.ResolveState" />
			<role name="Adapter" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject" />
			<role name="adaptee" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject::state:org.nakedobjects.metamodel.adapter.ResolveState" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject::changeState(org.nakedobjects.metamodel.adapter.ResolveState):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.view.field.TextField" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.view.field.RevertFieldOption" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.view.field.RevertFieldOption::field:org.nakedobjects.plugins.dnd.viewer.view.field.TextField" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.field.RevertFieldOption::execute(org.nakedobjects.plugins.dnd.Workspace, org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.UserAction" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::action:org.nakedobjects.plugins.dnd.UserAction" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::canFocus():boolean" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::entered():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::mouseDown(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::mouseUp(org.nakedobjects.plugins.dnd.Click):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.system.specpeer.ExpectedSet" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.specpeer.DummyActionPeer" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.specpeer.DummyActionPeer::expectedActions:org.nakedobjects.runtime.system.specpeer.ExpectedSet" />
			<role name="Request()" element="org.nakedobjects.runtime.system.specpeer.DummyActionPeer::execute(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject[]):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.ContentDrag" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.ContentDrag::target:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::cancel(org.nakedobjects.plugins.dnd.Viewer):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::drag(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::end(org.nakedobjects.plugins.dnd.Viewer):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.ViewDrag" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.ViewDrag::dragView:org.nakedobjects.plugins.dnd.View" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.ViewDrag::viewsDecoratedWorkspace:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ViewDrag::drag(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ViewDrag::end(org.nakedobjects.plugins.dnd.Viewer):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.oidgenerator.simple.SerialOid$State" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.oidgenerator.simple.SerialOid" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.oidgenerator.simple.SerialOid::state:org.nakedobjects.runtime.persistence.oidgenerator.simple.SerialOid$State" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.oidgenerator.simple.SerialOid::isTransient():boolean" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.oidgenerator.simple.SerialOid::makePersistent():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.oidgenerator.simple.SerialOid::encode(org.nakedobjects.metamodel.commons.encoding.DataOutputExtended):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.applib.adapters.Parser" />
			<role name="Adapter" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacetUsingParser" />
			<role name="adaptee" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacetUsingParser::parser:org.nakedobjects.applib.adapters.Parser" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacetUsingParser::title(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.applib.adapters.Parser" />
			<role name="Adapter" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser" />
			<role name="adaptee" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser::parser:org.nakedobjects.applib.adapters.Parser" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser::parseTextEntry(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser::parseableTitle(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.applib.adapters.Parser" />
			<role name="Adapter" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetUsingParser" />
			<role name="adaptee" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetUsingParser::parser:org.nakedobjects.applib.adapters.Parser" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetUsingParser::value():int" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.content.CollectionActionContent" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.CollectionActionContent::invocation:org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.CollectionActionContent::disabled():org.nakedobjects.metamodel.consent.Consent" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.CollectionActionContent::execute():org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.CollectionActionContent::getActionName():java.lang.String" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.CollectionActionContent::getDescription():java.lang.String" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.CollectionActionContent::getParameterObject(int):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.CollectionActionContent::getCollection():org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectActionContent" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectActionContent::actionHelper:org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectActionContent::disabled():org.nakedobjects.metamodel.consent.Consent" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectActionContent::execute():org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectActionContent::getActionName():java.lang.String" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectActionContent::getParameterObject(int):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectActionContent::getDescription():java.lang.String" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectActionContent::getObject():org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectParameterImpl" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectParameterImpl::invocation:org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectParameterImpl::setObject(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableParameterImpl" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableParameterImpl::invocation:org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableParameterImpl::parseTextEntry(java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.ObjectField" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.content.OneToManyFieldImpl" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.OneToManyFieldImpl::field:org.nakedobjects.plugins.dnd.viewer.content.ObjectField" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.OneToManyFieldImpl::getOneToManyAssociation():org.nakedobjects.metamodel.spec.feature.OneToManyAssociation" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.html.servlet.internal.WebController" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.servlet.internal.WebController$DebugOff" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.servlet.internal.WebController$DebugOff::controller:org.nakedobjects.plugins.html.servlet.internal.WebController" />
			<role name="Request()" element="org.nakedobjects.plugins.html.servlet.internal.WebController$DebugOff::execute(org.nakedobjects.plugins.html.request.Request, org.nakedobjects.plugins.html.context.Context, org.nakedobjects.plugins.html.component.Page):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.html.servlet.internal.WebController" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.servlet.internal.WebController$DebugOn" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.servlet.internal.WebController$DebugOn::controller:org.nakedobjects.plugins.html.servlet.internal.WebController" />
			<role name="Request()" element="org.nakedobjects.plugins.html.servlet.internal.WebController$DebugOn::execute(org.nakedobjects.plugins.html.request.Request, org.nakedobjects.plugins.html.context.Context, org.nakedobjects.plugins.html.component.Page):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.applib.adapters.EncoderDecoder" />
			<role name="Adapter" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder" />
			<role name="adaptee" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder::encoderDecoder:org.nakedobjects.applib.adapters.EncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder::fromEncodedString(java.lang.String):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder::toEncodedString(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.applib.adapters.DefaultsProvider" />
			<role name="Adapter" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider" />
			<role name="adaptee" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider::defaultsProvider:org.nakedobjects.applib.adapters.DefaultsProvider" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider::getDefault():java.lang.Object" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder::builder:org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder::buildView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder::doLayout(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractView" />
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractView::specification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractView::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel" />
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel::rightHandSideSpecification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel::buildView():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::overlayView:org.nakedobjects.plugins.dnd.View" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::rootView:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::clearOverlayView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::setOverlayView(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::getOverlaySize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.lookup.DropDownObjectOverlaySpecification" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.lookup.OpenObjectDropDownBorder" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.lookup.OpenObjectDropDownBorder::spec:org.nakedobjects.plugins.dnd.viewer.lookup.DropDownObjectOverlaySpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.OpenObjectDropDownBorder::createOverlay():org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.lookup.DropDownObjectOverlaySpecification" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.lookup.OpenValueDropDownBorder" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.lookup.OpenValueDropDownBorder::spec:org.nakedobjects.plugins.dnd.viewer.lookup.DropDownObjectOverlaySpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.OpenValueDropDownBorder::createOverlay():org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.InteractionSpy" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::spy:org.nakedobjects.plugins.dnd.InteractionSpy" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::markDamaged(org.nakedobjects.plugins.dnd.viewer.drawing.Bounds):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.KeyboardManager" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::keyboardManager:org.nakedobjects.plugins.dnd.viewer.KeyboardManager" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::setKeyboardFocus(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::hasFocus(org.nakedobjects.plugins.dnd.View):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Bounds" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::redrawArea:org.nakedobjects.plugins.dnd.viewer.drawing.Bounds" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::NO_REDRAW:org.nakedobjects.plugins.dnd.viewer.drawing.Bounds" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::markDamaged(org.nakedobjects.plugins.dnd.viewer.drawing.Bounds):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::scheduleRepaint():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::NO_SIZE:org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::markDamaged(org.nakedobjects.plugins.dnd.viewer.drawing.Bounds):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStorePersistence" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::objectStore:org.nakedobjects.runtime.persistence.objectstore.ObjectStorePersistence" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::addPersistedObject(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::registerService(java.lang.String, org.nakedobjects.metamodel.adapter.oid.Oid):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::specificationLoader:org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::open():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.view.field.PasswordField" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.view.field.PasswordField::style:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.field.PasswordField::drawText(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Color, int):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.transport.pipe.PipedConnection" />
			<role name="Adapter" element="org.nakedobjects.remoting.transport.pipe.PipedClient" />
			<role name="adaptee" element="org.nakedobjects.remoting.transport.pipe.PipedClient::communication:org.nakedobjects.remoting.transport.pipe.PipedConnection" />
			<role name="Request()" element="org.nakedobjects.remoting.transport.pipe.PipedClient::executeRemotely(org.nakedobjects.remoting.exchange.Request):org.nakedobjects.remoting.exchange.ResponseEnvelope" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract$MemberType" />
			<role name="Adapter" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract" />
			<role name="adaptee" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract::memberType:org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract$MemberType" />
			<role name="Request()" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract::isAction():boolean" />
			<role name="Request()" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract::isAssociation():boolean" />
			<role name="Request()" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract::isOneToManyAssociation():boolean" />
			<role name="Request()" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract::isOneToOneAssociation():boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.FieldOrderCache" />
			<role name="Adapter" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault" />
			<role name="adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::fieldOrderCache:org.nakedobjects.remoting.protocol.encoding.internal.FieldOrderCache" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::getFieldOrder(org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation[]" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectDeserializer" />
			<role name="Adapter" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault" />
			<role name="adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::deserializer:org.nakedobjects.remoting.protocol.encoding.internal.ObjectDeserializer" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::madePersistent(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.remoting.data.common.ObjectData):void" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::decode(org.nakedobjects.remoting.data.Data):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::decode(org.nakedobjects.remoting.data.Data, org.nakedobjects.remoting.exchange.KnownObjectsRequest):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectSerializer" />
			<role name="Adapter" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault" />
			<role name="adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::serializer:org.nakedobjects.remoting.protocol.encoding.internal.ObjectSerializer" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeAsValue(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.remoting.data.common.EncodableObjectData" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeActionTarget(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.remoting.exchange.KnownObjectsRequest):org.nakedobjects.remoting.data.common.ReferenceData" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeForResolveField(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.remoting.data.Data" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeServerActionResult(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.remoting.data.common.ObjectData[], org.nakedobjects.remoting.data.common.ReferenceData[], org.nakedobjects.remoting.data.common.ObjectData, org.nakedobjects.remoting.data.common.ObjectData[], java.lang.String[], java.lang.String[]):org.nakedobjects.remoting.exchange.ExecuteServerActionResponse" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.sql.objectstore.SqlOid$State" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.SqlOid" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.SqlOid::state:org.nakedobjects.plugins.sql.objectstore.SqlOid$State" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.SqlOid::makePersistent():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.fixturesinstaller.FixturesInstallerDelegate" />
			<role name="Adapter" element="org.nakedobjects.runtime.fixturesinstaller.FixturesInstallerAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.fixturesinstaller.FixturesInstallerAbstract::delegate:org.nakedobjects.runtime.fixturesinstaller.FixturesInstallerDelegate" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.FixturesInstallerAbstract::installFixtures():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.tree.CompositeNodeSpecification" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.tree.CompositeNodeSpecification::builder:org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.tree.CompositeNodeSpecification::createNodeView(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugContent" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugContent::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugContent::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawing" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawing::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawing::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawingAbsolute" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawingAbsolute::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawingAbsolute::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugView" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugView::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugView::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugView::debugTitle():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugViewStructure" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugViewStructure::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugViewStructure::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.commons.debug.DebugString" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::buffer:org.nakedobjects.metamodel.commons.debug.DebugString" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::clearBackground(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::createSubcanvas():org.nakedobjects.plugins.dnd.Canvas" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::createSubcanvas(int, int, int, int):org.nakedobjects.plugins.dnd.Canvas" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::draw3DRectangle(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color, boolean):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawImage(org.nakedobjects.plugins.dnd.viewer.drawing.Image, int, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawImage(org.nakedobjects.plugins.dnd.viewer.drawing.Image, int, int, int, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawLine(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawLine(org.nakedobjects.plugins.dnd.viewer.drawing.Location, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawOval(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawRectangle(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawRectangleAround(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawRoundedRectangle(int, int, int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawShape(org.nakedobjects.plugins.dnd.viewer.drawing.Shape, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawShape(org.nakedobjects.plugins.dnd.viewer.drawing.Shape, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawSolidOval(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawSolidRectangle(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawSolidShape(org.nakedobjects.plugins.dnd.viewer.drawing.Shape, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawSolidShape(org.nakedobjects.plugins.dnd.viewer.drawing.Shape, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawText(java.lang.String, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color, org.nakedobjects.plugins.dnd.viewer.drawing.Text):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::drawText(java.lang.String, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color, org.nakedobjects.plugins.dnd.viewer.drawing.Text):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvas::offset(int, int):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.commons.debug.DebugString" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::buffer:org.nakedobjects.metamodel.commons.debug.DebugString" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::clearBackground(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::createSubcanvas():org.nakedobjects.plugins.dnd.Canvas" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::createSubcanvas(int, int, int, int):org.nakedobjects.plugins.dnd.Canvas" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::draw3DRectangle(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color, boolean):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawImage(org.nakedobjects.plugins.dnd.viewer.drawing.Image, int, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawImage(org.nakedobjects.plugins.dnd.viewer.drawing.Image, int, int, int, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawLine(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawLine(org.nakedobjects.plugins.dnd.viewer.drawing.Location, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawOval(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawRectangle(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawRectangleAround(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawRoundedRectangle(int, int, int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawShape(org.nakedobjects.plugins.dnd.viewer.drawing.Shape, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawShape(org.nakedobjects.plugins.dnd.viewer.drawing.Shape, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawSolidOval(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawSolidRectangle(int, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawSolidShape(org.nakedobjects.plugins.dnd.viewer.drawing.Shape, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawSolidShape(org.nakedobjects.plugins.dnd.viewer.drawing.Shape, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawText(java.lang.String, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color, org.nakedobjects.plugins.dnd.viewer.drawing.Text):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugCanvasAbsolute::drawText(java.lang.String, int, int, int, org.nakedobjects.plugins.dnd.viewer.drawing.Color, org.nakedobjects.plugins.dnd.viewer.drawing.Text):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.builder.CollectionElementBuilder" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.builder.CollectionElementBuilder::subviewDesign:org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.builder.CollectionElementBuilder::build(org.nakedobjects.plugins.dnd.View):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.lookup.DropDownListBuilder" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.lookup.DropDownListBuilder::subviewSpecification:org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.DropDownListBuilder::build(org.nakedobjects.plugins.dnd.View):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.applib.value.Money" />
			<role name="Adapter" element="org.nakedobjects.example.expenses.claims.items.Hotel" />
			<role name="adaptee" element="org.nakedobjects.example.expenses.claims.items.Hotel::accommodation:org.nakedobjects.applib.value.Money" />
			<role name="Request()" element="org.nakedobjects.example.expenses.claims.items.Hotel::mandatorySubClassFieldsComplete():boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.options.standard.OptionHandlerDeploymentType" />
			<role name="Adapter" element="org.nakedobjects.runtime.NakedObjects" />
			<role name="adaptee" element="org.nakedobjects.runtime.NakedObjects::flagHandlerDeploymentType:org.nakedobjects.runtime.options.standard.OptionHandlerDeploymentType" />
			<role name="Request()" element="org.nakedobjects.runtime.NakedObjects::deploymentType():org.nakedobjects.runtime.system.DeploymentType" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.options.standard.OptionHandlerPassword" />
			<role name="Adapter" element="org.nakedobjects.runtime.NakedObjects" />
			<role name="adaptee" element="org.nakedobjects.runtime.NakedObjects::flagHandlerPassword:org.nakedobjects.runtime.options.standard.OptionHandlerPassword" />
			<role name="Request()" element="org.nakedobjects.runtime.NakedObjects::validateUserAndPasswordCombo():boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.options.standard.OptionHandlerUser" />
			<role name="Adapter" element="org.nakedobjects.runtime.NakedObjects" />
			<role name="adaptee" element="org.nakedobjects.runtime.NakedObjects::flagHandlerUser:org.nakedobjects.runtime.options.standard.OptionHandlerUser" />
			<role name="Request()" element="org.nakedobjects.runtime.NakedObjects::validateUserAndPasswordCombo():boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.sql.objectstore.VersionMapping" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::versionMapping:org.nakedobjects.plugins.sql.objectstore.VersionMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::createObject(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::destroyObject(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::resolve(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::save(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.sql.objectstore.VersionMapping" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::versionMapping:org.nakedobjects.plugins.sql.objectstore.VersionMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::createTables(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlFile" />
			<role name="Adapter" element="org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlDataManager" />
			<role name="adaptee" element="org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlDataManager::xmlFile:org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlFile" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlDataManager::isFixturesInstalled():boolean" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlDataManager::loadData(org.nakedobjects.runtime.persistence.oidgenerator.simple.SerialOid):org.nakedobjects.plugins.xml.objectstore.internal.data.Data" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlDataManager::getDebugData():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.query.QueryPlaceholder" />
			<role name="Adapter" element="org.nakedobjects.plugins.hibernate.objectstore.metamodel.criteria.HibernateQueryCriteria" />
			<role name="adaptee" element="org.nakedobjects.plugins.hibernate.objectstore.metamodel.criteria.HibernateQueryCriteria::query:org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.query.QueryPlaceholder" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.metamodel.criteria.HibernateQueryCriteria::getResults():java.util.List" />
		</instance>
		<instance>
			<role name="Adapter" element="org.nakedobjects.plugins.headless.embedded.NakedObjectsMetaModel" />
			<role name="Adaptee" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorAbstract" />
			<role name="adaptee" element="org.nakedobjects.plugins.headless.embedded.NakedObjectsMetaModel::reflector:org.nakedobjects.metamodel.specloader.NakedObjectReflectorAbstract" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.NakedObjectsMetaModel::init():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::table:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::focusNextView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::focusPreviousView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::focusInitialChildView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::getFocus():org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::setFocus(org.nakedobjects.plugins.dnd.View):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::container:org.nakedobjects.plugins.dnd.View" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::focus:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::focusParentView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::setFocus(org.nakedobjects.plugins.dnd.View):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.border.ButtonBorder" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.view.dialog.ActionDialogFocusManager" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.view.dialog.ActionDialogFocusManager::buttonBorder:org.nakedobjects.plugins.dnd.viewer.border.ButtonBorder" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.dialog.ActionDialogFocusManager::getChildViews():org.nakedobjects.plugins.dnd.View[]" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.border.WindowBorder" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.focus.SubviewFocusManager" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.focus.SubviewFocusManager::windowBorder:org.nakedobjects.plugins.dnd.viewer.border.WindowBorder" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.focus.SubviewFocusManager::getChildViews():org.nakedobjects.plugins.dnd.View[]" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.table.AbstractTableSpecification" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.table.AbstractTableSpecification::rowSpecification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.table.AbstractTableSpecification::createSubview(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis, int):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Adapter" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault" />
			<role name="adaptee" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::runtimeContext:org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::resolve(java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::resolve(java.lang.Object, java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::objectChanged(java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::flush():boolean" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::commit():void" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::setRuntimeContext(org.nakedobjects.metamodel.runtimecontext.RuntimeContext):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.installers.InstallerLookup" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::installerLookup:org.nakedobjects.runtime.installers.InstallerLookup" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::getConfiguration():org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainReflector(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.metamodel.specloader.NakedObjectReflector" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainServices():java.util.List" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainPersistenceSessionFactory(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerExtended" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::adapterManager:org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerExtended" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::open():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::close():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.sql.objectstore.IdMapping" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::idMapping:org.nakedobjects.plugins.sql.objectstore.IdMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::createTables(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::loadInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::saveInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.sql.objectstore.IdMapping" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::idMapping:org.nakedobjects.plugins.sql.objectstore.IdMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::createObject(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::destroyObject(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::resolve(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoMapper::save(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="Adapter" element="org.nakedobjects.runtime.context.NakedObjectsContextStatic" />
			<role name="adaptee" element="org.nakedobjects.runtime.context.NakedObjectsContextStatic::session:org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="Request()" element="org.nakedobjects.runtime.context.NakedObjectsContextStatic::openSessionInstance(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.session.NakedObjectSession" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.memento.Memento" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.context.TransientObjectMapping" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.context.TransientObjectMapping::memento:org.nakedobjects.runtime.memento.Memento" />
			<role name="Request()" element="org.nakedobjects.plugins.html.context.TransientObjectMapping::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Request()" element="org.nakedobjects.plugins.html.context.TransientObjectMapping::restoreToLoader():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacet" />
			<role name="Adapter" element="org.nakedobjects.metamodel.facets.object.defaults.PropertyDefaultFacetDerivedFromDefaultedFacet" />
			<role name="adaptee" element="org.nakedobjects.metamodel.facets.object.defaults.PropertyDefaultFacetDerivedFromDefaultedFacet::typeFacet:org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacet" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.defaults.PropertyDefaultFacetDerivedFromDefaultedFacet::getDefault(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl" />
			<role name="Adapter" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionParameterAbstract" />
			<role name="adaptee" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionParameterAbstract::parentAction:org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl" />
			<role name="Request()" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionParameterAbstract::getChoices(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.adapter.NakedObject[]" />
			<role name="Request()" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionParameterAbstract::getDefault(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.SpyWindow$SpyFrame" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.SpyWindow" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.SpyWindow::frame:org.nakedobjects.plugins.dnd.viewer.SpyWindow$SpyFrame" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.SpyWindow::display(int, java.lang.String[][], java.lang.String[], int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.SpyWindow::open():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.SpyWindow::close():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.sql.objectstore.SqlObjectStore" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.SqlPersistorInstaller" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.SqlPersistorInstaller::objectStore:org.nakedobjects.plugins.sql.objectstore.SqlObjectStore" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.SqlPersistorInstaller::createObjectStore(org.nakedobjects.metamodel.config.NakedObjectConfiguration, org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory, org.nakedobjects.runtime.persistence.adaptermanager.AdapterManager):org.nakedobjects.runtime.persistence.objectstore.ObjectStore" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore" />
			<role name="Adapter" element="org.nakedobjects.plugins.xml.objectstore.XmlPersistenceMechanismInstaller" />
			<role name="adaptee" element="org.nakedobjects.plugins.xml.objectstore.XmlPersistenceMechanismInstaller::objectStore:org.nakedobjects.plugins.xml.objectstore.XmlObjectStore" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlPersistenceMechanismInstaller::createObjectStore(org.nakedobjects.metamodel.config.NakedObjectConfiguration, org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory, org.nakedobjects.runtime.persistence.adaptermanager.AdapterManager):org.nakedobjects.runtime.persistence.objectstore.ObjectStore" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.RenderingArea" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::renderingArea:org.nakedobjects.plugins.dnd.viewer.RenderingArea" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::selectFilePath(java.lang.String, java.lang.String):java.lang.String" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::scheduleRepaint():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Adapter" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl" />
			<role name="adaptee" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::encoderDecoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::authorizeVisibility(org.nakedobjects.remoting.exchange.AuthorizationRequestVisibility):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::authorizeUsability(org.nakedobjects.remoting.exchange.AuthorizationRequestUsability):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::executeClientAction(org.nakedobjects.remoting.exchange.ExecuteClientActionRequest):org.nakedobjects.remoting.exchange.ExecuteClientActionResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::executeServerAction(org.nakedobjects.remoting.exchange.ExecuteServerActionRequest):org.nakedobjects.remoting.exchange.ExecuteServerActionResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::getObject(org.nakedobjects.remoting.exchange.GetObjectRequest):org.nakedobjects.remoting.exchange.GetObjectResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::resolveField(org.nakedobjects.remoting.exchange.ResolveFieldRequest):org.nakedobjects.remoting.exchange.ResolveFieldResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::resolveImmediately(org.nakedobjects.remoting.exchange.ResolveObjectRequest):org.nakedobjects.remoting.exchange.ResolveObjectResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::findInstances(org.nakedobjects.remoting.exchange.FindInstancesRequest):org.nakedobjects.remoting.exchange.FindInstancesResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::oidForService(org.nakedobjects.remoting.exchange.OidForServiceRequest):org.nakedobjects.remoting.exchange.OidForServiceResponse" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.adaptermanager.internal.PojoAdapterMap" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault::pojoAdapterMap:org.nakedobjects.runtime.persistence.adaptermanager.internal.PojoAdapterMap" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.userprofile.UserProfileStore" />
			<role name="Adapter" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault" />
			<role name="adaptee" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::store:org.nakedobjects.runtime.userprofile.UserProfileStore" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::isFixturesInstalled():boolean" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::saveAsDefault(org.nakedobjects.runtime.userprofile.UserProfile):void" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::saveForUser(java.lang.String, org.nakedobjects.runtime.userprofile.UserProfile):void" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::getProfile(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.userprofile.UserProfile" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping::field:org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping::appendInsertValues(java.lang.StringBuffer, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping::appendUpdateValues(java.lang.StringBuffer, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping::initializeField(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.plugins.sql.objectstore.Results):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.jdbc.JdbcObjectReferenceFieldMapping" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.jdbc.JdbcObjectReferenceFieldMapping::field:org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.JdbcObjectReferenceFieldMapping::appendInsertValues(java.lang.StringBuffer, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.JdbcObjectReferenceFieldMapping::appendUpdateValues(java.lang.StringBuffer, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.task.MethodTask" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.task.MethodTask::action:org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.MethodTask::checkForValidity(org.nakedobjects.plugins.html.context.Context):void" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.MethodTask::completeTask(org.nakedobjects.plugins.html.context.Context, org.nakedobjects.plugins.html.component.Page):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::field:org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::loadInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::saveInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::field:org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::loadInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::saveInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.transport.Transport" />
			<role name="Adapter" element="org.nakedobjects.remoting.protocol.MarshallerAbstract" />
			<role name="adaptee" element="org.nakedobjects.remoting.protocol.MarshallerAbstract::transport:org.nakedobjects.remoting.transport.Transport" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.MarshallerAbstract::connect():void" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.MarshallerAbstract::disconnect():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.adaptermanager.internal.OidAdapterMap" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault::oidAdapterMap:org.nakedobjects.runtime.persistence.adaptermanager.internal.OidAdapterMap" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryAbstract::specification:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryAbstract::encode(org.nakedobjects.metamodel.commons.encoding.DataOutputExtended):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.feature.ParseableEntryActionParameter" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableParameterImpl" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableParameterImpl::parameter:org.nakedobjects.metamodel.spec.feature.ParseableEntryActionParameter" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableParameterImpl::parseTextEntry(java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Location" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.basic.LogoBackground" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.basic.LogoBackground::location:org.nakedobjects.plugins.dnd.viewer.drawing.Location" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.LogoBackground::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.basic.LogoBackground" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.basic.LogoBackground::logoSize:org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.LogoBackground::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.action.OpenViewOption" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.action.OpenViewOption::specification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.OpenViewOption::execute(org.nakedobjects.plugins.dnd.Workspace, org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.action.ReplaceViewOption" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.action.ReplaceViewOption::specification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.ReplaceViewOption::execute(org.nakedobjects.plugins.dnd.Workspace, org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.border.LineStyleWindowBorder" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.border.LineStyleWindowBorder::TITLE_STYLE:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.LineStyleWindowBorder::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size, boolean, org.nakedobjects.plugins.dnd.ViewState, org.nakedobjects.plugins.dnd.viewer.action.WindowControl[], java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.border.SimpleStyleWindowBorder" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.border.SimpleStyleWindowBorder::TITLE_STYLE:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.SimpleStyleWindowBorder::getRequiredSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size, java.lang.String, org.nakedobjects.plugins.dnd.viewer.action.WindowControl[]):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.border.SwingStyleWindowBorder" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.border.SwingStyleWindowBorder::TITLE_STYLE:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.SwingStyleWindowBorder::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size, boolean, org.nakedobjects.plugins.dnd.ViewState, org.nakedobjects.plugins.dnd.viewer.action.WindowControl[], java.lang.String):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.SwingStyleWindowBorder::getRequiredSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size, java.lang.String, org.nakedobjects.plugins.dnd.viewer.action.WindowControl[]):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::elementMapping:org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::createTables(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::loadInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::saveInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
			<role name="Adapter" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper" />
			<role name="adaptee" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::idMapping:org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::createTables(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::loadInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegate" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegating" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegating::persistenceSessionFactoryDelegate:org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegate" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegating::createPersistenceSession():org.nakedobjects.runtime.persistence.PersistenceSession" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlFile" />
			<role name="Adapter" element="org.nakedobjects.plugins.xml.profilestore.XmlUserProfileStore" />
			<role name="adaptee" element="org.nakedobjects.plugins.xml.profilestore.XmlUserProfileStore::xmlFile:org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlFile" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.profilestore.XmlUserProfileStore::getUserProfile(java.lang.String):org.nakedobjects.runtime.userprofile.UserProfile" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.profilestore.XmlUserProfileStore::isFixturesInstalled():boolean" />
		</instance>
		<instance>
			<role name="Adapter" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract" />
			<role name="Adaptee" element="org.nakedobjects.runtime.userprofile.UserProfileLoader" />
			<role name="adaptee" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::userProfileLoader:org.nakedobjects.runtime.userprofile.UserProfileLoader" />
			<role name="Request()" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::openSession(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.session.NakedObjectSession" />
		</instance>
		<instance>
			<role name="Adapter" element="org.nakedobjects.plugins.html.component.html.DynamicHtmlPage" />
			<role name="Adaptee" element="org.nakedobjects.plugins.html.component.Block" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.component.html.DynamicHtmlPage::navigation:org.nakedobjects.plugins.html.component.Block" />
			<role name="Request()" element="org.nakedobjects.plugins.html.component.html.DynamicHtmlPage::writeContent(java.io.PrintWriter):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.oidgenerator.OidGenerator" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::oidGenerator:org.nakedobjects.runtime.persistence.oidgenerator.OidGenerator" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::open():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::close():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.userprofile.UserProfile" />
			<role name="Adapter" element="org.nakedobjects.runtime.fixturesinstaller.ProfileImpl" />
			<role name="adaptee" element="org.nakedobjects.runtime.fixturesinstaller.ProfileImpl::userProfile:org.nakedobjects.runtime.userprofile.UserProfile" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.ProfileImpl::addToOptions(java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.ProfileImpl::addToPerspectives(org.nakedobjects.applib.profiles.Perspective):void" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.ProfileImpl::getPerspective(java.lang.String):org.nakedobjects.applib.profiles.Perspective" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.ProfileImpl::newPerspective(java.lang.String):org.nakedobjects.applib.profiles.Perspective" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::servicesInjector:org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::open():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::close():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="Adapter" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel" />
			<role name="adaptee" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::servicesInjector:org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::init():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.TextParseableContent" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.lookup.ValueDropDownAxis" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.lookup.ValueDropDownAxis::content:org.nakedobjects.plugins.dnd.TextParseableContent" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.ValueDropDownAxis::setSelection(org.nakedobjects.plugins.dnd.viewer.lookup.OptionContent):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.action.Button3DStyleRender" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.action.Button3DStyleRender::style:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.Button3DStyleRender::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size, boolean, boolean, boolean, boolean, boolean, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.action.ButtonLineStyleRender" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.action.ButtonLineStyleRender::style:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.ButtonLineStyleRender::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size, boolean, boolean, boolean, boolean, boolean, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.feature.OneToManyAssociation" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask::field:org.nakedobjects.metamodel.spec.feature.OneToManyAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask::checkForValidity(org.nakedobjects.plugins.html.context.Context):void" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask::completeTask(org.nakedobjects.plugins.html.context.Context, org.nakedobjects.plugins.html.component.Page):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.component.html.CollectionIcon" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.component.html.CollectionIcon::collection:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.html.component.html.CollectionIcon::write(java.io.PrintWriter):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.component.html.ObjectIcon" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.component.html.ObjectIcon::element:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.html.component.html.ObjectIcon::write(java.io.PrintWriter):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.notifier.ViewUpdateNotifier" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer::updateNotifier:org.nakedobjects.plugins.dnd.viewer.notifier.ViewUpdateNotifier" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::addToNotificationList(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::disposeUnneededViews():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::removeFromNotificationList(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::scheduleRepaint():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="Adapter" element="org.nakedobjects.runtime.installers.InstallerLookupDefault" />
			<role name="adaptee" element="org.nakedobjects.runtime.installers.InstallerLookupDefault::configurationBuilder:org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="Request()" element="org.nakedobjects.runtime.installers.InstallerLookupDefault::getConfiguration():org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlFile" />
			<role name="Adapter" element="org.nakedobjects.plugins.xml.objectstore.internal.services.xml.XmlServiceManager" />
			<role name="adaptee" element="org.nakedobjects.plugins.xml.objectstore.internal.services.xml.XmlServiceManager::xmlFile:org.nakedobjects.plugins.xml.objectstore.internal.data.xml.XmlFile" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.internal.services.xml.XmlServiceManager::loadServices():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::adapterFactory:org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::open():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::close():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.userprofile.PerspectiveEntry" />
			<role name="Adapter" element="org.nakedobjects.runtime.fixturesinstaller.PerspectiveImpl" />
			<role name="adaptee" element="org.nakedobjects.runtime.fixturesinstaller.PerspectiveImpl::entry:org.nakedobjects.runtime.userprofile.PerspectiveEntry" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.PerspectiveImpl::addGenericRepository(java.lang.Class):void" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.PerspectiveImpl::addToObjects(java.lang.Object[]):void" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.PerspectiveImpl::addToServices(java.lang.Class):java.lang.Object" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.PerspectiveImpl::addToServices(java.lang.Class):void" />
			<role name="Request()" element="org.nakedobjects.runtime.fixturesinstaller.PerspectiveImpl::removeFromServices(java.lang.Class):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.DebugOptions" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.DebugOptions::viewer:org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.DebugOptions::menuOptions(org.nakedobjects.plugins.dnd.UserActionSet):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.nakedobjects.plugins.html.component.html.DynamicHtmlPage" />
			<role name="Adaptee" element="org.nakedobjects.plugins.html.component.ViewPane" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.component.html.DynamicHtmlPage::viewPane:org.nakedobjects.plugins.html.component.ViewPane" />
			<role name="Request()" element="org.nakedobjects.plugins.html.component.html.DynamicHtmlPage::writeContent(java.io.PrintWriter):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.data.DataFactory" />
			<role name="Adapter" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault" />
			<role name="adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::dataFactory:org.nakedobjects.remoting.data.DataFactory" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeIdentityData(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.remoting.data.common.IdentityData" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeForResolveField(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.remoting.data.Data" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeMadePersistentGraph(org.nakedobjects.remoting.data.common.ObjectData, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.remoting.data.common.ObjectData" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeServerActionResult(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.remoting.data.common.ObjectData[], org.nakedobjects.remoting.data.common.ReferenceData[], org.nakedobjects.remoting.data.common.ObjectData, org.nakedobjects.remoting.data.common.ObjectData[], java.lang.String[], java.lang.String[]):org.nakedobjects.remoting.exchange.ExecuteServerActionResponse" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.bytecode.cglib.persistence.objectfactory.internal.ObjectResolveAndObjectChangedEnhancer" />
			<role name="Adapter" element="org.nakedobjects.bytecode.cglib.persistence.objectfactory.CglibObjectFactory" />
			<role name="adaptee" element="org.nakedobjects.bytecode.cglib.persistence.objectfactory.CglibObjectFactory::classEnhancer:org.nakedobjects.bytecode.cglib.persistence.objectfactory.internal.ObjectResolveAndObjectChangedEnhancer" />
			<role name="Request()" element="org.nakedobjects.bytecode.cglib.persistence.objectfactory.CglibObjectFactory::doInstantiate():java.lang.Object" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.bytecode.javassist.persistence.objectfactory.internal.ObjectResolveAndObjectChangedEnhancer" />
			<role name="Adapter" element="org.nakedobjects.bytecode.javassist.persistence.objectfactory.JavassistObjectFactory" />
			<role name="adaptee" element="org.nakedobjects.bytecode.javassist.persistence.objectfactory.JavassistObjectFactory::classEnhancer:org.nakedobjects.bytecode.javassist.persistence.objectfactory.internal.ObjectResolveAndObjectChangedEnhancer" />
			<role name="Request()" element="org.nakedobjects.bytecode.javassist.persistence.objectfactory.JavassistObjectFactory::doInstantiate():java.lang.Object" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
			<role name="Adapter" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::persistenceSessionFactory:org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
			<role name="Request()" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::openSession(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.session.NakedObjectSession" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.objectfactory.ObjectFactory" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::objectFactory:org.nakedobjects.runtime.persistence.objectfactory.ObjectFactory" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::open():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::close():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.system.internal.monitor.MonitorListenerImpl" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.internal.monitor.HttpServerMonitor" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.internal.monitor.HttpServerMonitor::monitor:org.nakedobjects.runtime.system.internal.monitor.MonitorListenerImpl" />
			<role name="Request()" element="org.nakedobjects.runtime.system.internal.monitor.HttpServerMonitor::handleRequest(java.io.PrintWriter, java.lang.String):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.system.internal.monitor.MonitorListenerImpl" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.internal.monitor.SocketServerMonitor" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.internal.monitor.SocketServerMonitor::monitor:org.nakedobjects.runtime.system.internal.monitor.MonitorListenerImpl" />
			<role name="Request()" element="org.nakedobjects.runtime.system.internal.monitor.SocketServerMonitor::handleRequest(java.io.PrintWriter, java.lang.String):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.adapter.version.Version" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter::version:org.nakedobjects.metamodel.adapter.version.Version" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter::checkLock(org.nakedobjects.metamodel.adapter.version.Version):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.adapter.version.Version" />
			<role name="Adapter" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject" />
			<role name="adaptee" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject::version:org.nakedobjects.metamodel.adapter.version.Version" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject::checkLock(org.nakedobjects.metamodel.adapter.version.Version):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeer" />
			<role name="Adapter" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl" />
			<role name="adaptee" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl::nakedObjectActionPeer:org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeer" />
			<role name="Request()" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl::getParameterCount():int" />
			<role name="Request()" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl::getParameters():org.nakedobjects.metamodel.spec.feature.NakedObjectActionParameter[]" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.Viewer" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.view.help.InternalHelpViewer" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.view.help.InternalHelpViewer::viewer:org.nakedobjects.plugins.dnd.Viewer" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.help.InternalHelpViewer::open(org.nakedobjects.plugins.dnd.viewer.drawing.Location, java.lang.String, java.lang.String, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.protocol.ServerMarshaller" />
			<role name="Adapter" element="org.nakedobjects.remoting.server.ServerConnectionDefault" />
			<role name="adaptee" element="org.nakedobjects.remoting.server.ServerConnectionDefault::serverMarshaller:org.nakedobjects.remoting.protocol.ServerMarshaller" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionDefault::readRequest():org.nakedobjects.remoting.exchange.Request" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionDefault::sendResponse(java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionDefault::sendError(org.nakedobjects.metamodel.commons.exceptions.NakedObjectException):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.authentication.AuthenticationManager" />
			<role name="Adapter" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl" />
			<role name="adaptee" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::authenticationManager:org.nakedobjects.runtime.authentication.AuthenticationManager" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::openSession(org.nakedobjects.remoting.exchange.OpenSessionRequest):org.nakedobjects.remoting.exchange.OpenSessionResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::closeSession(org.nakedobjects.remoting.exchange.CloseSessionRequest):org.nakedobjects.remoting.exchange.CloseSessionResponse" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Adapter" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy" />
			<role name="adaptee" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::encoderDecoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::reload(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.services.ServicesInstaller" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::servicesInstaller:org.nakedobjects.runtime.persistence.services.ServicesInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainServices():java.util.List" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.identifier.Identified" />
			<role name="Adapter" element="org.nakedobjects.metamodel.examples.facets.jsr303.Jsr303PropertyValidationFacet" />
			<role name="adaptee" element="org.nakedobjects.metamodel.examples.facets.jsr303.Jsr303PropertyValidationFacet::identifierHolder:org.nakedobjects.metamodel.spec.identifier.Identified" />
			<role name="Request()" element="org.nakedobjects.metamodel.examples.facets.jsr303.Jsr303PropertyValidationFacet::invalidates(org.nakedobjects.metamodel.interactions.ValidityContext):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.context.PersistentObjectMapping" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.context.PersistentObjectMapping::specification:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.html.context.PersistentObjectMapping::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorInstaller" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::reflectorInstaller:org.nakedobjects.metamodel.specloader.NakedObjectReflectorInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainReflector(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.metamodel.specloader.NakedObjectReflector" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.CollectionSorter" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent::sorter:org.nakedobjects.plugins.dnd.CollectionSorter" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent::allElements():java.util.Enumeration" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.OverlayDebugFrame" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.OverlayDebugFrame::viewer:org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.OverlayDebugFrame::getInfo():org.nakedobjects.metamodel.commons.debug.DebugInfo[]" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.html.task.Task" />
			<role name="Adapter" element="org.nakedobjects.plugins.html.crumb.TaskCrumb" />
			<role name="adaptee" element="org.nakedobjects.plugins.html.crumb.TaskCrumb::task:org.nakedobjects.plugins.html.task.Task" />
			<role name="Request()" element="org.nakedobjects.plugins.html.crumb.TaskCrumb::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Request()" element="org.nakedobjects.plugins.html.crumb.TaskCrumb::title():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.authentication.AuthenticationManagerInstaller" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::authenticationInstaller:org.nakedobjects.runtime.authentication.AuthenticationManagerInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainAuthenticationManager(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.authentication.AuthenticationManager" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.PersistenceMechanismInstaller" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::persistenceMechanismInstaller:org.nakedobjects.runtime.persistence.PersistenceMechanismInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainPersistenceSessionFactory(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.userprofile.UserProfileStoreInstaller" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::userProfileStoreInstaller:org.nakedobjects.runtime.userprofile.UserProfileStoreInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainUserProfileStore():org.nakedobjects.runtime.userprofile.UserProfileStore" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.commons.component.Installer" />
			<role name="Adapter" element="org.nakedobjects.runtime.installers.InstallerVersion" />
			<role name="adaptee" element="org.nakedobjects.runtime.installers.InstallerVersion::installer:org.nakedobjects.metamodel.commons.component.Installer" />
			<role name="Request()" element="org.nakedobjects.runtime.installers.InstallerVersion::getName():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.content.FieldComparator" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.content.FieldComparator::field:org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.FieldComparator::init(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.FieldComparator::compare(org.nakedobjects.metamodel.adapter.NakedObject):int" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.ObjectContent" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.lookup.ObjectDropDownAxis" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.lookup.ObjectDropDownAxis::content:org.nakedobjects.plugins.dnd.ObjectContent" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.ObjectDropDownAxis::setSelection(org.nakedobjects.plugins.dnd.viewer.lookup.OptionContent):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.plugins.dnd.Content" />
			<role name="Adapter" element="org.nakedobjects.plugins.dnd.viewer.view.text.ObjectTitleText" />
			<role name="adaptee" element="org.nakedobjects.plugins.dnd.viewer.view.text.ObjectTitleText::content:org.nakedobjects.plugins.dnd.Content" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.text.ObjectTitleText::title():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.system.NakedObjectsSystem" />
			<role name="Adapter" element="org.nakedobjects.runtime.system.internal.monitor.SocketServerMonitor" />
			<role name="adaptee" element="org.nakedobjects.runtime.system.internal.monitor.SocketServerMonitor::system:org.nakedobjects.runtime.system.NakedObjectsSystem" />
			<role name="Request()" element="org.nakedobjects.runtime.system.internal.monitor.SocketServerMonitor::handleRequest(java.io.PrintWriter, java.lang.String):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStoreTransactionManagement" />
			<role name="Adapter" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransaction" />
			<role name="adaptee" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransaction::objectStore:org.nakedobjects.runtime.persistence.objectstore.ObjectStoreTransactionManagement" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransaction::doFlush():void" />
		</instance>
	</pattern>
	<pattern name="Command">
		<instance>
			<role name="Receiver" element="org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="ConcreteCommand" element="org.nakedobjects.plugins.dnd.viewer.undo.AssociateCommand" />
			<role name="receiver" element="org.nakedobjects.plugins.dnd.viewer.undo.AssociateCommand::field:org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="Execute()" element="org.nakedobjects.plugins.dnd.viewer.undo.AssociateCommand::undo():void" />
			<role name="Execute()" element="org.nakedobjects.plugins.dnd.viewer.undo.AssociateCommand::execute():void" />
		</instance>
		<instance>
			<role name="Receiver" element="org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="ConcreteCommand" element="org.nakedobjects.plugins.dnd.viewer.undo.SetValueCommand" />
			<role name="receiver" element="org.nakedobjects.plugins.dnd.viewer.undo.SetValueCommand::value:org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="Execute()" element="org.nakedobjects.plugins.dnd.viewer.undo.SetValueCommand::undo():void" />
		</instance>
	</pattern>
	<pattern name="Composite">
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.commons.resource.ResourceStreamSource" />
			<role name="Composite" element="org.nakedobjects.metamodel.commons.resource.ResourceStreamSourceComposite" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.resource.ResourceStreamSourceComposite::writeResource(java.lang.String):java.io.OutputStream" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.specloader.validator.MetaModelValidator" />
			<role name="Composite" element="org.nakedobjects.metamodel.specloader.validator.MetaModelValidatorComposite" />
			<role name="Operation()" element="org.nakedobjects.metamodel.specloader.validator.MetaModelValidatorComposite::validate():void" />
		</instance>
	</pattern>
	<pattern name="Decorator">
		<instance>
			<role name="Component" element="org.nakedobjects.applib.spec.Specification" />
			<role name="Decorator" element="org.nakedobjects.applib.spec.SpecificationNot" />
			<role name="component" element="org.nakedobjects.applib.spec.SpecificationNot::specification:org.nakedobjects.applib.spec.Specification" />
			<role name="Operation()" element="org.nakedobjects.applib.spec.SpecificationNot::satisfies(java.lang.Object):java.lang.String" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtended" />
			<role name="Decorator" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator" />
			<role name="component" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::underlying:org.nakedobjects.metamodel.commons.encoding.DataInputExtended" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::getDataInputStream():java.io.DataInputStream" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readBooleans():boolean[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readChars():char[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readBytes():byte[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readShorts():short[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readInts():int[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readLongs():long[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readFloats():float[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readDoubles():double[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataInputExtendedDecorator::readUTFs():java.lang.String[]" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtended" />
			<role name="Decorator" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator" />
			<role name="component" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::underlying:org.nakedobjects.metamodel.commons.encoding.DataOutputExtended" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::getDataOutputStream():java.io.DataOutputStream" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeBooleans(boolean[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeChars(char[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::write(int):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeByte(int):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeBytes(byte[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeShorts(short[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeInts(int[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeLongs(long[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeFloats(float[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeDoubles(double[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeUTFs(java.lang.String[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeEncodable(java.lang.Object):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeEncodables(java.lang.Object[]):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeSerializable(java.lang.Object):void" />
			<role name="Operation()" element="org.nakedobjects.metamodel.commons.encoding.DataOutputExtendedDecorator::writeSerializables(java.lang.Object[]):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.actions.invoke.ActionInvocationFacet" />
			<role name="Decorator" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy" />
			<role name="component" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::underlyingFacet:org.nakedobjects.metamodel.facets.actions.invoke.ActionInvocationFacet" />
			<role name="Operation()" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::invoke(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject[]):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Operation()" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::getReturnType():org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Operation()" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::getOnType():org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.actions.invoke.ActionInvocationFacet" />
			<role name="Decorator" element="org.nakedobjects.runtime.transaction.facets.ActionInvocationFacetWrapTransaction" />
			<role name="component" element="org.nakedobjects.runtime.transaction.facets.ActionInvocationFacetWrapTransaction::underlyingFacet:org.nakedobjects.metamodel.facets.actions.invoke.ActionInvocationFacet" />
			<role name="Operation()" element="org.nakedobjects.runtime.transaction.facets.ActionInvocationFacetWrapTransaction::getReturnType():org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Operation()" element="org.nakedobjects.runtime.transaction.facets.ActionInvocationFacetWrapTransaction::getOnType():org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.collections.modify.CollectionAddToFacet" />
			<role name="Decorator" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy" />
			<role name="component" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy::underlyingFacet:org.nakedobjects.metamodel.facets.collections.modify.CollectionAddToFacet" />
			<role name="Operation()" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy::add(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.collections.modify.CollectionAddToFacet" />
			<role name="Decorator" element="org.nakedobjects.runtime.transaction.facets.CollectionAddToFacetWrapTransaction" />
			<role name="component" element="org.nakedobjects.runtime.transaction.facets.CollectionAddToFacetWrapTransaction::underlyingFacet:org.nakedobjects.metamodel.facets.collections.modify.CollectionAddToFacet" />
			<role name="Operation()" element="org.nakedobjects.runtime.transaction.facets.CollectionAddToFacetWrapTransaction::add(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.collections.modify.CollectionClearFacet" />
			<role name="Decorator" element="org.nakedobjects.runtime.transaction.facets.CollectionClearFacetWrapTransaction" />
			<role name="component" element="org.nakedobjects.runtime.transaction.facets.CollectionClearFacetWrapTransaction::underlyingFacet:org.nakedobjects.metamodel.facets.collections.modify.CollectionClearFacet" />
			<role name="Operation()" element="org.nakedobjects.runtime.transaction.facets.CollectionClearFacetWrapTransaction::clear(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.collections.modify.CollectionRemoveFromFacet" />
			<role name="Decorator" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy" />
			<role name="component" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy::underlyingFacet:org.nakedobjects.metamodel.facets.collections.modify.CollectionRemoveFromFacet" />
			<role name="Operation()" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy::remove(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.collections.modify.CollectionRemoveFromFacet" />
			<role name="Decorator" element="org.nakedobjects.runtime.transaction.facets.CollectionRemoveFromFacetWrapTransaction" />
			<role name="component" element="org.nakedobjects.runtime.transaction.facets.CollectionRemoveFromFacetWrapTransaction::underlyingFacet:org.nakedobjects.metamodel.facets.collections.modify.CollectionRemoveFromFacet" />
			<role name="Operation()" element="org.nakedobjects.runtime.transaction.facets.CollectionRemoveFromFacetWrapTransaction::remove(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacet" />
			<role name="Decorator" element="org.nakedobjects.metamodel.facets.propparam.validate.mask.TitleFacetBasedOnMask" />
			<role name="component" element="org.nakedobjects.metamodel.facets.propparam.validate.mask.TitleFacetBasedOnMask::underlyingTitleFacet:org.nakedobjects.metamodel.facets.object.ident.title.TitleFacet" />
			<role name="Operation()" element="org.nakedobjects.metamodel.facets.propparam.validate.mask.TitleFacetBasedOnMask::title(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.properties.modify.PropertyClearFacet" />
			<role name="Decorator" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy" />
			<role name="component" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy::underlyingFacet:org.nakedobjects.metamodel.facets.properties.modify.PropertyClearFacet" />
			<role name="Operation()" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy::clearProperty(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.properties.modify.PropertyClearFacet" />
			<role name="Decorator" element="org.nakedobjects.runtime.transaction.facets.PropertyClearFacetWrapTransaction" />
			<role name="component" element="org.nakedobjects.runtime.transaction.facets.PropertyClearFacetWrapTransaction::underlyingFacet:org.nakedobjects.metamodel.facets.properties.modify.PropertyClearFacet" />
			<role name="Operation()" element="org.nakedobjects.runtime.transaction.facets.PropertyClearFacetWrapTransaction::clearProperty(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.properties.modify.PropertySetterFacet" />
			<role name="Decorator" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy" />
			<role name="component" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy::underlyingFacet:org.nakedobjects.metamodel.facets.properties.modify.PropertySetterFacet" />
			<role name="Operation()" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy::setProperty(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.properties.modify.PropertySetterFacet" />
			<role name="Decorator" element="org.nakedobjects.runtime.transaction.facets.PropertySetterFacetWrapTransaction" />
			<role name="component" element="org.nakedobjects.runtime.transaction.facets.PropertySetterFacetWrapTransaction::underlyingFacet:org.nakedobjects.metamodel.facets.properties.modify.PropertySetterFacet" />
			<role name="Operation()" element="org.nakedobjects.runtime.transaction.facets.PropertySetterFacetWrapTransaction::setProperty(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacet" />
			<role name="Decorator" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetDerivedFromType" />
			<role name="component" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetDerivedFromType::typicalLengthFacet:org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacet" />
			<role name="Operation()" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetDerivedFromType::value():int" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeer" />
			<role name="Decorator" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeerDecorator" />
			<role name="component" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeerDecorator::decorated:org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeer" />
			<role name="Operation()" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeerDecorator::execute(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject[]):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Operation()" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeerDecorator::getParameters():org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionParamPeer[]" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectAssociationPeer" />
			<role name="Decorator" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectAssociationPeerDecorator" />
			<role name="component" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectAssociationPeerDecorator::decorated:org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectAssociationPeer" />
			<role name="Operation()" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectAssociationPeerDecorator::getSpecification():org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Decorator" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView" />
			<role name="component" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::parent:org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::getAbsoluteLocation():org.nakedobjects.plugins.dnd.viewer.drawing.Location" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::markDamaged(org.nakedobjects.plugins.dnd.viewer.drawing.Bounds):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Decorator" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView" />
			<role name="component" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::iconView:org.nakedobjects.plugins.dnd.View" />
			<role name="component" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::minimizedView:org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::dispose():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::dragStart(org.nakedobjects.plugins.dnd.DragStart):org.nakedobjects.plugins.dnd.Drag" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::viewAreaType(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.ViewAreaType" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::dragIn(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::dragOut(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::identify(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.MinimizedView::drop(org.nakedobjects.plugins.dnd.ContentDrag):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Decorator" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu" />
			<role name="component" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu::forView:org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu::getWorkspace():org.nakedobjects.plugins.dnd.Workspace" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Decorator" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator" />
			<role name="component" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::wrappedView:org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::addView(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::canChangeValue():org.nakedobjects.metamodel.consent.Consent" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::canFocus():boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::contains(org.nakedobjects.plugins.dnd.View):boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::containsFocus():boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::contentMenuOptions(org.nakedobjects.plugins.dnd.UserActionSet):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::debugStructure(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::dispose():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::drag(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::drag(org.nakedobjects.plugins.dnd.InternalDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::dragCancel(org.nakedobjects.plugins.dnd.InternalDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::dragFrom(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::dragIn(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::dragOut(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::dragStart(org.nakedobjects.plugins.dnd.DragStart):org.nakedobjects.plugins.dnd.Drag" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::dragTo(org.nakedobjects.plugins.dnd.InternalDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::drop(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::drop(org.nakedobjects.plugins.dnd.ViewDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::editComplete(boolean, boolean):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::entered():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::exited():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::firstClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::focusLost():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::focusReceived():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getAbsoluteLocation():org.nakedobjects.plugins.dnd.viewer.drawing.Location" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getBaseline():int" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getContent():org.nakedobjects.plugins.dnd.Content" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getFocusManager():org.nakedobjects.plugins.dnd.FocusManager" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getId():int" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getLocation():org.nakedobjects.plugins.dnd.viewer.drawing.Location" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getPadding():org.nakedobjects.plugins.dnd.viewer.drawing.Padding" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getParent():org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getRequiredSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size):org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getSpecification():org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getState():org.nakedobjects.plugins.dnd.ViewState" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getSubviews():org.nakedobjects.plugins.dnd.View[]" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getView():org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getViewAxis():org.nakedobjects.plugins.dnd.ViewAxis" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getViewManager():org.nakedobjects.plugins.dnd.Viewer" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getFeedbackManager():org.nakedobjects.plugins.dnd.Feedback" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::getWorkspace():org.nakedobjects.plugins.dnd.Workspace" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::hasFocus():boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::identify(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::invalidateContent():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::invalidateLayout():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::keyPressed(org.nakedobjects.plugins.dnd.KeyboardAction):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::keyReleased(int, int):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::keyTyped(char):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::layout(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::limitBoundsWithin(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::markDamaged():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::markDamaged(org.nakedobjects.plugins.dnd.viewer.drawing.Bounds):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::mouseDown(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::mouseMoved(org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::mouseUp(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::objectActionResult(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::pickupContent(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::pickupView(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::print(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::refresh():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::removeView(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::replaceView(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.View):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::secondClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::setBounds(org.nakedobjects.plugins.dnd.viewer.drawing.Bounds):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::setFocusManager(org.nakedobjects.plugins.dnd.FocusManager):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::setLocation(org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::setParent(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::setMaximumSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::setSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::setView(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::subviewFor(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::thirdClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::update(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::updateView():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::viewAreaType(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.ViewAreaType" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractViewDecorator::viewMenuOptions(org.nakedobjects.plugins.dnd.UserActionSet):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Decorator" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder" />
			<role name="component" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::topHeader:org.nakedobjects.plugins.dnd.View" />
			<role name="component" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::leftHeader:org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::drag(org.nakedobjects.plugins.dnd.InternalDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::dragStart(org.nakedobjects.plugins.dnd.DragStart):org.nakedobjects.plugins.dnd.Drag" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::dragCancel(org.nakedobjects.plugins.dnd.InternalDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::dragTo(org.nakedobjects.plugins.dnd.InternalDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::dragFrom(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::dragIn(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::dragOut(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::firstClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::identify(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::mouseMoved(org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::secondClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::thirdClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::setSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.ScrollBorder::viewAreaType(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.ViewAreaType" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Decorator" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator" />
			<role name="component" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::wrappedBuilder:org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::build(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::createCompositeView(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.CompositeViewSpecification, org.nakedobjects.plugins.dnd.ViewAxis):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::createViewAxis():org.nakedobjects.plugins.dnd.ViewAxis" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::decorateSubview(org.nakedobjects.plugins.dnd.View):org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::getReference():org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::getRequiredSize(org.nakedobjects.plugins.dnd.View):org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::isOpen():boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::isReplaceable():boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::isSubView():boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::layout(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractBuilderDecorator::setReference(org.nakedobjects.plugins.dnd.ViewBuilder):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.plugins.headless.applib.HeadlessViewer" />
			<role name="Decorator" element="org.nakedobjects.plugins.headless.viewer.DomainObjectContainerHeadlessViewer" />
			<role name="component" element="org.nakedobjects.plugins.headless.viewer.DomainObjectContainerHeadlessViewer::headlessViewerDelegate:org.nakedobjects.plugins.headless.applib.HeadlessViewer" />
			<role name="Operation()" element="org.nakedobjects.plugins.headless.viewer.DomainObjectContainerHeadlessViewer::getListeners():java.util.List" />
			<role name="Operation()" element="org.nakedobjects.plugins.headless.viewer.DomainObjectContainerHeadlessViewer::addInteractionListener(org.nakedobjects.plugins.headless.applib.listeners.InteractionListener):boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.headless.viewer.DomainObjectContainerHeadlessViewer::removeInteractionListener(org.nakedobjects.plugins.headless.applib.listeners.InteractionListener):boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.headless.viewer.DomainObjectContainerHeadlessViewer::notifyListeners(org.nakedobjects.applib.events.InteractionEvent):void" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.runtime.persistence.PersistenceSession" />
			<role name="Decorator" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger" />
			<role name="component" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::underlying:org.nakedobjects.runtime.persistence.PersistenceSession" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::isFixturesInstalled():boolean" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::open():void" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::close():void" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::setSpecificationLoader(org.nakedobjects.metamodel.specloader.SpecificationLoader):void" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::getOidGenerator():org.nakedobjects.runtime.persistence.oidgenerator.OidGenerator" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::getAdapterFactory():org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::getPersistenceSessionFactory():org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::getServicesInjector():org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::getTransactionManager():org.nakedobjects.runtime.transaction.NakedObjectTransactionManager" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::setTransactionManager(org.nakedobjects.runtime.transaction.NakedObjectTransactionManager):void" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::getObjectFactory():org.nakedobjects.runtime.persistence.objectfactory.ObjectFactory" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionLogger::getAdapterManager():org.nakedobjects.runtime.persistence.adaptermanager.AdapterManager" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Decorator" element="org.nakedobjects.remoting.facade.ServerFacadeLogger" />
			<role name="component" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::decorated:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::openSession(org.nakedobjects.remoting.exchange.OpenSessionRequest):org.nakedobjects.remoting.exchange.OpenSessionResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::authorizeUsability(org.nakedobjects.remoting.exchange.AuthorizationRequestUsability):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::authorizeVisibility(org.nakedobjects.remoting.exchange.AuthorizationRequestVisibility):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::closeSession(org.nakedobjects.remoting.exchange.CloseSessionRequest):org.nakedobjects.remoting.exchange.CloseSessionResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::setAssociation(org.nakedobjects.remoting.exchange.SetAssociationRequest):org.nakedobjects.remoting.exchange.SetAssociationResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::setValue(org.nakedobjects.remoting.exchange.SetValueRequest):org.nakedobjects.remoting.exchange.SetValueResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::clearAssociation(org.nakedobjects.remoting.exchange.ClearAssociationRequest):org.nakedobjects.remoting.exchange.ClearAssociationResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::clearValue(org.nakedobjects.remoting.exchange.ClearValueRequest):org.nakedobjects.remoting.exchange.ClearValueResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::executeServerAction(org.nakedobjects.remoting.exchange.ExecuteServerActionRequest):org.nakedobjects.remoting.exchange.ExecuteServerActionResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::executeClientAction(org.nakedobjects.remoting.exchange.ExecuteClientActionRequest):org.nakedobjects.remoting.exchange.ExecuteClientActionResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::getObject(org.nakedobjects.remoting.exchange.GetObjectRequest):org.nakedobjects.remoting.exchange.GetObjectResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::resolveField(org.nakedobjects.remoting.exchange.ResolveFieldRequest):org.nakedobjects.remoting.exchange.ResolveFieldResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::resolveImmediately(org.nakedobjects.remoting.exchange.ResolveObjectRequest):org.nakedobjects.remoting.exchange.ResolveObjectResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::findInstances(org.nakedobjects.remoting.exchange.FindInstancesRequest):org.nakedobjects.remoting.exchange.FindInstancesResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::hasInstances(org.nakedobjects.remoting.exchange.HasInstancesRequest):org.nakedobjects.remoting.exchange.HasInstancesResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::getProperties(org.nakedobjects.remoting.exchange.GetPropertiesRequest):org.nakedobjects.remoting.exchange.GetPropertiesResponse" />
			<role name="Operation()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::oidForService(org.nakedobjects.remoting.exchange.OidForServiceRequest):org.nakedobjects.remoting.exchange.OidForServiceResponse" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.runtime.help.HelpManager" />
			<role name="Decorator" element="org.nakedobjects.runtime.help.HelpManagerAssist" />
			<role name="component" element="org.nakedobjects.runtime.help.HelpManagerAssist::underlyingHelpManager:org.nakedobjects.runtime.help.HelpManager" />
			<role name="Operation()" element="org.nakedobjects.runtime.help.HelpManagerAssist::help(org.nakedobjects.applib.Identifier):java.lang.String" />
		</instance>
		<instance>
			<role name="Component" element="org.nakedobjects.metamodel.adapter.oid.Oid" />
			<role name="Decorator" element="org.nakedobjects.metamodel.adapter.oid.AggregatedOid" />
			<role name="component" element="org.nakedobjects.metamodel.adapter.oid.AggregatedOid::parentOid:org.nakedobjects.metamodel.adapter.oid.Oid" />
			<role name="Operation()" element="org.nakedobjects.metamodel.adapter.oid.AggregatedOid::isTransient():boolean" />
		</instance>
	</pattern>
	<pattern name="Observer">
		<instance>
			<role name="Observer" element="org.nakedobjects.runtime.system.internal.monitor.MonitorListener" />
			<role name="Subject" element="org.nakedobjects.runtime.system.internal.monitor.Monitor" />
			<role name="Notify()" element="org.nakedobjects.runtime.system.internal.monitor.Monitor::dispatchEvent(org.nakedobjects.runtime.system.internal.monitor.MonitorEvent):void" />
		</instance>
		<instance>
			<role name="Observer" element="org.nakedobjects.runtime.transaction.PersistenceCommand" />
			<role name="Subject" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransaction" />
			<role name="Notify()" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransaction::getCommand(java.lang.Class, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.runtime.transaction.PersistenceCommand" />
		</instance>
	</pattern>
	<pattern name="State">
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.NakedPropertyAccessorAbstract$NakedGetter" />
			<role name="State" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.PropertyConverter" />
			<role name="state" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.NakedPropertyAccessorAbstract$NakedGetter::converter:org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.PropertyConverter" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.NakedPropertyAccessorAbstract$NakedGetter::get(java.lang.Object):java.lang.Object" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.NakedPropertyAccessorAbstract$NakedGetter::getReturnType():java.lang.Class" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.NakedPropertyAccessorAbstract$NakedSetter" />
			<role name="State" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.PropertyConverter" />
			<role name="state" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.NakedPropertyAccessorAbstract$NakedSetter::converter:org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.PropertyConverter" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.NakedPropertyAccessorAbstract$NakedSetter::set(java.lang.Object, java.lang.Object, org.hibernate.engine.SessionFactoryImplementor):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.InteractionHandler" />
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.InteractionHandler::identifiedView:org.nakedobjects.plugins.dnd.View" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.InteractionHandler::draggedView:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.InteractionHandler::keyPressed(java.awt.event.KeyEvent):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.InteractionHandler::overlayClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.InteractionHandler::mouseMoved(java.awt.event.MouseEvent):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.BackgroundWork$BackgroundThread" />
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="state" element="org.nakedobjects.plugins.dnd.BackgroundWork$BackgroundThread::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.BackgroundWork$BackgroundThread::run():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.server.ServerConnectionHandler" />
			<role name="State" element="org.nakedobjects.metamodel.commons.debug.DebugInfo" />
			<role name="state" element="org.nakedobjects.remoting.server.ServerConnectionHandler::debugSessionInfo:org.nakedobjects.metamodel.commons.debug.DebugInfo[]" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionHandler::debugSessionInfo(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.testsystem.TestProxySystem" />
			<role name="State" element="org.nakedobjects.runtime.context.NakedObjectsContext" />
			<role name="state" element="org.nakedobjects.runtime.testsystem.TestProxySystem::context:org.nakedobjects.runtime.context.NakedObjectsContext" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxySystem::setPersistenceSession(org.nakedobjects.runtime.persistence.PersistenceSession):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Context" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.dflt.DefaultPersistAlgorithmTest" />
			<role name="state" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.dflt.DefaultPersistAlgorithmTest::object:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.dflt.DefaultPersistAlgorithmTest::testMakePersistentFailsIfObjectAlreadyPersistent():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.dflt.DefaultPersistAlgorithmTest::testMakePersistent():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Context" element="org.nakedobjects.plugins.berkeley.ObjectData" />
			<role name="state" element="org.nakedobjects.plugins.berkeley.ObjectData::object:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.berkeley.ObjectData::loadState(byte[], java.io.DataInputStream):void" />
			<role name="Request()" element="org.nakedobjects.plugins.berkeley.ObjectData::getData():byte[]" />
			<role name="Request()" element="org.nakedobjects.plugins.berkeley.ObjectData::getKey():java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Context" element="org.nakedobjects.plugins.htmlviewer.request.ContextSessionDataTest" />
			<role name="state" element="org.nakedobjects.plugins.htmlviewer.request.ContextSessionDataTest::originalAdapter:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="state" element="org.nakedobjects.plugins.htmlviewer.request.ContextSessionDataTest::restoredAdapter:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.htmlviewer.request.ContextSessionDataTest::setUp():void" />
			<role name="Request()" element="org.nakedobjects.plugins.htmlviewer.request.ContextSessionDataTest::testHasSameOid():void" />
			<role name="Request()" element="org.nakedobjects.plugins.htmlviewer.request.ContextSessionDataTest::testHasSameVersion():void" />
			<role name="Request()" element="org.nakedobjects.plugins.htmlviewer.request.ContextSessionDataTest::testHasResolveStateOfTransient():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Context" element="org.nakedobjects.runtime.persistence.PersistorUtil_ValueAdapterTest" />
			<role name="state" element="org.nakedobjects.runtime.persistence.PersistorUtil_ValueAdapterTest::aggregatedAdapter:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="state" element="org.nakedobjects.runtime.persistence.PersistorUtil_ValueAdapterTest::parent:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistorUtil_ValueAdapterTest::testOidKnowsParent():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistorUtil_ValueAdapterTest::testOidKnowsField():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.PersistorUtil_ValueAdapterTest::testResolveStateStartsAsGhost():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Context" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapterTest" />
			<role name="state" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapterTest::nakedObject:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapterTest::setUp():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapterTest::testOid():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapterTest::testInitialResolvedState():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapterTest::testChangeResolvedState():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapterTest::testVersion():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapterTest::testVersionConflict():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Context" element="org.nakedobjects.runtime.testsystem.tests.CreatePersistentObjectsTest" />
			<role name="state" element="org.nakedobjects.runtime.testsystem.tests.CreatePersistentObjectsTest::adapter:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.tests.CreatePersistentObjectsTest::setUp():void" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.tests.CreatePersistentObjectsTest::testResolveState():void" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.tests.CreatePersistentObjectsTest::testGivenVersion():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.adapter.NakedObjectList" />
			<role name="State" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="state" element="org.nakedobjects.metamodel.adapter.NakedObjectList::instanceSpecification:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Request()" element="org.nakedobjects.metamodel.adapter.NakedObjectList::titleString():java.lang.String" />
			<role name="Request()" element="org.nakedobjects.metamodel.adapter.NakedObjectList::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.PersistentNakedClass" />
			<role name="State" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="state" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.PersistentNakedClass::spec:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.PersistentNakedClass::isAbstract():boolean" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.basic.ResizeDrag" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.basic.ResizeDrag::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.ResizeDrag::cancel(org.nakedobjects.plugins.dnd.Viewer):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.ResizeDrag::end(org.nakedobjects.plugins.dnd.Viewer):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.ContentDrag" />
			<role name="state" element="org.nakedobjects.plugins.dnd.ContentDrag::target:org.nakedobjects.plugins.dnd.View" />
			<role name="state" element="org.nakedobjects.plugins.dnd.ContentDrag::previousTarget:org.nakedobjects.plugins.dnd.View" />
			<role name="state" element="org.nakedobjects.plugins.dnd.ContentDrag::dragView:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::cancel(org.nakedobjects.plugins.dnd.Viewer):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::drag(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::crossBoundary(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::moveDragView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::end(org.nakedobjects.plugins.dnd.Viewer):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ContentDrag::getTargetLocation():org.nakedobjects.plugins.dnd.viewer.drawing.Location" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.SimpleInternalDrag" />
			<role name="state" element="org.nakedobjects.plugins.dnd.SimpleInternalDrag::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.SimpleInternalDrag::cancel(org.nakedobjects.plugins.dnd.Viewer):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.SimpleInternalDrag::drag(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.SimpleInternalDrag::end(org.nakedobjects.plugins.dnd.Viewer):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.ViewDrag" />
			<role name="state" element="org.nakedobjects.plugins.dnd.ViewDrag::dragView:org.nakedobjects.plugins.dnd.View" />
			<role name="state" element="org.nakedobjects.plugins.dnd.ViewDrag::viewsDecoratedWorkspace:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ViewDrag::drag(org.nakedobjects.plugins.dnd.Viewer):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ViewDrag::drag(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location, int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ViewDrag::end(org.nakedobjects.plugins.dnd.Viewer):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ViewDrag::getViewDropLocation():org.nakedobjects.plugins.dnd.viewer.drawing.Location" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.ViewDrag::updateDraggingLocation():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.applib.adapters.Parser" />
			<role name="Context" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacetUsingParser" />
			<role name="state" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacetUsingParser::parser:org.nakedobjects.applib.adapters.Parser" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacetUsingParser::title(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacetUsingParser::title(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.applib.adapters.Parser" />
			<role name="Context" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser" />
			<role name="state" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser::parser:org.nakedobjects.applib.adapters.Parser" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser::parseTextEntry(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser::parseableTitle(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.applib.adapters.Parser" />
			<role name="Context" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetUsingParser" />
			<role name="state" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetUsingParser::parser:org.nakedobjects.applib.adapters.Parser" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetUsingParser::value():int" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.applib.adapters.EncoderDecoder" />
			<role name="Context" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder" />
			<role name="state" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder::encoderDecoder:org.nakedobjects.applib.adapters.EncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder::fromEncodedString(java.lang.String):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder::toEncodedString(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.applib.adapters.DefaultsProvider" />
			<role name="Context" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider" />
			<role name="state" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider::defaultsProvider:org.nakedobjects.applib.adapters.DefaultsProvider" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider::getDefault():java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder::builder:org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder::buildView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.CompositeViewUsingBuilder::doLayout(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.PersistentNakedClass" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="state" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.PersistentNakedClass::uniqueFields:org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation[]" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.PersistentNakedClass::ensureUniqueFieldsResolved():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.Nof2HbmXml" />
			<role name="State" element="org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
			<role name="state" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.Nof2HbmXml::columnNames:org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.tools.internal.Nof2HbmXml::columnName(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.testsystem.TestProxySystem" />
			<role name="State" element="org.nakedobjects.runtime.persistence.PersistenceSession" />
			<role name="state" element="org.nakedobjects.runtime.testsystem.TestProxySystem::persistenceSession:org.nakedobjects.runtime.persistence.PersistenceSession" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxySystem::init():void" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxySystem::getAdapterFactory():org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxySystem::getAdapterManager():org.nakedobjects.runtime.persistence.adaptermanager.AdapterManager" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxySystem::getAdapterManagerTestSupport():org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerTestSupport" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxySystem::getAdapterManagerPersist():org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerPersist" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxySystem::getTransactionManager():org.nakedobjects.runtime.transaction.NakedObjectTransactionManager" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxySystem::getOidGenerator():org.nakedobjects.runtime.persistence.oidgenerator.OidGenerator" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel::rightHandSideSpecification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel::mainViewTableSpec:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel::mainViewListSpec:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel::mainViewFormSpec:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel::buildView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.tree.MasterDetailPanel::setSelectedNode(org.nakedobjects.plugins.dnd.Content):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeNodeBorder" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeNodeBorder::replaceWithSpecification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeNodeBorder::firstClick(org.nakedobjects.plugins.dnd.Click):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.XViewer::overlayView:org.nakedobjects.plugins.dnd.View" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.XViewer::rootView:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::clearOverlayView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::dragFrom(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::dragStart(org.nakedobjects.plugins.dnd.DragStart):org.nakedobjects.plugins.dnd.Drag" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::firstClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::getFocusManager():org.nakedobjects.plugins.dnd.FocusManager" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::identifyView(org.nakedobjects.plugins.dnd.viewer.drawing.Location, boolean):org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::mouseDown(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::mouseMoved(org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::mouseUp(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::onOverlay(org.nakedobjects.plugins.dnd.viewer.drawing.Location):boolean" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::paint(java.awt.Graphics):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::layoutViews():java.awt.Rectangle" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::pickupContent(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::pickupView(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::secondClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::setOverlayView(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::getOverlaySize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::setRootView(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::locateInCentre(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::sizeChange():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::initSize():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::thirdClick(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::viewAreaType(org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.ViewAreaType" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::showDialog(org.nakedobjects.plugins.dnd.viewer.view.message.MessageContent):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore" />
			<role name="State" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStorePersistence" />
			<role name="state" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::objectStore:org.nakedobjects.runtime.persistence.objectstore.ObjectStorePersistence" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::isFixturesInstalled():boolean" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::testReset():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::getOidForServiceFromPersistenceLayer(java.lang.String):org.nakedobjects.metamodel.adapter.oid.Oid" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::registerService(java.lang.String, org.nakedobjects.metamodel.adapter.oid.Oid):void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::addPersistedObject(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu$Item" />
			<role name="State" element="org.nakedobjects.plugins.dnd.UserAction" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu$Item::action:org.nakedobjects.plugins.dnd.UserAction" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu$Item::createOption(org.nakedobjects.plugins.dnd.UserAction, java.lang.Object, org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location):org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu$Item" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu$Item::getHelp():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.field.PasswordField" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.field.PasswordField::style:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.field.PasswordField::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.field.PasswordField::setMaxTextWidth(int):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.field.PasswordField::drawText(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Color, int):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.simple.TextView" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.simple.TextView::style:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.TextView::getBaseline():int" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.TextView::getRequiredSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size):org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.NakedObjectsSystemBootstrapper" />
			<role name="State" element="org.nakedobjects.runtime.installers.InstallerLookup" />
			<role name="state" element="org.nakedobjects.runtime.system.NakedObjectsSystemBootstrapper::installerLookup:org.nakedobjects.runtime.installers.InstallerLookup" />
			<role name="Request()" element="org.nakedobjects.runtime.system.NakedObjectsSystemBootstrapper::bootSystem(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.system.NakedObjectsSystem" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper::action:org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper::createParameters():org.nakedobjects.plugins.dnd.ParameterContent[]" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper::disabled():org.nakedobjects.metamodel.consent.Consent" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper::getTarget():org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.ActionHelper::invoke():org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableFieldImpl" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableFieldImpl::object:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.content.TextParseableFieldImpl::getIconName():java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.lookup.OptionContent" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.lookup.OptionContent::nakedObject:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.OptionContent::getIconName():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextBlock" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextBlockTarget" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextBlock::forField:org.nakedobjects.plugins.dnd.viewer.view.text.TextBlockTarget" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextBlock::format():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.table.TableAxis" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.table.TableAxis::table:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.table.TableAxis::invalidateLayout():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugContent" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugContent::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugContent::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawing" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawing::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawing::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawingAbsolute" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawingAbsolute::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugDrawingAbsolute::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugView" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugView::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugView::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugView::debugTitle():java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugViewStructure" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugViewStructure::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugViewStructure::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.remoting.http.EncodingOverHttpRemotingServlet" />
			<role name="State" element="org.nakedobjects.runtime.system.NakedObjectsSystem" />
			<role name="state" element="org.nakedobjects.plugins.remoting.http.EncodingOverHttpRemotingServlet::system:org.nakedobjects.runtime.system.NakedObjectsSystem" />
			<role name="Request()" element="org.nakedobjects.plugins.remoting.http.EncodingOverHttpRemotingServlet::init():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.builder.CollectionElementBuilder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.builder.CollectionElementBuilder::subviewDesign:org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.builder.CollectionElementBuilder::build(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.builder.CollectionElementBuilder::decorateSubview(org.nakedobjects.plugins.dnd.View):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.builder.ObjectFieldBuilder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.builder.ObjectFieldBuilder::subviewDesign:org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.builder.ObjectFieldBuilder::decorateSubview(org.nakedobjects.plugins.dnd.View):org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.builder.ObjectFieldBuilder::createFieldView(org.nakedobjects.plugins.dnd.View, org.nakedobjects.metamodel.adapter.NakedObject, int, org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.lookup.DropDownListBuilder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.lookup.DropDownListBuilder::subviewSpecification:org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.DropDownListBuilder::build(org.nakedobjects.plugins.dnd.View):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.dialog.ActionFieldBuilder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.dialog.ActionFieldBuilder::subviewDesign:org.nakedobjects.plugins.dnd.SubviewSpec" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.dialog.ActionFieldBuilder::createFieldView(org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.ParameterContent, int):org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.dialog.ActionFieldBuilder::decorateSubview(org.nakedobjects.plugins.dnd.View):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Context" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser" />
			<role name="state" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser::runtimeContext:org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser::toStringValues():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.OneToManyAssociationImplTest" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.OneToManyAssociation" />
			<role name="state" element="org.nakedobjects.runtime.system.OneToManyAssociationImplTest::association:org.nakedobjects.metamodel.spec.feature.OneToManyAssociation" />
			<role name="Request()" element="org.nakedobjects.runtime.system.OneToManyAssociationImplTest::xxxtestSet():void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.OneToManyAssociationImplTest::xxxtestClear():void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.OneToManyAssociationImplTest::testClearWithNull():void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.OneToManyAssociationImplTest::testSetWithNull():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextContent" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextBlockTarget" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextContent::target:org.nakedobjects.plugins.dnd.viewer.view.text.TextBlockTarget" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextContent::cursorAtLine(org.nakedobjects.plugins.dnd.viewer.drawing.Location):int" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.text.TextContent::cursorAtCharacter(org.nakedobjects.plugins.dnd.viewer.drawing.Location, int):int" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.example.expenses.claims.ClaimRepository" />
			<role name="Context" element="org.nakedobjects.example.expenses.claims.Claims" />
			<role name="state" element="org.nakedobjects.example.expenses.claims.Claims::claimRepository:org.nakedobjects.example.expenses.claims.ClaimRepository" />
			<role name="Request()" element="org.nakedobjects.example.expenses.claims.Claims::findMyClaims(org.nakedobjects.example.expenses.claims.ClaimStatus, java.lang.String):java.util.List" />
			<role name="Request()" element="org.nakedobjects.example.expenses.claims.Claims::myRecentClaims():java.util.List" />
			<role name="Request()" element="org.nakedobjects.example.expenses.claims.Claims::claimsAwaitingMyApproval():java.util.List" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.example.expenses.claims.ClaimRepository" />
			<role name="Context" element="org.nakedobjects.example.expenses.claims.ClaimFactory" />
			<role name="state" element="org.nakedobjects.example.expenses.claims.ClaimFactory::claimRepository:org.nakedobjects.example.expenses.claims.ClaimRepository" />
			<role name="Request()" element="org.nakedobjects.example.expenses.claims.ClaimFactory::createUniqueDescription(org.nakedobjects.example.expenses.employee.Employee, java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.CommandClientTest" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.CommandClientTest::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.CommandClientTest::testOidForService():void" />
			<role name="Request()" element="org.nakedobjects.remoting.client.CommandClientTest::testHasInstances():void" />
			<role name="Request()" element="org.nakedobjects.remoting.client.CommandClientTest::testClearAssociation():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.specloader.internal.instances.InstanceCollectionSpecification" />
			<role name="State" element="org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="state" element="org.nakedobjects.metamodel.specloader.internal.instances.InstanceCollectionSpecification::specificationLoader:org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="Request()" element="org.nakedobjects.metamodel.specloader.internal.instances.InstanceCollectionSpecification::introspect(org.nakedobjects.metamodel.facetdecorator.FacetDecoratorSet):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.headless.viewer.internal.CgLibProxy" />
			<role name="State" element="org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandler" />
			<role name="state" element="org.nakedobjects.plugins.headless.viewer.internal.CgLibProxy::handler:org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandler" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.viewer.internal.CgLibProxy::proxy():java.lang.Object" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::table:org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::focusNextView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::focusPreviousView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::focusInitialChildView():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::getFocus():org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.TableFocusManager::setFocus(org.nakedobjects.plugins.dnd.View):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Context" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault" />
			<role name="state" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::runtimeContext:org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::resolve(java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::resolve(java.lang.Object, java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::objectChanged(java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::flush():boolean" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::commit():void" />
			<role name="Request()" element="org.nakedobjects.metamodel.services.container.DomainObjectContainerDefault::setRuntimeContext(org.nakedobjects.metamodel.runtimecontext.RuntimeContext):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="State" element="org.nakedobjects.runtime.installers.InstallerLookup" />
			<role name="state" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::installerLookup:org.nakedobjects.runtime.installers.InstallerLookup" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::getConfiguration():org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::lookupAndSetAuthenticatorAndAuthorization(org.nakedobjects.runtime.system.DeploymentType):void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::lookupAndSetAuthenticatorAndAuthorizationUsingClientConnectionInstaller(java.lang.String):void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::lookupAndSetAuthenticatorAndAuthorizationInstallers(org.nakedobjects.runtime.system.DeploymentType):void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::lookupAndSetFixturesInstaller():void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainTemplateImageLoader():org.nakedobjects.runtime.imageloader.TemplateImageLoader" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainReflector(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.metamodel.specloader.NakedObjectReflector" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainServices():java.util.List" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::lookupAndSetUserProfileFactoryInstaller():void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainPersistenceSessionFactory(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager" />
			<role name="State" element="org.nakedobjects.runtime.persistence.PersistenceSessionTransactionManagement" />
			<role name="state" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::transactionManagement:org.nakedobjects.runtime.persistence.PersistenceSessionTransactionManagement" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::startTransaction():void" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::endNonEmptyTransaction():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager" />
			<role name="State" element="org.nakedobjects.runtime.persistence.PersistenceSessionTransactionManagement" />
			<role name="state" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager::objectPersistor:org.nakedobjects.runtime.persistence.PersistenceSessionTransactionManagement" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager::flushTransaction():boolean" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager::endTransaction():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStoreSpy" />
			<role name="State" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="state" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStoreSpy::getObject:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStoreSpy::getObject(org.nakedobjects.metamodel.adapter.oid.Oid, org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="Context" element="org.nakedobjects.runtime.context.NakedObjectsContextPipe" />
			<role name="state" element="org.nakedobjects.runtime.context.NakedObjectsContextPipe::clientSession:org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="state" element="org.nakedobjects.runtime.context.NakedObjectsContextPipe::serverSession:org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="Request()" element="org.nakedobjects.runtime.context.NakedObjectsContextPipe::allSessionIds():java.lang.String[]" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="Context" element="org.nakedobjects.runtime.context.NakedObjectsContextStatic" />
			<role name="state" element="org.nakedobjects.runtime.context.NakedObjectsContextStatic::session:org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="Request()" element="org.nakedobjects.runtime.context.NakedObjectsContextStatic::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.headless.embedded.EmbeddedContext" />
			<role name="Context" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel" />
			<role name="state" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::context:org.nakedobjects.plugins.headless.embedded.EmbeddedContext" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::getAuthenticationSession():org.nakedobjects.metamodel.authentication.AuthenticationSession" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::adapterFor(java.lang.Object):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::instantiate(java.lang.Class):java.lang.Object" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::resolve(java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::resolve(java.lang.Object, java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::objectChanged(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::objectChanged(java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::makePersistent(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::remove(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::flush():boolean" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::commit():void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::informUser(java.lang.String):void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::warnUser(java.lang.String):void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::raiseError(java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::getOidForServiceFromPersistenceLayer(java.lang.String):org.nakedobjects.metamodel.adapter.oid.Oid" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Context" element="org.nakedobjects.remoting.client.authentication.AuthenticationManagerProxy" />
			<role name="state" element="org.nakedobjects.remoting.client.authentication.AuthenticationManagerProxy::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.authentication.AuthenticationManagerProxy::closeSession(org.nakedobjects.metamodel.authentication.AuthenticationSession):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::encoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::executeRemotely(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject[]):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::parameterValues(org.nakedobjects.metamodel.adapter.NakedObject[], org.nakedobjects.remoting.exchange.KnownObjectsRequest):org.nakedobjects.remoting.data.Data[]" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy::encoderDecoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy::add(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy::encoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy::remove(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy::encoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy::clearProperty(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy::encoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy::setProperty(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.facets.object.defaults.ActionDefaultsFacetDerivedFromDefaultedFacets" />
			<role name="State" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacet" />
			<role name="state" element="org.nakedobjects.metamodel.facets.object.defaults.ActionDefaultsFacetDerivedFromDefaultedFacets::defaultedFacets:org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacet[]" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.defaults.ActionDefaultsFacetDerivedFromDefaultedFacets::getDefaults(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.Object[]" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.facets.object.defaults.PropertyDefaultFacetDerivedFromDefaultedFacet" />
			<role name="State" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacet" />
			<role name="state" element="org.nakedobjects.metamodel.facets.object.defaults.PropertyDefaultFacetDerivedFromDefaultedFacet::typeFacet:org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacet" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.defaults.PropertyDefaultFacetDerivedFromDefaultedFacet::getDefault(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.InteractionSpy" />
			<role name="State" element="org.nakedobjects.plugins.dnd.InteractionSpyWindow" />
			<role name="state" element="org.nakedobjects.plugins.dnd.InteractionSpy::spyWindow:org.nakedobjects.plugins.dnd.InteractionSpyWindow" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.InteractionSpy::close():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.InteractionSpy::set(int, java.lang.String, java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.InteractionSpy::open():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.KeyboardManager" />
			<role name="State" element="org.nakedobjects.plugins.dnd.FocusManager" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.KeyboardManager::focusManager:org.nakedobjects.plugins.dnd.FocusManager" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.KeyboardManager::getFocus():org.nakedobjects.plugins.dnd.View" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.KeyboardManager::pressed(int, int):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.RenderingArea" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.XViewer::renderingArea:org.nakedobjects.plugins.dnd.viewer.RenderingArea" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::selectFilePath(java.lang.String, java.lang.String):java.lang.String" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::getOverlayBounds():org.nakedobjects.plugins.dnd.viewer.drawing.Bounds" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::init():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::createCanvas(java.awt.Graphics, java.awt.Rectangle):org.nakedobjects.plugins.dnd.Canvas" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::scheduleRepaint():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::setCursor(java.awt.Cursor):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::initSize():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::close():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.facade.ServerFacadeLogger" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::encoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.ServerFacadeLogger::dumpObjectData(java.lang.StringBuffer, org.nakedobjects.remoting.data.Data, int, java.util.Vector):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::encoderDecoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::authorizeVisibility(org.nakedobjects.remoting.exchange.AuthorizationRequestVisibility):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::authorizeUsability(org.nakedobjects.remoting.exchange.AuthorizationRequestUsability):org.nakedobjects.remoting.exchange.AuthorizationResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::executeClientAction(org.nakedobjects.remoting.exchange.ExecuteClientActionRequest):org.nakedobjects.remoting.exchange.ExecuteClientActionResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::executeServerAction(org.nakedobjects.remoting.exchange.ExecuteServerActionRequest):org.nakedobjects.remoting.exchange.ExecuteServerActionResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::getParameters(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.remoting.data.Data[], org.nakedobjects.remoting.exchange.KnownObjectsRequest):org.nakedobjects.metamodel.adapter.NakedObject[]" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::getDisposed():org.nakedobjects.remoting.data.common.ReferenceData[]" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::getObject(org.nakedobjects.remoting.exchange.GetObjectRequest):org.nakedobjects.remoting.exchange.GetObjectResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::resolveField(org.nakedobjects.remoting.exchange.ResolveFieldRequest):org.nakedobjects.remoting.exchange.ResolveFieldResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::resolveImmediately(org.nakedobjects.remoting.exchange.ResolveObjectRequest):org.nakedobjects.remoting.exchange.ResolveObjectResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::findInstances(org.nakedobjects.remoting.exchange.FindInstancesRequest):org.nakedobjects.remoting.exchange.FindInstancesResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::convertToNakedCollection(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.remoting.data.common.ObjectData[]" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::oidForService(org.nakedobjects.remoting.exchange.OidForServiceRequest):org.nakedobjects.remoting.exchange.OidForServiceResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::getUpdates():org.nakedobjects.remoting.data.common.ObjectData[]" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault" />
			<role name="State" element="org.nakedobjects.runtime.persistence.PersistenceSession" />
			<role name="state" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault::persistenceSession:org.nakedobjects.runtime.persistence.PersistenceSession" />
			<role name="Request()" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault::open():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.internal.console.AWTConsole" />
			<role name="State" element="org.nakedobjects.runtime.system.internal.console.Server" />
			<role name="state" element="org.nakedobjects.runtime.system.internal.console.AWTConsole::server:org.nakedobjects.runtime.system.internal.console.Server" />
			<role name="Request()" element="org.nakedobjects.runtime.system.internal.console.AWTConsole::quit():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.internal.console.TerminalConsole" />
			<role name="State" element="org.nakedobjects.runtime.system.internal.console.Server" />
			<role name="state" element="org.nakedobjects.runtime.system.internal.console.TerminalConsole::server:org.nakedobjects.runtime.system.internal.console.Server" />
			<role name="Request()" element="org.nakedobjects.runtime.system.internal.console.TerminalConsole::quit():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.runtime.userprofile.UserProfileStore" />
			<role name="Context" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault" />
			<role name="state" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::store:org.nakedobjects.runtime.userprofile.UserProfileStore" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::isFixturesInstalled():boolean" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::saveAsDefault(org.nakedobjects.runtime.userprofile.UserProfile):void" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::saveForUser(java.lang.String, org.nakedobjects.runtime.userprofile.UserProfile):void" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::getProfile(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.userprofile.UserProfile" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::loadOrCreateProfile():void" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfileLoaderDefault::createUserProfile(java.lang.String):org.nakedobjects.runtime.userprofile.UserProfile" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.html.task.EditTask" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation" />
			<role name="state" element="org.nakedobjects.plugins.html.task.EditTask::fields:org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation[]" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.EditTask::getOptions(org.nakedobjects.plugins.html.context.Context, int, int):org.nakedobjects.metamodel.adapter.NakedObject[][]" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.EditTask::simpleField(org.nakedobjects.metamodel.spec.NakedObjectSpecification, int):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore" />
			<role name="State" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithm" />
			<role name="state" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::persistAlgorithm:org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithm" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.PersistenceSessionObjectStore::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.example.expenses.services.UserFinder" />
			<role name="Context" element="org.nakedobjects.example.expenses.claims.Claims" />
			<role name="state" element="org.nakedobjects.example.expenses.claims.Claims::userFinder:org.nakedobjects.example.expenses.services.UserFinder" />
			<role name="Request()" element="org.nakedobjects.example.expenses.claims.Claims::meAsEmployee():org.nakedobjects.example.expenses.employee.Employee" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.config.ConfigurationBuilderAbstract" />
			<role name="State" element="org.nakedobjects.metamodel.commons.resource.ResourceStreamSource" />
			<role name="state" element="org.nakedobjects.metamodel.config.ConfigurationBuilderAbstract::resourceStreamSource:org.nakedobjects.metamodel.commons.resource.ResourceStreamSource" />
			<role name="Request()" element="org.nakedobjects.metamodel.config.ConfigurationBuilderAbstract::loadConfigurationResource(org.nakedobjects.metamodel.config.internal.PropertiesConfiguration, java.lang.String, org.nakedobjects.metamodel.config.NotFoundPolicy):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.html.task.MethodTask" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="state" element="org.nakedobjects.plugins.html.task.MethodTask::action:org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.MethodTask::checkForValidity(org.nakedobjects.plugins.html.context.Context):void" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.MethodTask::completeTask(org.nakedobjects.plugins.html.context.Context, org.nakedobjects.plugins.html.component.Page):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.MethodTask::getOptions(org.nakedobjects.plugins.html.context.Context, int, int):org.nakedobjects.metamodel.adapter.NakedObject[][]" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.MethodTask::collectParameters():boolean" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.example.expenses.employee.EmployeeRepository" />
			<role name="Context" element="org.nakedobjects.example.expenses.fixtures.RandomClaimFixture" />
			<role name="state" element="org.nakedobjects.example.expenses.fixtures.RandomClaimFixture::employeeRepository:org.nakedobjects.example.expenses.employee.EmployeeRepository" />
			<role name="Request()" element="org.nakedobjects.example.expenses.fixtures.RandomClaimFixture::install():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.example.expenses.employee.EmployeeRepository" />
			<role name="Context" element="org.nakedobjects.example.expenses.employee.Employees" />
			<role name="state" element="org.nakedobjects.example.expenses.employee.Employees::employeeRepository:org.nakedobjects.example.expenses.employee.EmployeeRepository" />
			<role name="Request()" element="org.nakedobjects.example.expenses.employee.Employees::findEmployeeByName(java.lang.String):java.util.List" />
			<role name="Request()" element="org.nakedobjects.example.expenses.employee.Employees::me():org.nakedobjects.example.expenses.employee.Employee" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.example.expenses.recordedAction.impl.RecordedActionContributedActions" />
			<role name="State" element="org.nakedobjects.example.expenses.recordedAction.impl.RecordedActionRepository" />
			<role name="state" element="org.nakedobjects.example.expenses.recordedAction.impl.RecordedActionContributedActions::recordedActionRepository:org.nakedobjects.example.expenses.recordedAction.impl.RecordedActionRepository" />
			<role name="Request()" element="org.nakedobjects.example.expenses.recordedAction.impl.RecordedActionContributedActions::allRecordedActions(org.nakedobjects.example.expenses.recordedAction.RecordedActionContext):java.util.List" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.runtime.persistence.adaptermanager.internal.OidAdapterMap" />
			<role name="Context" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault" />
			<role name="state" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault::oidAdapterMap:org.nakedobjects.runtime.persistence.adaptermanager.internal.OidAdapterMap" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault::remapUpdated(org.nakedobjects.metamodel.adapter.oid.Oid):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.action.OpenViewOption" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.action.OpenViewOption::specification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.OpenViewOption::execute(org.nakedobjects.plugins.dnd.Workspace, org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.OpenViewOption::getDescription(org.nakedobjects.plugins.dnd.View):java.lang.String" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.OpenViewOption::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.action.ReplaceViewOption" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.action.ReplaceViewOption::specification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.ReplaceViewOption::getDescription(org.nakedobjects.plugins.dnd.View):java.lang.String" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.ReplaceViewOption::execute(org.nakedobjects.plugins.dnd.Workspace, org.nakedobjects.plugins.dnd.View, org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.ReplaceViewOption::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.border.LineStyleWindowBorder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.border.LineStyleWindowBorder::TITLE_STYLE:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.LineStyleWindowBorder::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size, boolean, org.nakedobjects.plugins.dnd.ViewState, org.nakedobjects.plugins.dnd.viewer.action.WindowControl[], java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.border.SimpleStyleWindowBorder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.border.SimpleStyleWindowBorder::TITLE_STYLE:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.SimpleStyleWindowBorder::getRequiredSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size, java.lang.String, org.nakedobjects.plugins.dnd.viewer.action.WindowControl[]):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.border.SwingStyleWindowBorder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.border.SwingStyleWindowBorder::TITLE_STYLE:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.SwingStyleWindowBorder::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size, boolean, org.nakedobjects.plugins.dnd.ViewState, org.nakedobjects.plugins.dnd.viewer.action.WindowControl[], java.lang.String):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.SwingStyleWindowBorder::getRequiredSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size, java.lang.String, org.nakedobjects.plugins.dnd.viewer.action.WindowControl[]):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper" />
			<role name="State" element="org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
			<role name="state" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::elementMapping:org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::createTables(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::loadInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.AutoCollectionMapper::saveInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper" />
			<role name="State" element="org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
			<role name="state" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::idMapping:org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::createTables(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::loadInternalCollection(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::reinsertElements(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.auto.ReversedAutoAssociationMapper::deleteAllElments(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.i18n.resourcebundle.I18nFacetDecorator" />
			<role name="State" element="org.nakedobjects.runtime.i18n.resourcebundle.I18nManager" />
			<role name="state" element="org.nakedobjects.runtime.i18n.resourcebundle.I18nFacetDecorator::i18nManager:org.nakedobjects.runtime.i18n.resourcebundle.I18nManager" />
			<role name="Request()" element="org.nakedobjects.runtime.i18n.resourcebundle.I18nFacetDecorator::decorate(org.nakedobjects.metamodel.facets.Facet, org.nakedobjects.metamodel.facets.FacetHolder):org.nakedobjects.metamodel.facets.Facet" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.facets.actcoll.typeof.TypeOfAnnotationFacetFactory" />
			<role name="State" element="org.nakedobjects.metamodel.specloader.collectiontyperegistry.CollectionTypeRegistry" />
			<role name="state" element="org.nakedobjects.metamodel.facets.actcoll.typeof.TypeOfAnnotationFacetFactory::collectionTypeRegistry:org.nakedobjects.metamodel.specloader.collectiontyperegistry.CollectionTypeRegistry" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.actcoll.typeof.TypeOfAnnotationFacetFactory::process(java.lang.Class, java.lang.reflect.Method, org.nakedobjects.metamodel.facets.MethodRemover, org.nakedobjects.metamodel.facets.FacetHolder):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.facets.collections.CollectionFacetFactory" />
			<role name="State" element="org.nakedobjects.metamodel.specloader.collectiontyperegistry.CollectionTypeRegistry" />
			<role name="state" element="org.nakedobjects.metamodel.facets.collections.CollectionFacetFactory::collectionTypeRegistry:org.nakedobjects.metamodel.specloader.collectiontyperegistry.CollectionTypeRegistry" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.collections.CollectionFacetFactory::process(java.lang.Class, org.nakedobjects.metamodel.facets.MethodRemover, org.nakedobjects.metamodel.facets.FacetHolder):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarTemplate" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarDisplay" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarTemplate::calendarDisplay:org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarDisplay" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarTemplate::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarTemplate::drop(org.nakedobjects.plugins.dnd.ContentDrag):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarTemplate::firstClick(org.nakedobjects.plugins.dnd.Click):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.hibernate.objectstore.HibernateObjectStore" />
			<role name="State" element="org.nakedobjects.runtime.persistence.PersistenceSessionHydrator" />
			<role name="state" element="org.nakedobjects.plugins.hibernate.objectstore.HibernateObjectStore::hydrator:org.nakedobjects.runtime.persistence.PersistenceSessionHydrator" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.HibernateObjectStore::getObject(org.nakedobjects.metamodel.adapter.oid.Oid, org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.bytecode.cglib.future.EvaluatingMethodInterceptor" />
			<role name="State" element="org.nakedobjects.metamodel.commons.future.FutureResultFactory" />
			<role name="state" element="org.nakedobjects.bytecode.cglib.future.EvaluatingMethodInterceptor::resultFactory:org.nakedobjects.metamodel.commons.future.FutureResultFactory" />
			<role name="Request()" element="org.nakedobjects.bytecode.cglib.future.EvaluatingMethodInterceptor::intercept(java.lang.Object, java.lang.reflect.Method, java.lang.Object[], net.sf.cglib.proxy.MethodProxy):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::executeRemotely(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject[]):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.CollectionAddToFacetWrapProxy::add(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.CollectionRemoveFromFacetWrapProxy::remove(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.PropertyClearFacetWrapProxy::clearProperty(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.PropertySetterFacetWrapProxy::setProperty(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="state" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::nakedObjectAction:org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="Request()" element="org.nakedobjects.remoting.client.facets.ActionInvocationFacetWrapProxy::executeRemotely(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.adapter.NakedObject[]):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel" />
			<role name="State" element="org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="state" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::servicesInjector:org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::init():void" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel::injectDependenciesInto(java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault" />
			<role name="State" element="org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="state" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault::servicesInjector:org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerDefault::mapAndInjectServices(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.BackgroundWork$BackgroundThread" />
			<role name="State" element="org.nakedobjects.plugins.dnd.BackgroundTask" />
			<role name="state" element="org.nakedobjects.plugins.dnd.BackgroundWork$BackgroundThread::task:org.nakedobjects.plugins.dnd.BackgroundTask" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.BackgroundWork$BackgroundThread::run():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.lookup.ValueDropDownAxis" />
			<role name="State" element="org.nakedobjects.plugins.dnd.TextParseableContent" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.lookup.ValueDropDownAxis::content:org.nakedobjects.plugins.dnd.TextParseableContent" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.ValueDropDownAxis::setSelection(org.nakedobjects.plugins.dnd.viewer.lookup.OptionContent):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.action.Button3DStyleRender" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.action.Button3DStyleRender::style:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.Button3DStyleRender::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size, boolean, boolean, boolean, boolean, boolean, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.action.ButtonLineStyleRender" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.action.ButtonLineStyleRender::style:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.ButtonLineStyleRender::draw(org.nakedobjects.plugins.dnd.Canvas, org.nakedobjects.plugins.dnd.viewer.drawing.Size, boolean, boolean, boolean, boolean, boolean, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.OneToManyAssociation" />
			<role name="state" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask::field:org.nakedobjects.metamodel.spec.feature.OneToManyAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask::checkForValidity(org.nakedobjects.plugins.html.context.Context):void" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask::checkInstances(org.nakedobjects.plugins.html.context.Context, org.nakedobjects.metamodel.adapter.NakedObject[]):void" />
			<role name="Request()" element="org.nakedobjects.plugins.html.task.AddItemToCollectionTask::completeTask(org.nakedobjects.plugins.html.context.Context, org.nakedobjects.plugins.html.component.Page):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore" />
			<role name="State" element="org.nakedobjects.plugins.xml.objectstore.internal.data.DataManager" />
			<role name="state" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::dataManager:org.nakedobjects.plugins.xml.objectstore.internal.data.DataManager" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::hasInstances(org.nakedobjects.metamodel.spec.NakedObjectSpecification):boolean" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::open():void" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::initObjectSetupReference(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.plugins.xml.objectstore.internal.data.ObjectData, org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation):void" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::getObject(org.nakedobjects.metamodel.adapter.oid.Oid, org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::resolveImmediately(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::getInstances(org.nakedobjects.plugins.xml.objectstore.internal.data.ObjectData, org.nakedobjects.runtime.persistence.query.PersistenceQueryBuiltIn):org.nakedobjects.metamodel.adapter.NakedObject[]" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.facade.proxy.ServerFacadeProxy" />
			<role name="State" element="org.nakedobjects.remoting.client.ClientConnection" />
			<role name="state" element="org.nakedobjects.remoting.facade.proxy.ServerFacadeProxy::connection:org.nakedobjects.remoting.client.ClientConnection" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.proxy.ServerFacadeProxy::execute(org.nakedobjects.remoting.exchange.Request):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.ClientConnectionDefault" />
			<role name="State" element="org.nakedobjects.remoting.protocol.ClientMarshaller" />
			<role name="state" element="org.nakedobjects.remoting.client.ClientConnectionDefault::marshaller:org.nakedobjects.remoting.protocol.ClientMarshaller" />
			<role name="Request()" element="org.nakedobjects.remoting.client.ClientConnectionDefault::connect():void" />
			<role name="Request()" element="org.nakedobjects.remoting.client.ClientConnectionDefault::disconnect():void" />
			<role name="Request()" element="org.nakedobjects.remoting.client.ClientConnectionDefault::executeRemotelyElseException(org.nakedobjects.remoting.exchange.Request):org.nakedobjects.remoting.exchange.ResponseEnvelope" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.installers.InstallerLookupDefault" />
			<role name="State" element="org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="state" element="org.nakedobjects.runtime.installers.InstallerLookupDefault::configurationBuilder:org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="Request()" element="org.nakedobjects.runtime.installers.InstallerLookupDefault::getConfiguration():org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
			<role name="Request()" element="org.nakedobjects.runtime.installers.InstallerLookupDefault::mergeConfigurationFor(org.nakedobjects.metamodel.commons.component.Installer):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.facets.propparam.validate.regex.TitleFacetFormattedByRegex" />
			<role name="State" element="org.nakedobjects.metamodel.facets.propparam.validate.regex.RegExFacet" />
			<role name="state" element="org.nakedobjects.metamodel.facets.propparam.validate.regex.TitleFacetFormattedByRegex::regexFacet:org.nakedobjects.metamodel.facets.propparam.validate.regex.RegExFacet" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.propparam.validate.regex.TitleFacetFormattedByRegex::title(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandlerDefault" />
			<role name="State" element="org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="state" element="org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandlerDefault::runtimeContext:org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandlerDefault::getSpecificationLoader():org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandlerDefault::getAuthenticationSession():org.nakedobjects.metamodel.authentication.AuthenticationSession" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.help.AboutView" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Image" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.help.AboutView::image:org.nakedobjects.plugins.dnd.viewer.drawing.Image" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.help.AboutView::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.help.AboutView::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.message.MessageView" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Image" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.message.MessageView::errorIcon:org.nakedobjects.plugins.dnd.viewer.drawing.Image" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.message.MessageView::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.message.MessageView::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectSerializer" />
			<role name="State" element="org.nakedobjects.remoting.data.DataFactory" />
			<role name="state" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectSerializer::dataFactory:org.nakedobjects.remoting.data.DataFactory" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectSerializer::serializeEncodeable(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.remoting.data.common.EncodableObjectData" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectSerializer::serializeObject2(org.nakedobjects.metamodel.adapter.NakedObject, int, org.nakedobjects.remoting.exchange.KnownObjectsRequest):org.nakedobjects.remoting.data.Data" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectSerializer::serializeCollection(org.nakedobjects.metamodel.adapter.NakedObject, int, org.nakedobjects.remoting.exchange.KnownObjectsRequest):org.nakedobjects.remoting.data.common.CollectionData" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.authorization.standard.AuthorizationManagerStandard" />
			<role name="State" element="org.nakedobjects.runtime.authorization.standard.Authorizor" />
			<role name="state" element="org.nakedobjects.runtime.authorization.standard.AuthorizationManagerStandard::authorizor:org.nakedobjects.runtime.authorization.standard.Authorizor" />
			<role name="Request()" element="org.nakedobjects.runtime.authorization.standard.AuthorizationManagerStandard::isUsable(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.applib.Identifier):boolean" />
			<role name="Request()" element="org.nakedobjects.runtime.authorization.standard.AuthorizationManagerStandard::isVisible(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.applib.Identifier):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.image.ImageFactory" />
			<role name="State" element="org.nakedobjects.runtime.imageloader.TemplateImageLoader" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.image.ImageFactory::loader:org.nakedobjects.runtime.imageloader.TemplateImageLoader" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.image.ImageFactory::templateImage(java.lang.String):org.nakedobjects.runtime.imageloader.TemplateImage" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.options.standard.OptionHandlerConnector" />
			<role name="State" element="org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="state" element="org.nakedobjects.runtime.options.standard.OptionHandlerConnector::installerRepository:org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="Request()" element="org.nakedobjects.runtime.options.standard.OptionHandlerConnector::addOption(org.apache.commons.cli.Options):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.options.standard.OptionHandlerPersistor" />
			<role name="State" element="org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="state" element="org.nakedobjects.runtime.options.standard.OptionHandlerPersistor::installerRepository:org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="Request()" element="org.nakedobjects.runtime.options.standard.OptionHandlerPersistor::addOption(org.apache.commons.cli.Options):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.options.standard.OptionHandlerReflector" />
			<role name="State" element="org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="state" element="org.nakedobjects.runtime.options.standard.OptionHandlerReflector::installerRepository:org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="Request()" element="org.nakedobjects.runtime.options.standard.OptionHandlerReflector::addOption(org.apache.commons.cli.Options):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.options.standard.OptionHandlerUserProfileStore" />
			<role name="State" element="org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="state" element="org.nakedobjects.runtime.options.standard.OptionHandlerUserProfileStore::installerRepository:org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="Request()" element="org.nakedobjects.runtime.options.standard.OptionHandlerUserProfileStore::addOption(org.apache.commons.cli.Options):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.options.standard.OptionHandlerViewer" />
			<role name="State" element="org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="state" element="org.nakedobjects.runtime.options.standard.OptionHandlerViewer::installerRepository:org.nakedobjects.runtime.installers.InstallerRepository" />
			<role name="Request()" element="org.nakedobjects.runtime.options.standard.OptionHandlerViewer::addOption(org.apache.commons.cli.Options):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryPersistenceSessionFactory" />
			<role name="State" element="org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStorePersistedObjects" />
			<role name="state" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryPersistenceSessionFactory::persistedObjects:org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStorePersistedObjects" />
			<role name="Request()" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryPersistenceSessionFactory::createPersistenceSession():org.nakedobjects.runtime.persistence.PersistenceSession" />
			<role name="Request()" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryPersistenceSessionFactory::attach(org.nakedobjects.runtime.persistence.PersistenceSession, org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStorePersistedObjects):void" />
			<role name="Request()" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryPersistenceSessionFactory::doShutdown():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryObjectStore" />
			<role name="State" element="org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStorePersistedObjects" />
			<role name="state" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryObjectStore::persistedObjects:org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStorePersistedObjects" />
			<role name="Request()" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryObjectStore::recreateAdapters():void" />
			<role name="Request()" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryObjectStore::getOidForService(java.lang.String):org.nakedobjects.metamodel.adapter.oid.Oid" />
			<role name="Request()" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryObjectStore::registerService(java.lang.String, org.nakedobjects.metamodel.adapter.oid.Oid):void" />
			<role name="Request()" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryObjectStore::instancesFor(org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStoreInstances" />
			<role name="Request()" element="org.nakedobjects.runtime.objectstore.inmemory.InMemoryObjectStore::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault" />
			<role name="State" element="org.nakedobjects.runtime.session.NakedObjectSessionFactory" />
			<role name="state" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault::executionContextFactory:org.nakedobjects.runtime.session.NakedObjectSessionFactory" />
			<role name="Request()" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault::getDeploymentType():org.nakedobjects.runtime.system.DeploymentType" />
			<role name="Request()" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault::getConfiguration():org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
			<role name="Request()" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault::getSpecificationLoader():org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="Request()" element="org.nakedobjects.runtime.session.NakedObjectSessionDefault::getTemplateImageLoader():org.nakedobjects.runtime.imageloader.TemplateImageLoader" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.undo.AssociateCommand" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.undo.AssociateCommand::field:org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.undo.AssociateCommand::undo():void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.undo.AssociateCommand::execute():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.undo.SetValueCommand" />
			<role name="State" element="org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.undo.SetValueCommand::value:org.nakedobjects.metamodel.spec.feature.OneToOneAssociation" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.undo.SetValueCommand::undo():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault" />
			<role name="State" element="org.nakedobjects.remoting.data.DataFactory" />
			<role name="state" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::dataFactory:org.nakedobjects.remoting.data.DataFactory" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeIdentityData(org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.remoting.data.common.IdentityData" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeForResolveField(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.remoting.data.Data" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeMadePersistentGraph(org.nakedobjects.remoting.data.common.ObjectData, org.nakedobjects.metamodel.adapter.NakedObject):org.nakedobjects.remoting.data.common.ObjectData" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::encodeServerActionResult(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.remoting.data.common.ObjectData[], org.nakedobjects.remoting.data.common.ReferenceData[], org.nakedobjects.remoting.data.common.ObjectData, org.nakedobjects.remoting.data.common.ObjectData[], java.lang.String[], java.lang.String[]):org.nakedobjects.remoting.exchange.ExecuteServerActionResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoderDefault::createParameter(java.lang.String, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.remoting.exchange.KnownObjectsRequest):org.nakedobjects.remoting.data.Data" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.server.ServerConnectionHandler" />
			<role name="State" element="org.nakedobjects.remoting.server.ServerConnection" />
			<role name="state" element="org.nakedobjects.remoting.server.ServerConnectionHandler::connection:org.nakedobjects.remoting.server.ServerConnection" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionHandler::handleRequest():void" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionHandler::executeRequest(org.nakedobjects.remoting.exchange.Request):void" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionHandler::sendResponse(org.nakedobjects.remoting.exchange.Request):void" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionHandler::sendExceptionResponse(java.lang.Exception):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore" />
			<role name="State" element="org.nakedobjects.plugins.xml.objectstore.internal.services.ServiceManager" />
			<role name="state" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::serviceManager:org.nakedobjects.plugins.xml.objectstore.internal.services.ServiceManager" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::getOidForService(java.lang.String):org.nakedobjects.metamodel.adapter.oid.Oid" />
			<role name="Request()" element="org.nakedobjects.plugins.xml.objectstore.XmlObjectStore::registerService(java.lang.String, org.nakedobjects.metamodel.adapter.oid.Oid):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::connection:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::endNonEmptyTransaction():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::encoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::asData(org.nakedobjects.remoting.client.transaction.ClientTransactionEvent[], org.nakedobjects.remoting.exchange.KnownObjectsRequest):org.nakedobjects.remoting.data.common.ReferenceData[]" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::handleResults(org.nakedobjects.remoting.client.transaction.ClientTransactionEvent[], org.nakedobjects.remoting.exchange.ExecuteClientActionResponse):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter" />
			<role name="State" element="org.nakedobjects.metamodel.adapter.version.Version" />
			<role name="state" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter::version:org.nakedobjects.metamodel.adapter.version.Version" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter::checkLock(org.nakedobjects.metamodel.adapter.version.Version):void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter::shouldSetVersion(org.nakedobjects.metamodel.adapter.version.Version):boolean" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.adapterfactory.pojo.PojoAdapter::toString(org.nakedobjects.metamodel.commons.lang.ToString):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject" />
			<role name="State" element="org.nakedobjects.metamodel.adapter.version.Version" />
			<role name="state" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject::version:org.nakedobjects.metamodel.adapter.version.Version" />
			<role name="Request()" element="org.nakedobjects.runtime.testsystem.TestProxyNakedObject::checkLock(org.nakedobjects.metamodel.adapter.version.Version):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl" />
			<role name="State" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeer" />
			<role name="state" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl::nakedObjectActionPeer:org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionPeer" />
			<role name="Request()" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl::getParameterCount():int" />
			<role name="Request()" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionImpl::getParameters():org.nakedobjects.metamodel.spec.feature.NakedObjectActionParameter[]" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.action.Button" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.action.ButtonRender" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.action.Button::buttonRender:org.nakedobjects.plugins.dnd.viewer.action.ButtonRender" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.Button::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.Button::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarBorder" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarBorderTab" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarBorder::tabs:org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarBorderTab[]" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarBorder::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.calendar.CalendarBorder::firstClick(org.nakedobjects.plugins.dnd.Click):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.SkylarkViewFactory" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.SkylarkViewFactory::fallback:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.SkylarkViewFactory::getSpecificationForRequirement(org.nakedobjects.plugins.dnd.ViewRequirement):org.nakedobjects.plugins.dnd.ViewSpecification" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="State" element="org.nakedobjects.plugins.dnd.HelpViewer" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.XViewer::helpViewer:org.nakedobjects.plugins.dnd.HelpViewer" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::openHelp(org.nakedobjects.plugins.dnd.View):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.help.InternalHelpViewer" />
			<role name="State" element="org.nakedobjects.plugins.dnd.Viewer" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.help.InternalHelpViewer::viewer:org.nakedobjects.plugins.dnd.Viewer" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.help.InternalHelpViewer::open(org.nakedobjects.plugins.dnd.viewer.drawing.Location, java.lang.String, java.lang.String, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$OptimisticLockGetter" />
			<role name="State" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$LongVersionAccessor" />
			<role name="state" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$OptimisticLockGetter::versionAccessor:org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$LongVersionAccessor" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$OptimisticLockGetter::get(java.lang.Object):java.lang.Object" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$OptimisticLockGetter::getReturnType():java.lang.Class" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$OptimisticLockSetter" />
			<role name="State" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$LongVersionAccessor" />
			<role name="state" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$OptimisticLockSetter::versionAccessor:org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$LongVersionAccessor" />
			<role name="Request()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor$OptimisticLockSetter::set(java.lang.Object, java.lang.Object, org.hibernate.engine.SessionFactoryImplementor):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.server.ServerConnectionDefault" />
			<role name="State" element="org.nakedobjects.remoting.protocol.ServerMarshaller" />
			<role name="state" element="org.nakedobjects.remoting.server.ServerConnectionDefault::serverMarshaller:org.nakedobjects.remoting.protocol.ServerMarshaller" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionDefault::readRequest():org.nakedobjects.remoting.exchange.Request" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionDefault::sendResponse(java.lang.Object):void" />
			<role name="Request()" element="org.nakedobjects.remoting.server.ServerConnectionDefault::sendError(org.nakedobjects.metamodel.commons.exceptions.NakedObjectException):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl" />
			<role name="State" element="org.nakedobjects.runtime.authentication.AuthenticationManager" />
			<role name="state" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::authenticationManager:org.nakedobjects.runtime.authentication.AuthenticationManager" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::openSession(org.nakedobjects.remoting.exchange.OpenSessionRequest):org.nakedobjects.remoting.exchange.OpenSessionResponse" />
			<role name="Request()" element="org.nakedobjects.remoting.facade.impl.ServerFacadeImpl::closeSession(org.nakedobjects.remoting.exchange.CloseSessionRequest):org.nakedobjects.remoting.exchange.CloseSessionResponse" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::encoderDecoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::reload(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::resolveImmediatelyFromPersistenceLayer(org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::resolveFieldFromPersistenceLayer(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation):void" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.PersistenceSessionProxy::findInstancesFromPersistenceLayer(org.nakedobjects.runtime.persistence.query.PersistenceQuery):org.nakedobjects.metamodel.adapter.NakedObject[]" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="State" element="org.nakedobjects.runtime.persistence.services.ServicesInstaller" />
			<role name="state" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::servicesInstaller:org.nakedobjects.runtime.persistence.services.ServicesInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainServices():java.util.List" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager" />
			<role name="State" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStoreTransactionManagement" />
			<role name="state" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager::objectStore:org.nakedobjects.runtime.persistence.objectstore.ObjectStoreTransactionManagement" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager::startTransaction():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager::endTransaction():void" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransactionManager::abortTransaction():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.sql.objectstore.SqlOid" />
			<role name="State" element="org.nakedobjects.plugins.sql.objectstore.PrimaryKey" />
			<role name="state" element="org.nakedobjects.plugins.sql.objectstore.SqlOid::primaryKey:org.nakedobjects.plugins.sql.objectstore.PrimaryKey" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.SqlOid::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.authentication.standard.AuthenticationManagerStandard" />
			<role name="State" element="org.nakedobjects.runtime.authentication.standard.RandomCodeGenerator" />
			<role name="state" element="org.nakedobjects.runtime.authentication.standard.AuthenticationManagerStandard::randomCodeGenerator:org.nakedobjects.runtime.authentication.standard.RandomCodeGenerator" />
			<role name="Request()" element="org.nakedobjects.runtime.authentication.standard.AuthenticationManagerStandard::getUnusedRandomCode():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.authentication.standard.file.FileAuthenticator" />
			<role name="State" element="org.nakedobjects.metamodel.commons.resource.ResourceStreamSource" />
			<role name="state" element="org.nakedobjects.runtime.authentication.standard.file.FileAuthenticator::resourceStreamSource:org.nakedobjects.metamodel.commons.resource.ResourceStreamSource" />
			<role name="Request()" element="org.nakedobjects.runtime.authentication.standard.file.FileAuthenticator::isValid(org.nakedobjects.runtime.authentication.AuthenticationRequest):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.authorization.standard.file.FileAuthorizor" />
			<role name="State" element="org.nakedobjects.metamodel.commons.resource.ResourceStreamSource" />
			<role name="state" element="org.nakedobjects.runtime.authorization.standard.file.FileAuthorizor::resourceStreamSource:org.nakedobjects.metamodel.commons.resource.ResourceStreamSource" />
			<role name="Request()" element="org.nakedobjects.runtime.authorization.standard.file.FileAuthorizor::writeMap():void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.spec.identifier.Identified" />
			<role name="Context" element="org.nakedobjects.metamodel.examples.facets.jsr303.Jsr303PropertyValidationFacet" />
			<role name="state" element="org.nakedobjects.metamodel.examples.facets.jsr303.Jsr303PropertyValidationFacet::identifierHolder:org.nakedobjects.metamodel.spec.identifier.Identified" />
			<role name="Request()" element="org.nakedobjects.metamodel.examples.facets.jsr303.Jsr303PropertyValidationFacet::invalidates(org.nakedobjects.metamodel.interactions.ValidityContext):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.html.context.PersistentObjectMapping" />
			<role name="State" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="state" element="org.nakedobjects.plugins.html.context.PersistentObjectMapping::specification:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.html.context.PersistentObjectMapping::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Request()" element="org.nakedobjects.plugins.html.context.PersistentObjectMapping::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="State" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorInstaller" />
			<role name="state" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::reflectorInstaller:org.nakedobjects.metamodel.specloader.NakedObjectReflectorInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainReflector(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.metamodel.specloader.NakedObjectReflector" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.specloader.internal.facetprocessor.FacetProcessor" />
			<role name="State" element="org.nakedobjects.metamodel.specloader.progmodelfacets.ProgrammingModelFacets" />
			<role name="state" element="org.nakedobjects.metamodel.specloader.internal.facetprocessor.FacetProcessor::programmingModelFacets:org.nakedobjects.metamodel.specloader.progmodelfacets.ProgrammingModelFacets" />
			<role name="Request()" element="org.nakedobjects.metamodel.specloader.internal.facetprocessor.FacetProcessor::init():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.action.CloseWindowControl" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.action.CloseWindowRender" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.action.CloseWindowControl::render:org.nakedobjects.plugins.dnd.viewer.action.CloseWindowRender" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.CloseWindowControl::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.action.IconizeWindowControl" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.action.IconizeWindowRender" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.action.IconizeWindowControl::render:org.nakedobjects.plugins.dnd.viewer.action.IconizeWindowRender" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.IconizeWindowControl::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.action.ResizeWindowControl" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.action.ResizeWindowRender" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.action.ResizeWindowControl::render:org.nakedobjects.plugins.dnd.viewer.action.ResizeWindowRender" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.action.ResizeWindowControl::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu::backgroundColor:org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.graphic.IconGraphic" />
			<role name="State" element="org.nakedobjects.plugins.dnd.Content" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.graphic.IconGraphic::content:org.nakedobjects.plugins.dnd.Content" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.graphic.IconGraphic::icon():org.nakedobjects.plugins.dnd.viewer.drawing.Image" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.sql.objectstore.jdbc.JdbcObjectReferenceMapping" />
			<role name="State" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="state" element="org.nakedobjects.plugins.sql.objectstore.jdbc.JdbcObjectReferenceMapping::specification:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.JdbcObjectReferenceMapping::initializeField(org.nakedobjects.plugins.sql.objectstore.Results):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="State" element="org.nakedobjects.runtime.authentication.AuthenticationManagerInstaller" />
			<role name="state" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::authenticationInstaller:org.nakedobjects.runtime.authentication.AuthenticationManagerInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainAuthenticationManager(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.authentication.AuthenticationManager" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.authorization.AuthorizationManagerProxy" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.authorization.AuthorizationManagerProxy::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.authorization.AuthorizationManagerProxy::isUsable(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.applib.Identifier):boolean" />
			<role name="Request()" element="org.nakedobjects.remoting.client.authorization.AuthorizationManagerProxy::isVisible(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.applib.Identifier):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="State" element="org.nakedobjects.runtime.authorization.AuthorizationManagerInstaller" />
			<role name="state" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::authorizationInstaller:org.nakedobjects.runtime.authorization.AuthorizationManagerInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainAuthorizationManager(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.authorization.AuthorizationManager" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="State" element="org.nakedobjects.runtime.persistence.PersistenceMechanismInstaller" />
			<role name="state" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::persistenceMechanismInstaller:org.nakedobjects.runtime.persistence.PersistenceMechanismInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainPersistenceSessionFactory(org.nakedobjects.runtime.system.DeploymentType):org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.DeploymentType" />
			<role name="State" element="org.nakedobjects.runtime.system.ContextCategory" />
			<role name="state" element="org.nakedobjects.runtime.system.DeploymentType::contextCategory:org.nakedobjects.runtime.system.ContextCategory" />
			<role name="Request()" element="org.nakedobjects.runtime.system.DeploymentType::initContext(org.nakedobjects.runtime.session.NakedObjectSessionFactory):void" />
			<role name="Request()" element="org.nakedobjects.runtime.system.DeploymentType::canSpecifyViewers(java.util.List):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager" />
			<role name="State" element="org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerProxy" />
			<role name="state" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::adapterManager:org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerProxy" />
			<role name="Request()" element="org.nakedobjects.remoting.client.persistence.ClientSideTransactionManager::handleResults(org.nakedobjects.remoting.client.transaction.ClientTransactionEvent[], org.nakedobjects.remoting.exchange.ExecuteClientActionResponse):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers" />
			<role name="State" element="org.nakedobjects.runtime.userprofile.UserProfileStoreInstaller" />
			<role name="state" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::userProfileStoreInstaller:org.nakedobjects.runtime.userprofile.UserProfileStoreInstaller" />
			<role name="Request()" element="org.nakedobjects.runtime.system.installers.NakedObjectsSystemUsingInstallers::obtainUserProfileStore():org.nakedobjects.runtime.userprofile.UserProfileStore" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryFindUsingApplibQuerySerializable" />
			<role name="State" element="org.nakedobjects.applib.query.Query" />
			<role name="state" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryFindUsingApplibQuerySerializable::query:org.nakedobjects.applib.query.Query" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryFindUsingApplibQuerySerializable::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.installers.InstallerVersion" />
			<role name="State" element="org.nakedobjects.metamodel.commons.component.Installer" />
			<role name="state" element="org.nakedobjects.runtime.installers.InstallerVersion::installer:org.nakedobjects.metamodel.commons.component.Installer" />
			<role name="Request()" element="org.nakedobjects.runtime.installers.InstallerVersion::getName():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.commons.io.LazyInputStream" />
			<role name="State" element="org.nakedobjects.metamodel.commons.io.LazyInputStream$InputStreamProvider" />
			<role name="state" element="org.nakedobjects.metamodel.commons.io.LazyInputStream::provider:org.nakedobjects.metamodel.commons.io.LazyInputStream$InputStreamProvider" />
			<role name="Request()" element="org.nakedobjects.metamodel.commons.io.LazyInputStream::obtainUnderlyingIfRequired():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.help.StandardHelpFacetDecorator" />
			<role name="State" element="org.nakedobjects.runtime.help.HelpManager" />
			<role name="state" element="org.nakedobjects.runtime.help.StandardHelpFacetDecorator::helpManager:org.nakedobjects.runtime.help.HelpManager" />
			<role name="Request()" element="org.nakedobjects.runtime.help.StandardHelpFacetDecorator::decorate(org.nakedobjects.metamodel.facets.Facet, org.nakedobjects.metamodel.facets.FacetHolder):org.nakedobjects.metamodel.facets.Facet" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.facets.object.dirty.ClearDirtyObjectFacet" />
			<role name="Context" element="org.nakedobjects.metamodel.spec.JavaSpecification" />
			<role name="state" element="org.nakedobjects.metamodel.spec.JavaSpecification::clearDirtyObjectFacet:org.nakedobjects.metamodel.facets.object.dirty.ClearDirtyObjectFacet" />
			<role name="Request()" element="org.nakedobjects.metamodel.spec.JavaSpecification::clearDirty(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.facets.object.dirty.IsDirtyObjectFacet" />
			<role name="Context" element="org.nakedobjects.metamodel.spec.JavaSpecification" />
			<role name="state" element="org.nakedobjects.metamodel.spec.JavaSpecification::isDirtyObjectFacet:org.nakedobjects.metamodel.facets.object.dirty.IsDirtyObjectFacet" />
			<role name="Request()" element="org.nakedobjects.metamodel.spec.JavaSpecification::isDirty(org.nakedobjects.metamodel.adapter.NakedObject):boolean" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.facets.object.dirty.MarkDirtyObjectFacet" />
			<role name="Context" element="org.nakedobjects.metamodel.spec.JavaSpecification" />
			<role name="state" element="org.nakedobjects.metamodel.spec.JavaSpecification::markDirtyObjectFacet:org.nakedobjects.metamodel.facets.object.dirty.MarkDirtyObjectFacet" />
			<role name="Request()" element="org.nakedobjects.metamodel.spec.JavaSpecification::markDirty(org.nakedobjects.metamodel.adapter.NakedObject):void" />
		</instance>
		<instance>
			<role name="State" element="org.nakedobjects.metamodel.facets.object.ident.icon.IconFacet" />
			<role name="Context" element="org.nakedobjects.metamodel.spec.JavaSpecification" />
			<role name="state" element="org.nakedobjects.metamodel.spec.JavaSpecification::iconMethod:org.nakedobjects.metamodel.facets.object.ident.icon.IconFacet" />
			<role name="Request()" element="org.nakedobjects.metamodel.spec.JavaSpecification::getIconName(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.metamodel.spec.JavaSpecification" />
			<role name="State" element="org.nakedobjects.metamodel.facets.object.ident.title.TitleFacet" />
			<role name="state" element="org.nakedobjects.metamodel.spec.JavaSpecification::titleFacet:org.nakedobjects.metamodel.facets.object.ident.title.TitleFacet" />
			<role name="Request()" element="org.nakedobjects.metamodel.spec.JavaSpecification::getTitle(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.lookup.ObjectDropDownAxis" />
			<role name="State" element="org.nakedobjects.plugins.dnd.ObjectContent" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.lookup.ObjectDropDownAxis::content:org.nakedobjects.plugins.dnd.ObjectContent" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.lookup.ObjectDropDownAxis::setSelection(org.nakedobjects.plugins.dnd.viewer.lookup.OptionContent):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="State" element="org.nakedobjects.plugins.dnd.Background" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.XViewer::background:org.nakedobjects.plugins.dnd.Background" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::paint(java.awt.Graphics):void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.XViewer" />
			<role name="State" element="org.nakedobjects.plugins.dnd.viewer.ShutdownListener" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.XViewer::listener:org.nakedobjects.plugins.dnd.viewer.ShutdownListener" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.XViewer::quit():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.dnd.viewer.view.text.ObjectTitleText" />
			<role name="State" element="org.nakedobjects.plugins.dnd.Content" />
			<role name="state" element="org.nakedobjects.plugins.dnd.viewer.view.text.ObjectTitleText::content:org.nakedobjects.plugins.dnd.Content" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.view.text.ObjectTitleText::title():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandlerDefault" />
			<role name="State" element="org.nakedobjects.plugins.headless.applib.HeadlessViewer" />
			<role name="state" element="org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandlerDefault::headlessViewer:org.nakedobjects.plugins.headless.applib.HeadlessViewer" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.viewer.internal.DelegatingInvocationHandlerDefault::notifyListeners(org.nakedobjects.applib.events.InteractionEvent):org.nakedobjects.applib.events.InteractionEvent" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.sql.objectstore.DatabaseConnectorPool" />
			<role name="State" element="org.nakedobjects.plugins.sql.objectstore.DatabaseConnectorFactory" />
			<role name="state" element="org.nakedobjects.plugins.sql.objectstore.DatabaseConnectorPool::factory:org.nakedobjects.plugins.sql.objectstore.DatabaseConnectorFactory" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.DatabaseConnectorPool::newConnector():org.nakedobjects.plugins.sql.objectstore.DatabaseConnector" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.sql.objectstore.ObjectMappingLookup" />
			<role name="State" element="org.nakedobjects.plugins.sql.objectstore.ObjectMappingFactory" />
			<role name="state" element="org.nakedobjects.plugins.sql.objectstore.ObjectMappingLookup::objectMappingFactory:org.nakedobjects.plugins.sql.objectstore.ObjectMappingFactory" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.ObjectMappingLookup::getMapping(org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.plugins.sql.objectstore.ObjectMapping" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.ObjectMappingLookup::init():void" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.sql.objectstore.FieldMappingLookup" />
			<role name="State" element="org.nakedobjects.plugins.sql.objectstore.mapping.FieldMappingFactory" />
			<role name="state" element="org.nakedobjects.plugins.sql.objectstore.FieldMappingLookup::referenceFieldMappingfactory:org.nakedobjects.plugins.sql.objectstore.mapping.FieldMappingFactory" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.FieldMappingLookup::createMapping(org.nakedobjects.metamodel.spec.feature.NakedObjectAssociation):org.nakedobjects.plugins.sql.objectstore.mapping.FieldMapping" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.plugins.sql.objectstore.FieldMappingLookup" />
			<role name="State" element="org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMappingFactory" />
			<role name="state" element="org.nakedobjects.plugins.sql.objectstore.FieldMappingLookup::objectReferenceMappingfactory:org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMappingFactory" />
			<role name="Request()" element="org.nakedobjects.plugins.sql.objectstore.FieldMappingLookup::createMapping(org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.plugins.sql.objectstore.mapping.ObjectReferenceMapping" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.authentication.ProxyAuthenticator" />
			<role name="State" element="org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="state" element="org.nakedobjects.remoting.client.authentication.ProxyAuthenticator::serverFacade:org.nakedobjects.remoting.facade.ServerFacade" />
			<role name="Request()" element="org.nakedobjects.remoting.client.authentication.ProxyAuthenticator::authenticate(org.nakedobjects.runtime.authentication.AuthenticationRequest, java.lang.String):org.nakedobjects.metamodel.authentication.AuthenticationSession" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.remoting.client.authorization.AuthorizationManagerProxy" />
			<role name="State" element="org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="state" element="org.nakedobjects.remoting.client.authorization.AuthorizationManagerProxy::encoderDecoder:org.nakedobjects.remoting.protocol.encoding.internal.ObjectEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.remoting.client.authorization.AuthorizationManagerProxy::isUsable(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.applib.Identifier):boolean" />
			<role name="Request()" element="org.nakedobjects.remoting.client.authorization.AuthorizationManagerProxy::isVisible(org.nakedobjects.metamodel.authentication.AuthenticationSession, org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.applib.Identifier):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransaction" />
			<role name="State" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStoreTransactionManagement" />
			<role name="state" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransaction::objectStore:org.nakedobjects.runtime.persistence.objectstore.ObjectStoreTransactionManagement" />
			<role name="Request()" element="org.nakedobjects.runtime.persistence.objectstore.transaction.ObjectStoreTransaction::doFlush():void" />
		</instance>
	</pattern>
	<pattern name="Strategy">
		<instance>
			<role name="Context" element="org.nakedobjects.webapp.NakedObjectsSessionFilter" />
			<role name="Strategy" element="org.nakedobjects.webapp.auth.AuthenticationSessionLookupStrategy" />
			<role name="strategy" element="org.nakedobjects.webapp.NakedObjectsSessionFilter::authSessionLookupStrategy:org.nakedobjects.webapp.auth.AuthenticationSessionLookupStrategy" />
			<role name="ContextInterface()" element="org.nakedobjects.webapp.NakedObjectsSessionFilter::doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain):void" />
		</instance>
	</pattern>
	<pattern name="Bridge">
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.UserAction" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::action:org.nakedobjects.plugins.dnd.UserAction" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::canFocus():boolean" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::entered():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::executeAction():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::mouseDown(org.nakedobjects.plugins.dnd.Click):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView::mouseUp(org.nakedobjects.plugins.dnd.Click):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractView" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractView::specification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractView::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="implementor" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::specificationLoader:org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::createServiceAdapters():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractCompositeViewSpecification" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractCompositeViewSpecification::builder:org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.builder.AbstractCompositeViewSpecification::createView(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.tree.CompositeNodeSpecification" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.tree.CompositeNodeSpecification::builder:org.nakedobjects.plugins.dnd.ViewBuilder" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.tree.CompositeNodeSpecification::createNodeView(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.example.expenses.claims.AbstractClaim" />
			<role name="Implementor" element="org.nakedobjects.example.expenses.claims.ClaimRepository" />
			<role name="implementor" element="org.nakedobjects.example.expenses.claims.AbstractClaim::claimRepository:org.nakedobjects.example.expenses.claims.ClaimRepository" />
			<role name="Operation()" element="org.nakedobjects.example.expenses.claims.AbstractClaim::validateDescription(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.example.expenses.claims.items.AbstractExpenseItem" />
			<role name="Implementor" element="org.nakedobjects.example.expenses.claims.ClaimRepository" />
			<role name="implementor" element="org.nakedobjects.example.expenses.claims.items.AbstractExpenseItem::claimRepository:org.nakedobjects.example.expenses.claims.ClaimRepository" />
			<role name="Operation()" element="org.nakedobjects.example.expenses.claims.items.AbstractExpenseItem::changeStatusTo(java.lang.String):void" />
			<role name="Operation()" element="org.nakedobjects.example.expenses.claims.items.AbstractExpenseItem::findSimilarExpenseItems():java.util.List" />
		</instance>
		<instance>
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::container:org.nakedobjects.plugins.dnd.View" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::focus:org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::checkCanFocusOn(org.nakedobjects.plugins.dnd.View):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::focusParentView():void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::setFocus(org.nakedobjects.plugins.dnd.View):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.viewer.border.BorderDrawing" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder::borderRender:org.nakedobjects.plugins.dnd.viewer.border.BorderDrawing" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder::debugDetails(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder::layoutControls(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder::getRequiredSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size):org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.table.AbstractTableSpecification" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.table.AbstractTableSpecification::rowSpecification:org.nakedobjects.plugins.dnd.ViewSpecification" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.table.AbstractTableSpecification::createSubview(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis, int):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="Implementor" element="org.nakedobjects.metamodel.facets.FacetHolder" />
			<role name="Abstraction" element="org.nakedobjects.metamodel.facets.object.value.ValueFacetAbstract" />
			<role name="implementor" element="org.nakedobjects.metamodel.facets.object.value.ValueFacetAbstract::facetHolder:org.nakedobjects.metamodel.facets.FacetHolder" />
			<role name="Operation()" element="org.nakedobjects.metamodel.facets.object.value.ValueFacetAbstract::facetTypes():java.lang.Class[]" />
		</instance>
		<instance>
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.View" />
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText::view:org.nakedobjects.plugins.dnd.View" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText::draw(org.nakedobjects.plugins.dnd.Canvas, int, int, int):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="implementor" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::specificationLoader:org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="Operation()" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::init():void" />
		</instance>
		<instance>
			<role name="Implementor" element="org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Abstraction" element="org.nakedobjects.metamodel.runtimecontext.spec.IntrospectableSpecificationAbstract" />
			<role name="implementor" element="org.nakedobjects.metamodel.runtimecontext.spec.IntrospectableSpecificationAbstract::runtimeContext:org.nakedobjects.metamodel.runtimecontext.RuntimeContext" />
			<role name="Operation()" element="org.nakedobjects.metamodel.runtimecontext.spec.IntrospectableSpecificationAbstract::getServiceActionsFor(org.nakedobjects.metamodel.spec.feature.NakedObjectActionType[]):org.nakedobjects.metamodel.spec.feature.NakedObjectAction[]" />
			<role name="Operation()" element="org.nakedobjects.metamodel.runtimecontext.spec.IntrospectableSpecificationAbstract::getServiceActions(org.nakedobjects.metamodel.spec.feature.NakedObjectActionType):org.nakedobjects.metamodel.spec.feature.NakedObjectAction[]" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.html.task.Task" />
			<role name="Implementor" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="implementor" element="org.nakedobjects.plugins.html.task.Task::fieldSpecifications:org.nakedobjects.metamodel.spec.NakedObjectSpecification[]" />
			<role name="Operation()" element="org.nakedobjects.plugins.html.task.Task::debug(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.html.task.Task::getEntries(org.nakedobjects.plugins.html.context.Context):org.nakedobjects.metamodel.adapter.NakedObject[]" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectOption" />
			<role name="Implementor" element="org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectOption::action:org.nakedobjects.metamodel.spec.feature.NakedObjectAction" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectOption::getType():org.nakedobjects.metamodel.spec.feature.NakedObjectActionType" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.spec.identifier.Identified" />
			<role name="implementor" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract::facetHolder:org.nakedobjects.metamodel.spec.identifier.Identified" />
			<role name="Operation()" element="org.nakedobjects.metamodel.runtimecontext.spec.feature.NakedObjectMemberAbstract::getIdentifier():org.nakedobjects.applib.Identifier" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.sql.objectstore.auto.AbstractAutoMapper" />
			<role name="Implementor" element="org.nakedobjects.plugins.sql.objectstore.CollectionMapper" />
			<role name="implementor" element="org.nakedobjects.plugins.sql.objectstore.auto.AbstractAutoMapper::collectionMappers:org.nakedobjects.plugins.sql.objectstore.CollectionMapper[]" />
			<role name="Operation()" element="org.nakedobjects.plugins.sql.objectstore.auto.AbstractAutoMapper::needsTables(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector):boolean" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectOption" />
			<role name="Implementor" element="org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectOption::target:org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectOption::disabled(org.nakedobjects.plugins.dnd.View):org.nakedobjects.metamodel.consent.Consent" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.remoting.protocol.MarshallerAbstract" />
			<role name="Implementor" element="org.nakedobjects.remoting.transport.Transport" />
			<role name="implementor" element="org.nakedobjects.remoting.protocol.MarshallerAbstract::transport:org.nakedobjects.remoting.transport.Transport" />
			<role name="Operation()" element="org.nakedobjects.remoting.protocol.MarshallerAbstract::shutdown():void" />
			<role name="Operation()" element="org.nakedobjects.remoting.protocol.MarshallerAbstract::connect():void" />
			<role name="Operation()" element="org.nakedobjects.remoting.protocol.MarshallerAbstract::disconnect():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="implementor" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryAbstract::specification:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.query.PersistenceQueryAbstract::encode(org.nakedobjects.metamodel.commons.encoding.DataOutputExtended):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionParameterAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionParamPeer" />
			<role name="implementor" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionParameterAbstract::peer:org.nakedobjects.metamodel.specloader.internal.peer.NakedObjectActionParamPeer" />
			<role name="Operation()" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionParameterAbstract::getSpecification():org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Operation()" element="org.nakedobjects.metamodel.specloader.internal.NakedObjectActionParameterAbstract::getName():java.lang.String" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegating" />
			<role name="Implementor" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegate" />
			<role name="implementor" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegating::persistenceSessionFactoryDelegate:org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegate" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactoryDelegating::createPersistenceSession():org.nakedobjects.runtime.persistence.PersistenceSession" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.Toolkit" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.ColorsAndFonts" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.Toolkit::colorsAndFonts:org.nakedobjects.plugins.dnd.ColorsAndFonts" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.Toolkit::defaultBaseline():int" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.Toolkit::defaultFieldHeight():int" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.Toolkit::getColor(int):org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.Toolkit::getColor(java.lang.String):org.nakedobjects.plugins.dnd.viewer.drawing.Color" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.Toolkit::getText(java.lang.String):org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.sql.objectstore.auto.AbstractAutoMapper" />
			<role name="Implementor" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="implementor" element="org.nakedobjects.plugins.sql.objectstore.auto.AbstractAutoMapper::specification:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Operation()" element="org.nakedobjects.plugins.sql.objectstore.auto.AbstractAutoMapper::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract" />
			<role name="Implementor" element="org.nakedobjects.runtime.userprofile.UserProfileLoader" />
			<role name="implementor" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::userProfileLoader:org.nakedobjects.runtime.userprofile.UserProfileLoader" />
			<role name="Operation()" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::init():void" />
			<role name="Operation()" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::openSession(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.session.NakedObjectSession" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="implementor" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::servicesInjector:org.nakedobjects.metamodel.services.ServicesInjector" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::createServiceAdapters():void" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::getService(java.lang.String):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::getServices():java.util.List" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::hasServices():boolean" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.applib.fixtures.UserProfileFixture" />
			<role name="Implementor" element="org.nakedobjects.applib.profiles.ProfileService" />
			<role name="implementor" element="org.nakedobjects.applib.fixtures.UserProfileFixture::profileService:org.nakedobjects.applib.profiles.ProfileService" />
			<role name="Operation()" element="org.nakedobjects.applib.fixtures.UserProfileFixture::newUserProfile():org.nakedobjects.applib.profiles.Profile" />
			<role name="Operation()" element="org.nakedobjects.applib.fixtures.UserProfileFixture::newUserProfile(org.nakedobjects.applib.profiles.Profile):org.nakedobjects.applib.profiles.Profile" />
			<role name="Operation()" element="org.nakedobjects.applib.fixtures.UserProfileFixture::saveForUser(java.lang.String, org.nakedobjects.applib.profiles.Profile):void" />
			<role name="Operation()" element="org.nakedobjects.applib.fixtures.UserProfileFixture::saveAsDefault(org.nakedobjects.applib.profiles.Profile):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.installers.InstallerAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="implementor" element="org.nakedobjects.runtime.installers.InstallerAbstract::configurationBuilder:org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="Operation()" element="org.nakedobjects.runtime.installers.InstallerAbstract::getConfiguration():org.nakedobjects.metamodel.config.NakedObjectConfiguration" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText::style:org.nakedobjects.plugins.dnd.viewer.drawing.Text" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText::draw(org.nakedobjects.plugins.dnd.Canvas, int, int, int):void" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText::getSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract" />
			<role name="Implementor" element="org.nakedobjects.runtime.fixturesinstaller.FixturesInstaller" />
			<role name="implementor" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::fixtureInstaller:org.nakedobjects.runtime.fixturesinstaller.FixturesInstaller" />
			<role name="Operation()" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::installFixturesIfRequired():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract" />
			<role name="Implementor" element="org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
			<role name="implementor" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::persistenceSessionFactory:org.nakedobjects.runtime.persistence.PersistenceSessionFactory" />
			<role name="Operation()" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::init():void" />
			<role name="Operation()" element="org.nakedobjects.runtime.session.NakedObjectSessionFactoryAbstract::openSession(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.session.NakedObjectSession" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithmContractTest" />
			<role name="Implementor" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithm" />
			<role name="implementor" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithmContractTest::persistAlgorithm:org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithm" />
			<role name="Operation()" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithmContractTest::testMakePersistentSkipsAggregatedObjects():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract" />
			<role name="Implementor" element="org.nakedobjects.runtime.session.NakedObjectSessionFactory" />
			<role name="implementor" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::sessionFactory:org.nakedobjects.runtime.session.NakedObjectSessionFactory" />
			<role name="Operation()" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::init():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.applib.fixtures.AbstractFixture" />
			<role name="Implementor" element="org.nakedobjects.applib.switchuser.SwitchUserService" />
			<role name="implementor" element="org.nakedobjects.applib.fixtures.AbstractFixture::switchUserService:org.nakedobjects.applib.switchuser.SwitchUserService" />
			<role name="Operation()" element="org.nakedobjects.applib.fixtures.AbstractFixture::switchUser(java.lang.String, java.lang.String[]):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.specloader.validator.MetaModelValidator" />
			<role name="implementor" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorAbstract::metaModelValidator:org.nakedobjects.metamodel.specloader.validator.MetaModelValidator" />
			<role name="Operation()" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorAbstract::init():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.authorization.standard.AuthorizationFacetAbstract" />
			<role name="Implementor" element="org.nakedobjects.runtime.authorization.AuthorizationManager" />
			<role name="implementor" element="org.nakedobjects.runtime.authorization.standard.AuthorizationFacetAbstract::authorizationManager:org.nakedobjects.runtime.authorization.AuthorizationManager" />
			<role name="Operation()" element="org.nakedobjects.runtime.authorization.standard.AuthorizationFacetAbstract::hides(org.nakedobjects.metamodel.interactions.VisibilityContext):java.lang.String" />
			<role name="Operation()" element="org.nakedobjects.runtime.authorization.standard.AuthorizationFacetAbstract::disables(org.nakedobjects.metamodel.interactions.UsabilityContext):java.lang.String" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent" />
			<role name="Implementor" element="org.nakedobjects.plugins.dnd.CollectionSorter" />
			<role name="implementor" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent::sorter:org.nakedobjects.plugins.dnd.CollectionSorter" />
			<role name="Operation()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent::allElements():java.util.Enumeration" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.viewer.NakedObjectsViewerAbstract" />
			<role name="Implementor" element="org.nakedobjects.runtime.system.NakedObjectsSystem" />
			<role name="implementor" element="org.nakedobjects.runtime.viewer.NakedObjectsViewerAbstract::system:org.nakedobjects.runtime.system.NakedObjectsSystem" />
			<role name="Operation()" element="org.nakedobjects.runtime.viewer.NakedObjectsViewerAbstract::getLogonFixture():org.nakedobjects.applib.fixtures.LogonFixture" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.viewer.NakedObjectsViewerAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="implementor" element="org.nakedobjects.runtime.viewer.NakedObjectsViewerAbstract::configurationBuilder:org.nakedobjects.metamodel.config.ConfigurationBuilder" />
			<role name="Operation()" element="org.nakedobjects.runtime.viewer.NakedObjectsViewerAbstract::init():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.specloader.progmodelfacets.ProgrammingModelFacets" />
			<role name="implementor" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorAbstract::programmingModelFacets:org.nakedobjects.metamodel.specloader.progmodelfacets.ProgrammingModelFacets" />
			<role name="Operation()" element="org.nakedobjects.metamodel.specloader.NakedObjectReflectorAbstract::init():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.plugins.xml.objectstore.internal.data.Data" />
			<role name="Implementor" element="org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="implementor" element="org.nakedobjects.plugins.xml.objectstore.internal.data.Data::noSpec:org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="Operation()" element="org.nakedobjects.plugins.xml.objectstore.internal.data.Data::getTypeName():java.lang.String" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.bytecode.ObjectResolveAndObjectChangedEnhancerAbstract" />
			<role name="Implementor" element="org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="implementor" element="org.nakedobjects.runtime.bytecode.ObjectResolveAndObjectChangedEnhancerAbstract::specificationLoader:org.nakedobjects.metamodel.specloader.SpecificationLoader" />
			<role name="Operation()" element="org.nakedobjects.runtime.bytecode.ObjectResolveAndObjectChangedEnhancerAbstract::getSpecification(java.lang.Class):org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.nakedobjects.runtime.objectstore.inmemory.internal.commands.AbstractInMemoryPersistenceCommand" />
			<role name="Implementor" element="org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStorePersistedObjects" />
			<role name="implementor" element="org.nakedobjects.runtime.objectstore.inmemory.internal.commands.AbstractInMemoryPersistenceCommand::persistedObjects:org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStorePersistedObjects" />
			<role name="Operation()" element="org.nakedobjects.runtime.objectstore.inmemory.internal.commands.AbstractInMemoryPersistenceCommand::instancesFor(org.nakedobjects.metamodel.spec.NakedObjectSpecification):org.nakedobjects.runtime.objectstore.inmemory.internal.ObjectStoreInstances" />
		</instance>
	</pattern>
	<pattern name="Template Method">
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.applib.clock.Clock" />
			<role name="TemplateMethod()" element="org.nakedobjects.applib.clock.Clock::getTime():long" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.applib.fixtures.UserProfileFixture" />
			<role name="TemplateMethod()" element="org.nakedobjects.applib.fixtures.UserProfileFixture::install():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.applib.spec.AbstractSpecification" />
			<role name="TemplateMethod()" element="org.nakedobjects.applib.spec.AbstractSpecification::satisfies(java.lang.Object):java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.applib.value.Magnitude" />
			<role name="TemplateMethod()" element="org.nakedobjects.applib.value.Magnitude::isGreaterThan(org.nakedobjects.applib.value.Magnitude):boolean" />
			<role name="TemplateMethod()" element="org.nakedobjects.applib.value.Magnitude::isGreaterThanOrEqualTo(org.nakedobjects.applib.value.Magnitude):boolean" />
			<role name="TemplateMethod()" element="org.nakedobjects.applib.value.Magnitude::min(org.nakedobjects.applib.value.Magnitude):org.nakedobjects.applib.value.Magnitude" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.example.expenses.claims.AbstractClaim" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.AbstractClaim::disableDescription():java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.AbstractClaim::disableCreateNewExpenseItem():java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.AbstractClaim::disableCopyAnExistingExpenseItem():java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.AbstractClaim::disableCopyAllExpenseItemsFromAnotherClaim():java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.AbstractClaim::disableProjectCode():java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.example.expenses.claims.ClaimRepositoryAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.ClaimRepositoryAbstract::findExpenseItemsLike(org.nakedobjects.example.expenses.claims.ExpenseItem):java.util.List" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.example.expenses.claims.items.AbstractExpenseItem" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.items.AbstractExpenseItem::mandatoryFieldsComplete():boolean" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.items.AbstractExpenseItem::copyAllSameClassFields(org.nakedobjects.example.expenses.claims.ExpenseItem):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.example.expenses.claims.items.Journey" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.items.Journey::copyAnyEmptyFieldsSpecificToSubclassOfAbstractExpenseItem(org.nakedobjects.example.expenses.claims.ExpenseItem):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.example.expenses.claims.items.Journey::mandatorySubClassFieldsComplete():boolean" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.commons.encoding.FieldType" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.commons.encoding.FieldType::write(org.nakedobjects.metamodel.commons.encoding.DataOutputExtended, T):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.commons.logging.Logger" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.commons.logging.Logger::logger():org.apache.log4j.Logger" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.commons.logging.SnapshotAppender" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.commons.logging.SnapshotAppender::writeSnapshot(org.apache.log4j.helpers.CyclicBuffer):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.commons.resource.ResourceStreamSourceAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.commons.resource.ResourceStreamSourceAbstract::readResource(java.lang.String):java.io.InputStream" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.facets.object.bounded.BoundedFacetAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.facets.object.bounded.BoundedFacetAbstract::invalidates(org.nakedobjects.metamodel.interactions.ValidityContext):java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.facets.object.bounded.BoundedFacetAbstract::disables(org.nakedobjects.metamodel.interactions.UsabilityContext):java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.facets.object.immutable.ImmutableFacetAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.facets.object.immutable.ImmutableFacetAbstract::disables(org.nakedobjects.metamodel.interactions.UsabilityContext):java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.facets.propparam.typicallength.TypicalLengthFacetAbstract::toStringValues():java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.value.ImageValueSemanticsProviderAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ImageValueSemanticsProviderAbstract::restoreFromByteArray(byte[]):java.lang.Object" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ImageValueSemanticsProviderAbstract::flatten(org.nakedobjects.metamodel.adapter.NakedObject):int[]" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ImageValueSemanticsProviderAbstract::doEncode(java.lang.Object):java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ImageValueSemanticsProviderAbstract::doRestore(java.lang.String):java.lang.Object" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstract::parseTextEntry(java.lang.Object, java.lang.String):java.lang.Object" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstract::displayTitleOf(java.lang.Object):java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstract::displayTitleOf(java.lang.Object, java.lang.String):java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstract::toEncodedString(java.lang.Object):java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstract::fromEncodedString(java.lang.String):java.lang.Object" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::doParse(java.lang.Object, java.lang.String):java.lang.Object" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::parseDate(java.lang.String, java.lang.Object):java.lang.Object" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::relativeDate(java.lang.Object, java.lang.String, boolean):java.lang.Object" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::relativeDate2(java.lang.Object, java.lang.String, boolean):java.lang.Object" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::titleString(java.lang.Object):java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::titleStringWithMask(java.lang.Object, java.lang.String):java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::doEncode(java.lang.Object):java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::doRestore(java.lang.String):java.lang.Object" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::dateValue(org.nakedobjects.metamodel.adapter.NakedObject):java.util.Date" />
			<role name="TemplateMethod()" element="org.nakedobjects.metamodel.value.ValueSemanticsProviderAbstractTemporal::createValue(java.util.Date):org.nakedobjects.metamodel.adapter.NakedObject" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.basic.ResizeBorder" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.basic.ResizeBorder::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.border.AbstractWindowBorder::getRequiredSize(org.nakedobjects.plugins.dnd.viewer.drawing.Size):org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent::elements():org.nakedobjects.metamodel.adapter.NakedObject[]" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent::getElementSpecification():org.nakedobjects.metamodel.spec.NakedObjectSpecification" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent::contentMenuOptions(org.nakedobjects.plugins.dnd.UserActionSet):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractCollectionContent::getIconPicture(int):org.nakedobjects.plugins.dnd.viewer.drawing.Image" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent::canDrop(org.nakedobjects.plugins.dnd.Content):org.nakedobjects.metamodel.consent.Consent" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent::drop(org.nakedobjects.plugins.dnd.Content):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent::isPersistable():boolean" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent::contentMenuOptions(org.nakedobjects.plugins.dnd.UserActionSet):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent::getIconName():java.lang.String" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.content.AbstractObjectContent::getIconPicture(int):org.nakedobjects.plugins.dnd.viewer.drawing.Image" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugFrame" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.debug.DebugFrame::refresh():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::checkCanFocusOn(org.nakedobjects.plugins.dnd.View):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::focusFirstChildView():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::focusLastChildView():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::focusNextView():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.focus.AbstractFocusManager::focusPreviousView():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.tree.NodeSpecification" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.tree.NodeSpecification::createView(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewAxis):org.nakedobjects.plugins.dnd.View" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.view.field.TextField" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.view.field.TextField::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractCompositeView" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractCompositeView::getSubviews():org.nakedobjects.plugins.dnd.View[]" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.view.simple.AbstractCompositeView::layout(org.nakedobjects.plugins.dnd.viewer.drawing.Size):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.dnd.viewer.view.text.TitleText::getTitle():java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.headless.viewer.internal.InteractionEventDispatcherTypeSafe" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.headless.viewer.internal.InteractionEventDispatcherTypeSafe::dispatch(org.nakedobjects.applib.events.InteractionEvent):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor::getSetter(java.lang.Class, java.lang.String):org.hibernate.property.Setter" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.accessor.OptimisticLockAccessor::getGetter(java.lang.Class, java.lang.String):org.hibernate.property.Getter" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.usertype.AbstractImageType" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.usertype.AbstractImageType::nullSafeGet(java.sql.ResultSet, java.lang.String[], java.lang.Object):java.lang.Object" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.hibernate.objectstore.persistence.hibspi.usertype.AbstractImageType::nullSafeSet(java.sql.PreparedStatement, java.lang.Object, int):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.html.component.html.AbstractHtmlPage" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.html.component.html.AbstractHtmlPage::write(java.io.PrintWriter):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.html.image.ImageProviderAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.html.image.ImageProviderAbstract::image(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.sql.objectstore.AbstractMapper" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.sql.objectstore.AbstractMapper::startup(org.nakedobjects.plugins.sql.objectstore.DatabaseConnector, org.nakedobjects.plugins.sql.objectstore.FieldMappingLookup):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping::appendColumnDefinitions(java.lang.StringBuffer):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping::appendInsertValues(java.lang.StringBuffer, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping::appendUpdateValues(java.lang.StringBuffer, org.nakedobjects.metamodel.adapter.NakedObject):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.plugins.sql.objectstore.jdbc.AbstractJdbcFieldMapping::initializeField(org.nakedobjects.metamodel.adapter.NakedObject, org.nakedobjects.plugins.sql.objectstore.Results):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.remoting.client.ProxyInstallerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.remoting.client.ProxyInstallerAbstract::createServerFacade():org.nakedobjects.remoting.facade.ServerFacade" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.remoting.protocol.encoding.internal.PersistenceQueryEncoderAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.remoting.protocol.encoding.internal.PersistenceQueryEncoderAbstract::decode(org.nakedobjects.remoting.data.query.PersistenceQueryData):org.nakedobjects.runtime.persistence.query.PersistenceQuery" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.remoting.server.SocketsViewerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.remoting.server.SocketsViewerAbstract::acceptAndHandleRequests(org.nakedobjects.remoting.facade.ServerFacade):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.remoting.server.SocketsViewerInstallerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.remoting.server.SocketsViewerInstallerAbstract::doCreateViewer():org.nakedobjects.runtime.viewer.NakedObjectsViewer" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.authentication.standard.AuthenticationManagerStandardInstallerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.authentication.standard.AuthenticationManagerStandardInstallerAbstract::createAuthenticationManager():org.nakedobjects.runtime.authentication.AuthenticationManager" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.authorization.standard.AuthorizationManagerStandardInstallerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.authorization.standard.AuthorizationManagerStandardInstallerAbstract::createAuthorizationManager():org.nakedobjects.runtime.authorization.AuthorizationManager" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.context.NakedObjectsContext" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.context.NakedObjectsContext::applySessionClosePolicy():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.context.NakedObjectsContext::closeSessionInstance():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.context.NakedObjectsContext::openSession(org.nakedobjects.metamodel.authentication.AuthenticationSession):org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.context.NakedObjectsContext::getSession(java.lang.String):org.nakedobjects.runtime.session.NakedObjectSession" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.context.NakedObjectsContext::closeAllSessions():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.context.NakedObjectsContext::inSession():boolean" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.context.NakedObjectsContext::getSession():org.nakedobjects.runtime.session.NakedObjectSession" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.fixturesinstaller.FixturesInstallerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.fixturesinstaller.FixturesInstallerAbstract::installFixtures():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.NakedObjectsAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.NakedObjectsAbstract::run(java.lang.String[]):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.options.standard.OptionHandlerDeploymentType" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.options.standard.OptionHandlerDeploymentType::addOption(org.apache.commons.cli.Options):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.options.standard.OptionHandlerDeploymentType::handle(org.apache.commons.cli.CommandLine, org.nakedobjects.runtime.options.BootPrinter, org.apache.commons.cli.Options):boolean" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithmContractTest" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.persistence.objectstore.algorithm.PersistAlgorithmContractTest::setUp():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStorePersistenceMechanismInstallerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.persistence.objectstore.ObjectStorePersistenceMechanismInstallerAbstract::createPersistenceSession(org.nakedobjects.runtime.persistence.PersistenceSessionFactory, org.nakedobjects.runtime.persistence.adaptermanager.AdapterManagerExtended, org.nakedobjects.runtime.persistence.adapterfactory.AdapterFactory, org.nakedobjects.runtime.persistence.objectfactory.ObjectFactory, org.nakedobjects.runtime.persistence.oidgenerator.OidGenerator, org.nakedobjects.metamodel.services.ServicesInjector):org.nakedobjects.runtime.persistence.PersistenceSession" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.persistence.PersistenceMechanismInstallerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.persistence.PersistenceMechanismInstallerAbstract::createPersistenceSession(org.nakedobjects.runtime.persistence.PersistenceSessionFactory):org.nakedobjects.runtime.persistence.PersistenceSession" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::createServiceAdapters():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::reload(org.nakedobjects.metamodel.adapter.oid.Oid):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::findInstances(org.nakedobjects.runtime.persistence.query.PersistenceQuery):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::getService(java.lang.Object):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.persistence.PersistenceSessionAbstract::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.system.internal.monitor.AbstractServerMonitor" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.system.internal.monitor.AbstractServerMonitor::listen():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.system.internal.monitor.AbstractServerMonitor::handleRequest(java.net.Socket):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::init():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::installFixturesIfRequired():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::obtainTemplateImageLoader():org.nakedobjects.runtime.imageloader.TemplateImageLoader" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::showSplash(org.nakedobjects.runtime.imageloader.TemplateImageLoader):void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::debugSection(java.lang.String):org.nakedobjects.metamodel.commons.debug.DebugInfo" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.system.NakedObjectsSystemAbstract::debugOverview(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.transaction.NakedObjectTransactionAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.transaction.NakedObjectTransactionAbstract::flush():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.transaction.NakedObjectTransactionAbstract::commit():void" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.transaction.NakedObjectTransactionAbstract::abort():void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.nakedobjects.runtime.transaction.NakedObjectTransactionManagerAbstract" />
			<role name="TemplateMethod()" element="org.nakedobjects.runtime.transaction.NakedObjectTransactionManagerAbstract::createTransaction():org.nakedobjects.runtime.transaction.NakedObjectTransaction" />
		</instance>
	</pattern>
	<pattern name="Visitor" />
	<pattern name="Proxy">
		<instance>
			<role name="Proxy" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetAbstract" />
			<role name="RealSubject" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetUsingDefaultsProvider" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.defaults.DefaultedFacetAbstract::getDefault():java.lang.Object" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetAbstract" />
			<role name="RealSubject" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetUsingEncoderDecoder" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetAbstract::fromEncodedString(java.lang.String):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.encodeable.EncodableFacetAbstract::toEncodedString(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetAbstract" />
			<role name="RealSubject" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetUsingParser" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetAbstract::parseTextEntry(org.nakedobjects.metamodel.adapter.NakedObject, java.lang.String):org.nakedobjects.metamodel.adapter.NakedObject" />
			<role name="Request()" element="org.nakedobjects.metamodel.facets.object.parseable.ParseableFacetAbstract::parseableTitle(org.nakedobjects.metamodel.adapter.NakedObject):java.lang.String" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.runtime.userprofile.UserProfile" />
			<role name="RealSubject" element="org.nakedobjects.runtime.userprofile.PerspectiveEntry" />
			<role name="Request()" element="org.nakedobjects.runtime.userprofile.UserProfile::debugData(org.nakedobjects.metamodel.commons.debug.DebugString):void" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.plugins.headless.embedded.NakedObjectsMetaModel" />
			<role name="RealSubject" element="org.nakedobjects.plugins.headless.embedded.internal.RuntimeContextForEmbeddedMetaModel" />
			<role name="Request()" element="org.nakedobjects.plugins.headless.embedded.NakedObjectsMetaModel::init():void" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.plugins.dnd.viewer.border.ButtonBorder" />
			<role name="RealSubject" element="org.nakedobjects.plugins.dnd.viewer.action.AbstractControlView" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.border.ButtonBorder::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenuContainer" />
			<role name="RealSubject" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenu" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenuContainer::getMaximumSize():org.nakedobjects.plugins.dnd.viewer.drawing.Size" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenuContainer::mouseMoved(org.nakedobjects.plugins.dnd.viewer.drawing.Location):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenuContainer::keyPressed(org.nakedobjects.plugins.dnd.KeyboardAction):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenuContainer::draw(org.nakedobjects.plugins.dnd.Canvas):void" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.basic.PopupMenuContainer::firstClick(org.nakedobjects.plugins.dnd.Click):void" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeSpecification" />
			<role name="RealSubject" element="org.nakedobjects.plugins.dnd.viewer.tree.OpenCollectionNodeSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeSpecification::canDisplay(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewRequirement):boolean" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeSpecification" />
			<role name="RealSubject" element="org.nakedobjects.plugins.dnd.viewer.tree.OpenObjectNodeSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeSpecification::canDisplay(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewRequirement):boolean" />
		</instance>
		<instance>
			<role name="Proxy" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeWithDetailSpecification" />
			<role name="RealSubject" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeSpecification" />
			<role name="Request()" element="org.nakedobjects.plugins.dnd.viewer.tree.TreeWithDetailSpecification::canDisplay(org.nakedobjects.plugins.dnd.Content, org.nakedobjects.plugins.dnd.ViewRequirement):boolean" />
		</instance>
	</pattern>
	<pattern name="Proxy2" />
	<pattern name="Chain of Responsibility" />
</system>

