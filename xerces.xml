<?xml version="1.0" encoding="UTF-8"?>
<system>
	<pattern name="Factory Method">
		<instance>
			<role name="Creator" element="org.apache.xerces.dom3.as.DOMImplementationAS" />
			<role name="FactoryMethod()" element="org.apache.xerces.dom3.as.DOMImplementationAS::createAS(boolean):org.apache.xerces.dom3.as.ASModel" />
			<role name="FactoryMethod()" element="org.apache.xerces.dom3.as.DOMImplementationAS::createDOMASBuilder():org.apache.xerces.dom3.as.DOMASBuilder" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.impl.dv.SchemaDVFactory" />
			<role name="FactoryMethod()" element="org.apache.xerces.impl.dv.SchemaDVFactory::createTypeRestriction(java.lang.String, java.lang.String, short, org.apache.xerces.impl.dv.XSSimpleType, org.apache.xerces.xs.XSObjectList):org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="FactoryMethod()" element="org.apache.xerces.impl.dv.SchemaDVFactory::createTypeList(java.lang.String, java.lang.String, short, org.apache.xerces.impl.dv.XSSimpleType, org.apache.xerces.xs.XSObjectList):org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="FactoryMethod()" element="org.apache.xerces.impl.dv.SchemaDVFactory::createTypeUnion(java.lang.String, java.lang.String, short, org.apache.xerces.impl.dv.XSSimpleType[], org.apache.xerces.xs.XSObjectList):org.apache.xerces.impl.dv.XSSimpleType" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.jaxp.validation.AbstractXMLSchema" />
			<role name="FactoryMethod()" element="org.apache.xerces.jaxp.validation.AbstractXMLSchema::getGrammarPool():org.apache.xerces.xni.grammars.XMLGrammarPool" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.util.AugmentationsImpl$AugmentationsItemsContainer" />
			<role name="FactoryMethod()" element="org.apache.xerces.util.AugmentationsImpl$AugmentationsItemsContainer::expand():org.apache.xerces.util.AugmentationsImpl$AugmentationsItemsContainer" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.util.ErrorHandlerProxy" />
			<role name="FactoryMethod()" element="org.apache.xerces.util.ErrorHandlerProxy::getErrorHandler():org.apache.xerces.xni.parser.XMLErrorHandler" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xni.grammars.XMLGrammarLoader" />
			<role name="FactoryMethod()" element="org.apache.xerces.xni.grammars.XMLGrammarLoader::loadGrammar(org.apache.xerces.xni.parser.XMLInputSource):org.apache.xerces.xni.grammars.Grammar" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xni.grammars.XSGrammar" />
			<role name="FactoryMethod()" element="org.apache.xerces.xni.grammars.XSGrammar::toXSModel():org.apache.xerces.xs.XSModel" />
			<role name="FactoryMethod()" element="org.apache.xerces.xni.grammars.XSGrammar::toXSModel(org.apache.xerces.xni.grammars.XSGrammar[]):org.apache.xerces.xs.XSModel" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xni.parser.XMLEntityResolver" />
			<role name="FactoryMethod()" element="org.apache.xerces.xni.parser.XMLEntityResolver::resolveEntity(org.apache.xerces.xni.XMLResourceIdentifier):org.apache.xerces.xni.parser.XMLInputSource" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.ElementPSVI" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.ElementPSVI::getSchemaInformation():org.apache.xerces.xs.XSModel" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSAttributeGroupDefinition" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSAttributeGroupDefinition::getAttributeUses():org.apache.xerces.xs.XSObjectList" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSElementDeclaration" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSElementDeclaration::getIdentityConstraints():org.apache.xerces.xs.XSNamedMap" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSIDCDefinition" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSIDCDefinition::getFieldStrs():org.apache.xerces.xs.StringList" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSIDCDefinition::getAnnotations():org.apache.xerces.xs.XSObjectList" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSImplementation" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSImplementation::createXSLoader(org.apache.xerces.xs.StringList):org.apache.xerces.xs.XSLoader" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSImplementation::createStringList(java.lang.String[]):org.apache.xerces.xs.StringList" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSImplementation::createLSInputList(org.w3c.dom.ls.LSInput[]):org.apache.xerces.xs.LSInputList" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSImplementation::getRecognizedVersions():org.apache.xerces.xs.StringList" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSLoader" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSLoader::loadInputList(org.apache.xerces.xs.LSInputList):org.apache.xerces.xs.XSModel" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSLoader::loadURIList(org.apache.xerces.xs.StringList):org.apache.xerces.xs.XSModel" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSModel" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSModel::getComponents(short):org.apache.xerces.xs.XSNamedMap" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSModel::getComponentsByNamespace(short, java.lang.String):org.apache.xerces.xs.XSNamedMap" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSModel::getAnnotations():org.apache.xerces.xs.XSObjectList" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSModelGroup" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSModelGroup::getParticles():org.apache.xerces.xs.XSObjectList" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSNamedMap" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSNamedMap::item(int):org.apache.xerces.xs.XSObject" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSNamespaceItem" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSNamespaceItem::getComponents(short):org.apache.xerces.xs.XSNamedMap" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSNamespaceItem::getDocumentLocations():org.apache.xerces.xs.StringList" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSNamespaceItem::getAnnotations():org.apache.xerces.xs.XSObjectList" />
		</instance>
		<instance>
			<role name="Creator" element="org.apache.xerces.xs.XSWildcard" />
			<role name="FactoryMethod()" element="org.apache.xerces.xs.XSWildcard::getNsConstraintList():org.apache.xerces.xs.StringList" />
		</instance>
	</pattern>
	<pattern name="Prototype" />
	<pattern name="Singleton">
		<instance>
			<role name="Singleton" element="org.apache.xerces.dom.ASDOMImplementationImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.dom.ASDOMImplementationImpl::singleton:org.apache.xerces.dom.ASDOMImplementationImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.dom.CoreDOMImplementationImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.dom.CoreDOMImplementationImpl::singleton:org.apache.xerces.dom.CoreDOMImplementationImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.dom.DeferredDOMImplementationImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.dom.DeferredDOMImplementationImpl::singleton:org.apache.xerces.dom.DeferredDOMImplementationImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.dom.DOMImplementationImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.dom.DOMImplementationImpl::singleton:org.apache.xerces.dom.DOMImplementationImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.dom.PSVIDOMImplementationImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.dom.PSVIDOMImplementationImpl::singleton:org.apache.xerces.dom.PSVIDOMImplementationImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations" />
			<role name="uniqueInstance" element="org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations::INSTANCE:org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.impl.xs.util.LSInputListImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.impl.xs.util.LSInputListImpl::EMPTY_LIST:org.apache.xerces.impl.xs.util.LSInputListImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.impl.xs.util.ObjectListImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.impl.xs.util.ObjectListImpl::EMPTY_LIST:org.apache.xerces.impl.xs.util.ObjectListImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.impl.xs.util.ShortListImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.impl.xs.util.ShortListImpl::EMPTY_LIST:org.apache.xerces.impl.xs.util.ShortListImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.impl.xs.util.StringListImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.impl.xs.util.StringListImpl::EMPTY_LIST:org.apache.xerces.impl.xs.util.StringListImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.impl.xs.util.XSNamedMapImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.impl.xs.util.XSNamedMapImpl::EMPTY_MAP:org.apache.xerces.impl.xs.util.XSNamedMapImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.impl.xs.util.XSObjectListImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.impl.xs.util.XSObjectListImpl::EMPTY_LIST:org.apache.xerces.impl.xs.util.XSObjectListImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.impl.xs.XSImplementationImpl" />
			<role name="uniqueInstance" element="org.apache.xerces.impl.xs.XSImplementationImpl::singleton:org.apache.xerces.impl.xs.XSImplementationImpl" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.jaxp.JAXPValidatorComponent$DraconianErrorHandler" />
			<role name="uniqueInstance" element="org.apache.xerces.jaxp.JAXPValidatorComponent$DraconianErrorHandler::ERROR_HANDLER_INSTANCE:org.apache.xerces.jaxp.JAXPValidatorComponent$DraconianErrorHandler" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.jaxp.validation.DraconianErrorHandler" />
			<role name="uniqueInstance" element="org.apache.xerces.jaxp.validation.DraconianErrorHandler::ERROR_HANDLER_INSTANCE:org.apache.xerces.jaxp.validation.DraconianErrorHandler" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.parsers.AbstractDOMParser$Abort" />
			<role name="uniqueInstance" element="org.apache.xerces.parsers.AbstractDOMParser$Abort::INSTANCE:org.apache.xerces.parsers.AbstractDOMParser$Abort" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.parsers.DOMParserImpl$NullLSParserFilter" />
			<role name="uniqueInstance" element="org.apache.xerces.parsers.DOMParserImpl$NullLSParserFilter::INSTANCE:org.apache.xerces.parsers.DOMParserImpl$NullLSParserFilter" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.stax.DefaultNamespaceContext" />
			<role name="uniqueInstance" element="org.apache.xerces.stax.DefaultNamespaceContext::DEFAULT_NAMESPACE_CONTEXT_INSTANCE:org.apache.xerces.stax.DefaultNamespaceContext" />
		</instance>
		<instance>
			<role name="Singleton" element="org.apache.xerces.stax.EmptyLocation" />
			<role name="uniqueInstance" element="org.apache.xerces.stax.EmptyLocation::EMPTY_LOCATION_INSTANCE:org.apache.xerces.stax.EmptyLocation" />
		</instance>
	</pattern>
	<pattern name="(Object)Adapter">
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11Configuration::fEntityManager:org.apache.xerces.impl.XMLEntityManager" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::cleanup():void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11DTDConfiguration::fEntityManager:org.apache.xerces.impl.XMLEntityManager" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::cleanup():void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::fEntityManager:org.apache.xerces.impl.XMLEntityManager" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::cleanup():void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::fEntityManager:org.apache.xerces.impl.XMLEntityManager" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::cleanup():void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.NonValidatingConfiguration" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="adaptee" element="org.apache.xerces.parsers.NonValidatingConfiguration::fEntityManager:org.apache.xerces.impl.XMLEntityManager" />
			<role name="Request()" element="org.apache.xerces.parsers.NonValidatingConfiguration::cleanup():void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.DTDConfiguration" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="adaptee" element="org.apache.xerces.parsers.DTDConfiguration::fEntityManager:org.apache.xerces.impl.XMLEntityManager" />
			<role name="Request()" element="org.apache.xerces.parsers.DTDConfiguration::cleanup():void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ValidationManager" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fValidationManager:org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$ResolutionForwarder" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::fResolutionForwarder:org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$ResolutionForwarder" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::fTypeInfoProvider:org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::getElementPSVI():org.apache.xerces.xs.ElementPSVI" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::getAttributePSVI(int):org.apache.xerces.xs.AttributePSVI" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::getAttributePSVIByName(java.lang.String, java.lang.String):org.apache.xerces.xs.AttributePSVI" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.dom.CoreDocumentImpl" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.DOMResultBuilder" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.DOMResultBuilder::fDocumentImpl:org.apache.xerces.dom.CoreDocumentImpl" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMResultBuilder::doctypeDecl(org.w3c.dom.DocumentType):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Adaptee" element="org.apache.xerces.impl.xs.models.CMNodeFactory" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::nodeFactory:org.apache.xerces.impl.xs.models.CMNodeFactory" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fValueStoreCache:org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::startValueScopeFor(org.apache.xerces.impl.xs.identity.IdentityConstraint, int):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::activateField(org.apache.xerces.impl.xs.identity.Field, int):org.apache.xerces.impl.xs.identity.XPathMatcher" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::endValueScopeFor(org.apache.xerces.impl.xs.identity.IdentityConstraint, int):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator$XPathMatcherStack" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fMatcherStack:org.apache.xerces.impl.xs.XMLSchemaValidator$XPathMatcherStack" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::activateField(org.apache.xerces.impl.xs.identity.Field, int):org.apache.xerces.impl.xs.identity.XPathMatcher" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fXSIErrorReporter:org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.XMLDTDHandler" />
			<role name="Adapter" element="org.apache.xerces.impl.XMLDTDScannerImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLDTDScannerImpl::fDTDHandler:org.apache.xerces.xni.XMLDTDHandler" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::setInputSource(org.apache.xerces.xni.parser.XMLInputSource):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanDTDInternalSubset(boolean, boolean, boolean):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::startEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::endEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.dtd.DTDGrammar" />
			<role name="Adaptee" element="org.apache.xerces.impl.dtd.XMLSimpleType" />
			<role name="adaptee" element="org.apache.xerces.impl.dtd.DTDGrammar::fSimpleType:org.apache.xerces.impl.dtd.XMLSimpleType" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.DTDGrammar::attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.dtd.DTDGrammar" />
			<role name="Adaptee" element="org.apache.xerces.impl.dtd.XMLAttributeDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.dtd.DTDGrammar::fAttributeDecl:org.apache.xerces.impl.dtd.XMLAttributeDecl" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.DTDGrammar::attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Adapter" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::startEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::endEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.XMLAttributesImpl" />
			<role name="Adapter" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::fAttributes:org.apache.xerces.util.XMLAttributesImpl" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$Dispatcher" />
			<role name="Adapter" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::fDispatcher:org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$Dispatcher" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanDocument(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Adapter" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11Configuration::fValidationManager:org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Adapter" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11DTDConfiguration::fValidationManager:org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Adapter" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::fValidationManager:org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::fValidationManager:org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.XMLVersionDetector" />
			<role name="Adapter" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11Configuration::fVersionDetector:org.apache.xerces.impl.XMLVersionDetector" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.XMLVersionDetector" />
			<role name="Adapter" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11DTDConfiguration::fVersionDetector:org.apache.xerces.impl.XMLVersionDetector" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.XMLVersionDetector" />
			<role name="Adapter" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::fVersionDetector:org.apache.xerces.impl.XMLVersionDetector" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.XMLVersionDetector" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::fVersionDetector:org.apache.xerces.impl.XMLVersionDetector" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.ParserConfigurationSettings" />
			<role name="Adapter" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="adaptee" element="org.apache.xerces.xinclude.XIncludeHandler::fSettings:org.apache.xerces.util.ParserConfigurationSettings" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::setFeature(java.lang.String, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.XMLErrorReporter" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::fErrorReporter:org.apache.xerces.impl.XMLErrorReporter" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::fSchemaValidator:org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Adapter" element="org.apache.xerces.parsers.BasicParserConfiguration" />
			<role name="adaptee" element="org.apache.xerces.parsers.BasicParserConfiguration::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.parsers.BasicParserConfiguration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::fEventHelper:org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::fStreamHelper:org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper$XMLStreamReaderLocation" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::fXMLStreamReaderLocation:org.apache.xerces.jaxp.validation.StAXValidatorHelper$XMLStreamReaderLocation" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityScanner" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLEntityManager::fEntityScanner:org.apache.xerces.impl.XMLEntityScanner" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager::setProperty(java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="Adaptee" element="org.apache.xerces.util.IntStack" />
			<role name="adaptee" element="org.apache.xerces.xinclude.XIncludeHandler::fBaseURIScope:org.apache.xerces.util.IntStack" />
			<role name="adaptee" element="org.apache.xerces.xinclude.XIncludeHandler::fLanguageScope:org.apache.xerces.util.IntStack" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="Adaptee" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11Configuration::fCurrentScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="Adaptee" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11DTDConfiguration::fCurrentScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration" />
			<role name="Adaptee" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="adaptee" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::fCurrentScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.NonValidatingConfiguration" />
			<role name="Adaptee" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="adaptee" element="org.apache.xerces.parsers.NonValidatingConfiguration::fScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.NonValidatingConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig" />
			<role name="Adaptee" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::fCurrentScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.parsers.DTDConfiguration" />
			<role name="Adaptee" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="adaptee" element="org.apache.xerces.parsers.DTDConfiguration::fScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.DTDConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XSDeclarationPool" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fDeclPool:org.apache.xerces.impl.xs.XSDeclarationPool" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XSGrammarBucket" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fGrammarBucket:org.apache.xerces.impl.xs.XSGrammarBucket" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::loadGrammar(org.apache.xerces.xni.parser.XMLInputSource):org.apache.xerces.xni.grammars.Grammar" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.traversers.XSDHandler" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fSchemaHandler:org.apache.xerces.impl.xs.traversers.XSDHandler" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::setFeature(java.lang.String, boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.SubstitutionGroupHandler" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fSubGroupHandler:org.apache.xerces.impl.xs.SubstitutionGroupHandler" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.models.CMBuilder" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fCMBuilder:org.apache.xerces.impl.xs.models.CMBuilder" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="Adaptee" element="org.apache.xerces.util.SecurityManager" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLEntityManager::fSecurityManager:org.apache.xerces.util.SecurityManager" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager::setProperty(java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager$ByteBufferPool" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLEntityManager::fSmallByteBufferPool:org.apache.xerces.impl.XMLEntityManager$ByteBufferPool" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLEntityManager::fLargeByteBufferPool:org.apache.xerces.impl.XMLEntityManager$ByteBufferPool" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager::setProperty(java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager$CharacterBufferPool" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLEntityManager::fCharacterBufferPool:org.apache.xerces.impl.XMLEntityManager$CharacterBufferPool" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager::setProperty(java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::fComponentManager:org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xml.serialize.Printer" />
			<role name="Adapter" element="org.apache.xml.serialize.BaseMarkupSerializer" />
			<role name="adaptee" element="org.apache.xml.serialize.BaseMarkupSerializer::_printer:org.apache.xml.serialize.Printer" />
			<role name="Request()" element="org.apache.xml.serialize.BaseMarkupSerializer::serialize(org.w3c.dom.Element):void" />
			<role name="Request()" element="org.apache.xml.serialize.BaseMarkupSerializer::serialize(org.w3c.dom.DocumentFragment):void" />
			<role name="Request()" element="org.apache.xml.serialize.BaseMarkupSerializer::serialize(org.w3c.dom.Document):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$ElementStack" />
			<role name="Adapter" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::fElementStack:org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$ElementStack" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Adapter" element="org.apache.xerces.parsers.BasicParserConfiguration" />
			<role name="adaptee" element="org.apache.xerces.parsers.BasicParserConfiguration::fLastComponent:org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Request()" element="org.apache.xerces.parsers.BasicParserConfiguration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::fComponentManager:org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::fComponentManager:org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper::fComponentManager:org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.SymbolHash" />
			<role name="Adapter" element="org.apache.xerces.impl.dv.xs.BaseDVFactory" />
			<role name="adaptee" element="org.apache.xerces.impl.dv.xs.BaseDVFactory::fBaseTypes:org.apache.xerces.util.SymbolHash" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.BaseDVFactory::getBuiltInType(java.lang.String):org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.BaseDVFactory::getBuiltInTypes():org.apache.xerces.util.SymbolHash" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XSDeclarationPool" />
			<role name="Adapter" element="org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory" />
			<role name="adaptee" element="org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory::fDeclPool:org.apache.xerces.impl.xs.XSDeclarationPool" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory::createTypeRestriction(java.lang.String, java.lang.String, short, org.apache.xerces.impl.dv.XSSimpleType, org.apache.xerces.xs.XSObjectList):org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory::createTypeList(java.lang.String, java.lang.String, short, org.apache.xerces.impl.dv.XSSimpleType, org.apache.xerces.xs.XSObjectList):org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory::createTypeUnion(java.lang.String, java.lang.String, short, org.apache.xerces.impl.dv.XSSimpleType[], org.apache.xerces.xs.XSObjectList):org.apache.xerces.impl.dv.XSSimpleType" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="Adapter" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="adaptee" element="org.apache.xerces.xinclude.XIncludeHandler::fChildConfig:org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::setProperty(java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.dv.xs.AbstractDateTimeDV" />
			<role name="Adapter" element="org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData" />
			<role name="adaptee" element="org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData::type:org.apache.xerces.impl.dv.xs.AbstractDateTimeDV" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData::getXMLGregorianCalendar():javax.xml.datatype.XMLGregorianCalendar" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData::getDuration():javax.xml.datatype.Duration" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StAXEventResultBuilder" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StAXEventResultBuilder::fStAXValidatorHelper:org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXEventResultBuilder::entityReference(javax.xml.stream.XMLStreamReader):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.DOMDocumentHandler" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::fDOMValidatorHandler:org.apache.xerces.jaxp.validation.DOMDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.StAXDocumentHandler" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::fStAXValidatorHandler:org.apache.xerces.jaxp.validation.StAXDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XSGrammarBucket" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool::fGrammarBucket:org.apache.xerces.impl.xs.XSGrammarBucket" />
			<role name="Request()" element="org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool::retrieveInitialGrammarSet(java.lang.String):org.apache.xerces.xni.grammars.Grammar[]" />
			<role name="Request()" element="org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool::retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription):org.apache.xerces.xni.grammars.Grammar" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.ParserConfigurationSettings" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fLoaderConfig:org.apache.xerces.util.ParserConfigurationSettings" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::getFeature(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::setFeature(java.lang.String, boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::getProperty(java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::setProperty(java.lang.String, java.lang.Object):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::setEntityResolver(org.apache.xerces.xni.parser.XMLEntityResolver):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper::fSchemaValidator:org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSTypeDefinition" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fCurrentType:org.apache.xerces.xs.XSTypeDefinition" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::characterData(java.lang.String, org.apache.xerces.xni.Augmentations):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.dtd.DTDGrammarBucket" />
			<role name="Adapter" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="adaptee" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fGrammarBucket:org.apache.xerces.impl.dtd.DTDGrammarBucket" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Adapter" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="adaptee" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValidationManager:org.apache.xerces.impl.validation.ValidationManager" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.dtd.XMLDTDDescription" />
			<role name="Adapter" element="org.apache.xerces.impl.dtd.DTDGrammar" />
			<role name="adaptee" element="org.apache.xerces.impl.dtd.DTDGrammar::fGrammarDescription:org.apache.xerces.impl.dtd.XMLDTDDescription" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.DTDGrammar::endDTD(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ValidationState" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fState4XsiType:org.apache.xerces.impl.validation.ValidationState" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fState4ApplyDefault:org.apache.xerces.impl.validation.ValidationState" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ValidationState" />
			<role name="Adapter" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="adaptee" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValidationState:org.apache.xerces.impl.validation.ValidationState" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.ConfigurableValidationState" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fValidationState:org.apache.xerces.impl.validation.ConfigurableValidationState" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="Adaptee" element="org.apache.xerces.xni.QName" />
			<role name="adaptee" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fRootElement:org.apache.xerces.xni.QName" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.XMLErrorCode" />
			<role name="Adapter" element="org.apache.xerces.util.DOMErrorHandlerWrapper" />
			<role name="adaptee" element="org.apache.xerces.util.DOMErrorHandlerWrapper::fErrorCode:org.apache.xerces.util.XMLErrorCode" />
			<role name="Request()" element="org.apache.xerces.util.DOMErrorHandlerWrapper::fatalError(java.lang.String, java.lang.String, org.apache.xerces.xni.parser.XMLParseException):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::fDOMNamespaceContext:org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.QName" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StAXStreamResultBuilder" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StAXStreamResultBuilder::fAttrName:org.apache.xerces.xni.QName" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXStreamResultBuilder::setStAXResult(javax.xml.transform.stax.StAXResult):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="Adaptee" element="org.apache.xerces.xinclude.XIncludeTextReader" />
			<role name="adaptee" element="org.apache.xerces.xinclude.XIncludeHandler::fXInclude10TextReader:org.apache.xerces.xinclude.XIncludeTextReader" />
			<role name="adaptee" element="org.apache.xerces.xinclude.XIncludeHandler::fXInclude11TextReader:org.apache.xerces.xinclude.XIncludeTextReader" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::setProperty(java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.dv.ValidatedInfo" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSElementDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSElementDecl::fDefault:org.apache.xerces.impl.dv.ValidatedInfo" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSElementDecl::getConstraintValue():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.identity.IdentityConstraint" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase::fIdentityConstraint:org.apache.xerces.impl.xs.identity.IdentityConstraint" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase::addValue(org.apache.xerces.impl.xs.identity.Field, boolean, java.lang.Object, short, org.apache.xerces.xs.ShortList):void" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.xpointer.XPointerHandler" />
			<role name="Adaptee" element="org.apache.xerces.xpointer.XPointerPart" />
			<role name="adaptee" element="org.apache.xerces.xpointer.XPointerHandler::fXPointerPart:org.apache.xerces.xpointer.XPointerPart" />
			<role name="Request()" element="org.apache.xerces.xpointer.XPointerHandler::resolveXPointer(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations, int):boolean" />
			<role name="Request()" element="org.apache.xerces.xpointer.XPointerHandler::isFragmentResolved():boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.SymbolHash" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSModelImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSModelImpl::fGrammarMap:org.apache.xerces.util.SymbolHash" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSModelImpl::fSubGroupMap:org.apache.xerces.util.SymbolHash" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelImpl::getTypeDefinition(java.lang.String, java.lang.String):org.apache.xerces.xs.XSTypeDefinition" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelImpl::getAttributeDeclaration(java.lang.String, java.lang.String):org.apache.xerces.xs.XSAttributeDeclaration" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelImpl::getElementDeclaration(java.lang.String, java.lang.String):org.apache.xerces.xs.XSElementDeclaration" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelImpl::getAttributeGroup(java.lang.String, java.lang.String):org.apache.xerces.xs.XSAttributeGroupDefinition" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelImpl::getModelGroupDefinition(java.lang.String, java.lang.String):org.apache.xerces.xs.XSModelGroupDefinition" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelImpl::getNotationDeclaration(java.lang.String, java.lang.String):org.apache.xerces.xs.XSNotationDeclaration" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelImpl::getSubstitutionGroup(org.apache.xerces.xs.XSElementDeclaration):org.apache.xerces.xs.XSObjectList" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.XMLEntityManager$ScannedEntity" />
			<role name="Adapter" element="org.apache.xerces.impl.XMLEntityScanner" />
			<role name="adaptee" element="org.apache.xerces.impl.XMLEntityScanner::fCurrentEntity:org.apache.xerces.impl.XMLEntityManager$ScannedEntity" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityScanner::getExpandedSystemId():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityScanner::getLiteralSystemId():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityScanner::getLineNumber():int" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityScanner::getColumnNumber():int" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityScanner::getCharacterOffset():int" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityScanner::getEncoding():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityScanner::getXMLVersion():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.QName" />
			<role name="Adapter" element="org.apache.xerces.impl.dtd.DTDGrammar" />
			<role name="adaptee" element="org.apache.xerces.impl.dtd.DTDGrammar::fQName:org.apache.xerces.xni.QName" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.DTDGrammar::elementDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.DTDGrammar::attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.dv.ValidatedInfo" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSAttributeDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSAttributeDecl::fDefault:org.apache.xerces.impl.dv.ValidatedInfo" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSAttributeDecl::getConstraintValue():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.dom.ElementImpl" />
			<role name="Adapter" element="org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy" />
			<role name="adaptee" element="org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy::fElement:org.apache.xerces.dom.ElementImpl" />
			<role name="Request()" element="org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy::addAttribute(org.apache.xerces.xni.QName, java.lang.String, java.lang.String):int" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.dv.ValidationContext" />
			<role name="Adapter" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::fEmptyContext:org.apache.xerces.impl.dv.ValidationContext" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::validate(java.lang.String, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::validate(java.lang.Object, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::validate(org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.util.SimpleLocator" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::fXMLLocator:org.apache.xerces.impl.xs.util.SimpleLocator" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.StAXLocationWrapper" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::fStAXLocationWrapper:org.apache.xerces.util.StAXLocationWrapper" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.AugmentationsImpl$AugmentationsItemsContainer" />
			<role name="Adapter" element="org.apache.xerces.util.AugmentationsImpl" />
			<role name="adaptee" element="org.apache.xerces.util.AugmentationsImpl::fAugmentationsContainer:org.apache.xerces.util.AugmentationsImpl$AugmentationsItemsContainer" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::putItem(java.lang.String, java.lang.Object):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::getItem(java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::removeItem(java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::keys():java.util.Enumeration" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::removeAllItems():void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.Augmentations" />
			<role name="Adapter" element="org.apache.xerces.parsers.AbstractSAXParser" />
			<role name="adaptee" element="org.apache.xerces.parsers.AbstractSAXParser::fAugmentations:org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser::getElementPSVI():org.apache.xerces.xs.ElementPSVI" />
		</instance>
		<instance>
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="Adaptee" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::loadGrammar(org.apache.xerces.xni.parser.XMLInputSource):org.apache.xerces.xni.grammars.Grammar" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.NamespaceSupport" />
			<role name="Adapter" element="org.apache.xml.serialize.XMLSerializer" />
			<role name="adaptee" element="org.apache.xml.serialize.XMLSerializer::fLocalNSBinder:org.apache.xerces.util.NamespaceSupport" />
			<role name="adaptee" element="org.apache.xml.serialize.XMLSerializer::fNSBinder:org.apache.xerces.util.NamespaceSupport" />
			<role name="Request()" element="org.apache.xml.serialize.XMLSerializer::serializeElement(org.w3c.dom.Element):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.parsers.DOMParser" />
			<role name="Adapter" element="dom.wrappers.Xerces" />
			<role name="adaptee" element="dom.wrappers.Xerces::parser:org.apache.xerces.parsers.DOMParser" />
			<role name="Request()" element="dom.wrappers.Xerces::parse(java.lang.String):org.w3c.dom.Document" />
			<role name="Request()" element="dom.wrappers.Xerces::setFeature(java.lang.String, boolean):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.util.XSGrammarPool" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSLoaderImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSLoaderImpl::fGrammarPool:org.apache.xerces.impl.xs.util.XSGrammarPool" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSLoaderImpl::loadURIList(org.apache.xerces.xs.StringList):org.apache.xerces.xs.XSModel" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSLoaderImpl::loadInputList(org.apache.xerces.xs.LSInputList):org.apache.xerces.xs.XSModel" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.XSAttributeGroupDecl" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSComplexTypeDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSComplexTypeDecl::fAttrGrp:org.apache.xerces.impl.xs.XSAttributeGroupDecl" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSComplexTypeDecl::getAttributeUses():org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSComplexTypeDecl::getAttributeWildcard():org.apache.xerces.xs.XSWildcard" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.xs.identity.Selector" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.identity.IdentityConstraint" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.identity.IdentityConstraint::fSelector:org.apache.xerces.impl.xs.identity.Selector" />
			<role name="Request()" element="org.apache.xerces.impl.xs.identity.IdentityConstraint::getSelectorStr():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.XMLStringBuffer" />
			<role name="Adapter" element="xni.parser.CSVConfiguration" />
			<role name="adaptee" element="xni.parser.CSVConfiguration::fStringBuffer:org.apache.xerces.util.XMLStringBuffer" />
			<role name="Request()" element="xni.parser.CSVConfiguration::parse(org.apache.xerces.xni.parser.XMLInputSource):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.dv.ValidatedInfo" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSAttributeUseImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSAttributeUseImpl::fDefault:org.apache.xerces.impl.dv.ValidatedInfo" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSAttributeUseImpl::getConstraintValue():java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSObjectList" />
			<role name="Adapter" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$XSFacetImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$XSFacetImpl::annotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$XSFacetImpl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xml.serialize.SerializerFactory" />
			<role name="Adapter" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper" />
			<role name="adaptee" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper::fSerializerFactory:org.apache.xml.serialize.SerializerFactory" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.dv.SchemaDVFactory" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fDefaultSchemaDVFactory:org.apache.xerces.impl.dv.SchemaDVFactory" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="Adapter" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::fNSContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::getURI(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="Adapter" element="org.apache.xerces.impl.validation.ValidationState" />
			<role name="adaptee" element="org.apache.xerces.impl.validation.ValidationState::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.impl.validation.ValidationState::getURI(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.impl.validation.EntityState" />
			<role name="Adapter" element="org.apache.xerces.impl.validation.ValidationState" />
			<role name="adaptee" element="org.apache.xerces.impl.validation.ValidationState::fEntityState:org.apache.xerces.impl.validation.EntityState" />
			<role name="Request()" element="org.apache.xerces.impl.validation.ValidationState::isEntityDeclared(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.validation.ValidationState::isEntityUnparsed(java.lang.String):boolean" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.SymbolTable" />
			<role name="Adapter" element="org.apache.xerces.util.JAXPNamespaceContextWrapper" />
			<role name="adaptee" element="org.apache.xerces.util.JAXPNamespaceContextWrapper::fSymbolTable:org.apache.xerces.util.SymbolTable" />
			<role name="Request()" element="org.apache.xerces.util.JAXPNamespaceContextWrapper::getURI(java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.JAXPNamespaceContextWrapper::getPrefix(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.SymbolTable" />
			<role name="Adapter" element="org.apache.xml.serialize.XMLSerializer" />
			<role name="adaptee" element="org.apache.xml.serialize.XMLSerializer::fSymbolTable:org.apache.xerces.util.SymbolTable" />
			<role name="Request()" element="org.apache.xml.serialize.XMLSerializer::serializeElement(org.w3c.dom.Element):void" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSObjectList" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSAttributeGroupDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSAttributeGroupDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSAttributeGroupDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSObjectList" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSModelGroupImpl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSModelGroupImpl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelGroupImpl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.util.SymbolTable" />
			<role name="Adapter" element="org.apache.xerces.impl.validation.ValidationState" />
			<role name="adaptee" element="org.apache.xerces.impl.validation.ValidationState::fSymbolTable:org.apache.xerces.util.SymbolTable" />
			<role name="Request()" element="org.apache.xerces.impl.validation.ValidationState::getSymbol(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSObjectList" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSAttributeDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSAttributeDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSAttributeDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSObjectList" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSElementDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSElementDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSElementDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSObjectList" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSGroupDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSGroupDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSGroupDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSObjectList" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSNotationDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSNotationDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSNotationDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Adaptee" element="org.apache.xerces.xs.XSObjectList" />
			<role name="Adapter" element="org.apache.xerces.impl.xs.XSWildcardDecl" />
			<role name="adaptee" element="org.apache.xerces.impl.xs.XSWildcardDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSWildcardDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
	</pattern>
	<pattern name="Command" />
	<pattern name="Composite" />
	<pattern name="Decorator">
		<instance>
			<role name="Component" element="org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Decorator" element="org.apache.xerces.impl.dtd.models.CMBinOp" />
			<role name="component" element="org.apache.xerces.impl.dtd.models.CMBinOp::fLeftChild:org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="component" element="org.apache.xerces.impl.dtd.models.CMBinOp::fRightChild:org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Operation()" element="org.apache.xerces.impl.dtd.models.CMBinOp::isNullable():boolean" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Decorator" element="org.apache.xerces.impl.dtd.models.CMUniOp" />
			<role name="component" element="org.apache.xerces.impl.dtd.models.CMUniOp::fChild:org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Operation()" element="org.apache.xerces.impl.dtd.models.CMUniOp::isNullable():boolean" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Decorator" element="org.apache.xerces.impl.xs.models.XSCMBinOp" />
			<role name="component" element="org.apache.xerces.impl.xs.models.XSCMBinOp::fLeftChild:org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="component" element="org.apache.xerces.impl.xs.models.XSCMBinOp::fRightChild:org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Operation()" element="org.apache.xerces.impl.xs.models.XSCMBinOp::isNullable():boolean" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Decorator" element="org.apache.xerces.impl.xs.models.XSCMUniOp" />
			<role name="component" element="org.apache.xerces.impl.xs.models.XSCMUniOp::fChild:org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Operation()" element="org.apache.xerces.impl.xs.models.XSCMUniOp::isNullable():boolean" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.xni.parser.XMLComponentManager" />
			<role name="Decorator" element="org.apache.xerces.jaxp.SchemaValidatorConfiguration" />
			<role name="component" element="org.apache.xerces.jaxp.SchemaValidatorConfiguration::fParentComponentManager:org.apache.xerces.xni.parser.XMLComponentManager" />
			<role name="Operation()" element="org.apache.xerces.jaxp.SchemaValidatorConfiguration::getFeature(java.lang.String):boolean" />
			<role name="Operation()" element="org.apache.xerces.jaxp.SchemaValidatorConfiguration::getProperty(java.lang.String):java.lang.Object" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="Decorator" element="org.apache.xerces.impl.dv.dtd.ListDatatypeValidator" />
			<role name="component" element="org.apache.xerces.impl.dv.dtd.ListDatatypeValidator::fItemValidator:org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.dtd.ListDatatypeValidator::validate(java.lang.String, org.apache.xerces.impl.dv.ValidationContext):void" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.impl.dv.ValidationContext" />
			<role name="Decorator" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl" />
			<role name="component" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::fExternal:org.apache.xerces.impl.dv.ValidationContext" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::needFacetChecking():boolean" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::needExtraChecking():boolean" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::needToNormalize():boolean" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::isEntityDeclared(java.lang.String):boolean" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::isEntityUnparsed(java.lang.String):boolean" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::isIdDeclared(java.lang.String):boolean" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::addId(java.lang.String):void" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::addIdRef(java.lang.String):void" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::getSymbol(java.lang.String):java.lang.String" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::getURI(java.lang.String):java.lang.String" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::getLocale():java.util.Locale" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.xni.XMLLocator" />
			<role name="Decorator" element="org.apache.xerces.util.XMLLocatorWrapper" />
			<role name="component" element="org.apache.xerces.util.XMLLocatorWrapper::fLocator:org.apache.xerces.xni.XMLLocator" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getPublicId():java.lang.String" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getLiteralSystemId():java.lang.String" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getBaseSystemId():java.lang.String" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getExpandedSystemId():java.lang.String" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getLineNumber():int" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getColumnNumber():int" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getCharacterOffset():int" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getEncoding():java.lang.String" />
			<role name="Operation()" element="org.apache.xerces.util.XMLLocatorWrapper::getXMLVersion():java.lang.String" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Decorator" element="xni.PassThroughFilter" />
			<role name="component" element="xni.PassThroughFilter::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Operation()" element="xni.PassThroughFilter::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::xmlDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::startGeneralEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::endGeneralEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::characters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::ignorableWhitespace(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::startCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::endCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Operation()" element="xni.PassThroughFilter::endDocument(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Decorator" element="org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool" />
			<role name="component" element="org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool::core:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Operation()" element="org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool::retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription):org.apache.xerces.xni.grammars.Grammar" />
			<role name="Operation()" element="org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool::retrieveInitialGrammarSet(java.lang.String):org.apache.xerces.xni.grammars.Grammar[]" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Decorator" element="org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper" />
			<role name="component" element="org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Operation()" element="org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper::retrieveInitialGrammarSet(java.lang.String):org.apache.xerces.xni.grammars.Grammar[]" />
			<role name="Operation()" element="org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper::cacheGrammars(java.lang.String, org.apache.xerces.xni.grammars.Grammar[]):void" />
			<role name="Operation()" element="org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper::retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription):org.apache.xerces.xni.grammars.Grammar" />
			<role name="Operation()" element="org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper::lockPool():void" />
			<role name="Operation()" element="org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper::unlockPool():void" />
			<role name="Operation()" element="org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper::clear():void" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Decorator" element="org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool" />
			<role name="component" element="org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool::retrieveInitialGrammarSet(java.lang.String):org.apache.xerces.xni.grammars.Grammar[]" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool::retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription):org.apache.xerces.xni.grammars.Grammar" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool::cacheGrammars(java.lang.String, org.apache.xerces.xni.grammars.Grammar[]):void" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Decorator" element="org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool" />
			<role name="component" element="org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool::retrieveInitialGrammarSet(java.lang.String):org.apache.xerces.xni.grammars.Grammar[]" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool::retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription):org.apache.xerces.xni.grammars.Grammar" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool::cacheGrammars(java.lang.String, org.apache.xerces.xni.grammars.Grammar[]):void" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool::lockPool():void" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool::clear():void" />
			<role name="Operation()" element="org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool::unlockPool():void" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Decorator" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate" />
			<role name="component" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::type:org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::applyFacets(org.apache.xerces.impl.dv.XSFacets, short, short, org.apache.xerces.impl.dv.ValidationContext):void" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::getPrimitiveKind():short" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::getWhitespace():short" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::isEqual(java.lang.Object, java.lang.Object):boolean" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::isIDType():boolean" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::validate(org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):void" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::validate(java.lang.String, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):java.lang.Object" />
			<role name="Operation()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate::validate(java.lang.Object, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):java.lang.Object" />
		</instance>
		<instance>
			<role name="Component" element="org.apache.xerces.xni.parser.XMLEntityResolver" />
			<role name="Decorator" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="component" element="org.apache.xerces.impl.XMLEntityManager::fEntityResolver:org.apache.xerces.xni.parser.XMLEntityResolver" />
			<role name="Operation()" element="org.apache.xerces.impl.XMLEntityManager::resolveEntity(org.apache.xerces.xni.XMLResourceIdentifier):org.apache.xerces.xni.parser.XMLInputSource" />
		</instance>
	</pattern>
	<pattern name="Observer" />
	<pattern name="State">
		<instance>
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fDocumentSource:org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::handleStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):boolean" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Context" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fDocumentSource:org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::handleStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):org.apache.xerces.xni.Augmentations" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="State" element="org.apache.xerces.impl.XMLEntityHandler" />
			<role name="state" element="org.apache.xerces.impl.XMLEntityManager::fEntityHandler:org.apache.xerces.impl.XMLEntityHandler" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager::startEntity(java.lang.String, boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager::startEntity(java.lang.String, org.apache.xerces.xni.parser.XMLInputSource, boolean, boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager::endEntity():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDProcessor" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDHandler" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::fDTDHandler:org.apache.xerces.xni.XMLDTDHandler" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::startExternalSubset(org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::endExternalSubset(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::startDTD(org.apache.xerces.xni.XMLLocator, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::ignoredCharacters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::startParameterEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::endParameterEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::elementDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::startAttlist(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::endAttlist(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::internalEntityDecl(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::externalEntityDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::unparsedEntityDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::notationDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::startConditional(short, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::endConditional(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::endDTD(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDHandler" />
			<role name="state" element="org.apache.xerces.xinclude.XIncludeHandler::fDTDHandler:org.apache.xerces.xni.XMLDTDHandler" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::elementDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endAttlist(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endConditional(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endDTD(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endExternalSubset(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endParameterEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::externalEntityDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::ignoredCharacters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::internalEntityDecl(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::notationDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startAttlist(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startConditional(short, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startDTD(org.apache.xerces.xni.XMLLocator, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startExternalSubset(org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startParameterEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::unparsedEntityDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::checkAndSendUnparsedEntity(org.apache.xerces.xinclude.XIncludeHandler$UnparsedEntity):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::checkAndSendNotation(org.apache.xerces.xinclude.XIncludeHandler$Notation):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLDTDScannerImpl" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDHandler" />
			<role name="state" element="org.apache.xerces.impl.XMLDTDScannerImpl::fDTDHandler:org.apache.xerces.xni.XMLDTDHandler" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::setInputSource(org.apache.xerces.xni.parser.XMLInputSource):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanDTDInternalSubset(boolean, boolean, boolean):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::startEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::endEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanTextDecl():boolean" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanPIData(java.lang.String, org.apache.xerces.xni.XMLString):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanComment():void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanElementDecl():void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanAttlistDecl():void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanEntityDecl():void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanNotationDecl():void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanConditionalSect(int):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanDecls(boolean):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLNamespaceBinder" />
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="state" element="org.apache.xerces.impl.XMLNamespaceBinder::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::startGeneralEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::xmlDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::characters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::ignorableWhitespace(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::startCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::endCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::endDocument(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::endGeneralEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::handleStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations, boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::handleEndElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::xmlDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::characters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::ignorableWhitespace(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::startCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::endCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::endDocument(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::startGeneralEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::endGeneralEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::handleStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::endNamespaceScope(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="state" element="org.apache.xerces.xinclude.XIncludeHandler::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::xmlDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startGeneralEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endGeneralEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::characters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::ignorableWhitespace(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::endDocument(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::xmlDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::characters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::ignorableWhitespace(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::startCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::endCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::endDocument(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::startGeneralEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::endGeneralEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::handleStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::processElementContent(org.apache.xerces.xni.QName):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl" />
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="state" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::startEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::endEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanXMLDeclOrTextDecl(boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanPIData(java.lang.String, org.apache.xerces.xni.XMLString):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanComment():void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanStartElement():boolean" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanStartElementAfterName():boolean" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanContent():int" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanCDATASection(boolean):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanEndElement():int" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanCharReference():void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::handleCharacter(char, java.lang.String):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::handleEndElement(org.apache.xerces.xni.QName, boolean):int" />
		</instance>
		<instance>
			<role name="Context" element="xni.PSVIWriter" />
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="state" element="xni.PSVIWriter::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="xni.PSVIWriter::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="xni.PSVIWriter::endDocument(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="xni.PSVIWriter::sendEmptyElementEvent(java.lang.String, java.util.Vector):void" />
			<role name="Request()" element="xni.PSVIWriter::sendStartElementEvent(java.lang.String, java.util.Vector):void" />
			<role name="Request()" element="xni.PSVIWriter::sendEndElementEvent(java.lang.String):void" />
			<role name="Request()" element="xni.PSVIWriter::sendElementEvent(java.lang.String, java.util.Vector, org.apache.xerces.xni.XMLString):void" />
			<role name="Request()" element="xni.PSVIWriter::sendIndent():void" />
			<role name="Request()" element="xni.PSVIWriter::sendNewLine():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="state" element="org.apache.xerces.xinclude.XIncludeHandler::fChildConfig:org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="state" element="org.apache.xerces.xinclude.XIncludeHandler::fXIncludeChildConfig:org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="state" element="org.apache.xerces.xinclude.XIncludeHandler::fXPointerChildConfig:org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::setProperty(java.lang.String, java.lang.Object):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::handleIncludeElement(org.apache.xerces.xni.XMLAttributes):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.UnparsedEntityHandler" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDHandler" />
			<role name="state" element="org.apache.xerces.jaxp.UnparsedEntityHandler::fDTDHandler:org.apache.xerces.xni.XMLDTDHandler" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::startDTD(org.apache.xerces.xni.XMLLocator, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::startParameterEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::endParameterEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::startExternalSubset(org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::endExternalSubset(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::elementDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::startAttlist(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::endAttlist(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::internalEntityDecl(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::externalEntityDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::unparsedEntityDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::notationDecl(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::startConditional(short, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::ignoredCharacters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::endConditional(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.UnparsedEntityHandler::endDTD(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Context" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl" />
			<role name="state" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::side:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="state" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::next:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::characters(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::comment(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::endCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::endDocument(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::endGeneralEntity(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::ignorableWhitespace(org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::processingInstruction(java.lang.String, org.apache.xerces.xni.XMLString, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::startCDATA(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::startGeneralEntity(java.lang.String, org.apache.xerces.xni.XMLResourceIdentifier, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::textDecl(java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl::xmlDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.JAXPValidatorComponent" />
			<role name="State" element="org.apache.xerces.xni.XMLAttributes" />
			<role name="state" element="org.apache.xerces.jaxp.JAXPValidatorComponent::fCurrentAttributes:org.apache.xerces.xni.XMLAttributes" />
			<role name="Request()" element="org.apache.xerces.jaxp.JAXPValidatorComponent::updateAttributes(org.xml.sax.Attributes):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDProcessor" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDContentModelHandler" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::fDTDContentModelHandler:org.apache.xerces.xni.XMLDTDContentModelHandler" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::startContentModel(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::any(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::empty(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::startGroup(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::pcdata(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::element(java.lang.String, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::separator(short, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::occurrence(short, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::endGroup(org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::endContentModel(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLDTDScannerImpl" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDContentModelHandler" />
			<role name="state" element="org.apache.xerces.impl.XMLDTDScannerImpl::fDTDContentModelHandler:org.apache.xerces.xni.XMLDTDContentModelHandler" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanElementDecl():void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanMixed(java.lang.String):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDTDScannerImpl::scanChildren(java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl" />
			<role name="State" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$Dispatcher" />
			<role name="state" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::fDispatcher:org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$Dispatcher" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanDocument(boolean):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="state" element="org.apache.xerces.parsers.XML11Configuration::fLastComponent:org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::configureXML11Pipeline():void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::configurePipeline():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="state" element="org.apache.xerces.parsers.XML11DTDConfiguration::fLastComponent:org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="state" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::fLastComponent:org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="state" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::config:org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::setFeature(java.lang.String, boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::getFeature(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::setProperty(java.lang.String, java.lang.Object):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::getProperty(java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::setEntityResolver(org.apache.xerces.xni.parser.XMLEntityResolver):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::parse(org.apache.xerces.xni.parser.XMLInputSource):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="State" element="org.apache.xerces.xni.XMLLocator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fDocLocation:org.apache.xerces.xni.XMLLocator" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="State" element="org.apache.xerces.xni.XMLLocator" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fLocator:org.apache.xerces.xni.XMLLocator" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::findSchemaGrammar(short, java.lang.String, org.apache.xerces.xni.QName, org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes):org.apache.xerces.impl.xs.SchemaGrammar" />
		</instance>
		<instance>
			<role name="Context" element="xni.PSVIWriter" />
			<role name="State" element="org.apache.xerces.xni.XMLLocator" />
			<role name="state" element="xni.PSVIWriter::fDocumentLocation:org.apache.xerces.xni.XMLLocator" />
			<role name="Request()" element="xni.PSVIWriter::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="xni.PSVIWriter::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="xni.PSVIWriter::endDocument(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.xni.parser.XMLEntityResolver" />
			<role name="Context" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="state" element="org.apache.xerces.xinclude.XIncludeHandler::fEntityResolver:org.apache.xerces.xni.parser.XMLEntityResolver" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::handleIncludeElement(org.apache.xerces.xni.XMLAttributes):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.validation.StAXEventResultBuilder$AttributeIterator" />
			<role name="State" element="org.apache.xerces.xni.XMLAttributes" />
			<role name="state" element="org.apache.xerces.jaxp.validation.StAXEventResultBuilder$AttributeIterator::fAttributes:org.apache.xerces.xni.XMLAttributes" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXEventResultBuilder$AttributeIterator::next():java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider" />
			<role name="State" element="org.apache.xerces.xni.XMLAttributes" />
			<role name="state" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::fAttributes:org.apache.xerces.xni.XMLAttributes" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::getAttributeType(int):org.w3c.dom.TypeInfo" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::getAttributeTypeInfo(java.lang.String, java.lang.String):org.w3c.dom.TypeInfo" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::getAttributeTypeInfo(java.lang.String):org.w3c.dom.TypeInfo" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::isSpecified(int):boolean" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::getAttributePSVI(int):org.apache.xerces.xs.AttributePSVI" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::getAttributePSVIByName(java.lang.String, java.lang.String):org.apache.xerces.xs.AttributePSVI" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy" />
			<role name="State" element="org.apache.xerces.xni.XMLAttributes" />
			<role name="state" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::fAttributes:org.apache.xerces.xni.XMLAttributes" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getLength():int" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getName(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getQName(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getURI(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getLocalName(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getType(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getType(java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getType(java.lang.String, java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getValue(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getValue(java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getValue(java.lang.String, java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getIndex(java.lang.String):int" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::getIndex(java.lang.String, java.lang.String):int" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::isDeclared(int):boolean" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::isDeclared(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::isDeclared(java.lang.String, java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::isSpecified(int):boolean" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::isSpecified(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy::isSpecified(java.lang.String, java.lang.String):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.util.AttributesProxy" />
			<role name="State" element="org.apache.xerces.xni.XMLAttributes" />
			<role name="state" element="org.apache.xerces.util.AttributesProxy::fAttributes:org.apache.xerces.xni.XMLAttributes" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getLength():int" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getQName(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getURI(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getLocalName(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getType(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getType(java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getType(java.lang.String, java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getValue(int):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getValue(java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getValue(java.lang.String, java.lang.String):java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getIndex(java.lang.String):int" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getIndex(java.lang.String, java.lang.String):int" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::isDeclared(int):boolean" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::isDeclared(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::isDeclared(java.lang.String, java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::isSpecified(int):boolean" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::isSpecified(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::isSpecified(java.lang.String, java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.util.AttributesProxy::getName(int):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="state" element="org.apache.xerces.parsers.XML11Configuration::fCurrentScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="state" element="org.apache.xerces.parsers.XML11DTDConfiguration::fCurrentScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="state" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::fCurrentScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.NonValidatingConfiguration" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="state" element="org.apache.xerces.parsers.NonValidatingConfiguration::fScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.NonValidatingConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="state" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::fCurrentScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaParsingConfig::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.DTDConfiguration" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="state" element="org.apache.xerces.parsers.DTDConfiguration::fScanner:org.apache.xerces.xni.parser.XMLDocumentScanner" />
			<role name="Request()" element="org.apache.xerces.parsers.DTDConfiguration::parse(boolean):boolean" />
		</instance>
		<instance>
			<role name="Context" element="simpletype.DatatypeInterfaceUsage" />
			<role name="State" element="org.apache.xerces.xs.PSVIProvider" />
			<role name="state" element="simpletype.DatatypeInterfaceUsage::provider:org.apache.xerces.xs.PSVIProvider" />
			<role name="Request()" element="simpletype.DatatypeInterfaceUsage::endElement(java.lang.String, java.lang.String, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy" />
			<role name="State" element="org.apache.xerces.xni.XMLLocator" />
			<role name="state" element="org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy::fLocator:org.apache.xerces.xni.XMLLocator" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy::getPublicId():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy::getSystemId():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy::getLineNumber():int" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy::getColumnNumber():int" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy::getXMLVersion():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractSAXParser$LocatorProxy::getEncoding():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.util.LocatorProxy" />
			<role name="State" element="org.apache.xerces.xni.XMLLocator" />
			<role name="state" element="org.apache.xerces.util.LocatorProxy::fLocator:org.apache.xerces.xni.XMLLocator" />
			<role name="Request()" element="org.apache.xerces.util.LocatorProxy::getPublicId():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.LocatorProxy::getSystemId():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.LocatorProxy::getLineNumber():int" />
			<role name="Request()" element="org.apache.xerces.util.LocatorProxy::getColumnNumber():int" />
			<role name="Request()" element="org.apache.xerces.util.LocatorProxy::getXMLVersion():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.util.LocatorProxy::getEncoding():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="State" element="org.apache.xerces.xni.XMLResourceIdentifier" />
			<role name="state" element="org.apache.xerces.xinclude.XIncludeHandler::fCurrentBaseURI:org.apache.xerces.xni.XMLResourceIdentifier" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::handleIncludeElement(org.apache.xerces.xni.XMLAttributes):boolean" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::sameBaseURIAsIncludeParent():boolean" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::setupCurrentBaseURI(org.apache.xerces.xni.XMLLocator):void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::searchForRecursiveIncludes(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::processAttributes(org.apache.xerces.xni.XMLAttributes):org.apache.xerces.xni.XMLAttributes" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::getRelativeBaseURI():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::saveBaseURI():void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::restoreBaseURI():void" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::processXMLBaseAttributes(org.apache.xerces.xni.XMLAttributes):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.impl.RevalidationHandler" />
			<role name="Context" element="org.apache.xerces.dom.DOMNormalizer" />
			<role name="state" element="org.apache.xerces.dom.DOMNormalizer::fValidationHandler:org.apache.xerces.impl.RevalidationHandler" />
			<role name="Request()" element="org.apache.xerces.dom.DOMNormalizer::normalizeNode(org.w3c.dom.Node):org.w3c.dom.Node" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl" />
			<role name="State" element="org.apache.xerces.impl.dv.xs.TypeValidator" />
			<role name="state" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::fDVs:org.apache.xerces.impl.dv.xs.TypeValidator[]" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::applyFacets(org.apache.xerces.impl.dv.XSFacets, short, short, short, org.apache.xerces.impl.dv.ValidationContext):void" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::getActualValue(java.lang.Object, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo, boolean):java.lang.Object" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Context" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="state" element="org.apache.xerces.parsers.XML11Configuration::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::configureXML11Pipeline():void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::configurePipeline():void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Context" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="state" element="org.apache.xerces.parsers.XML11DTDConfiguration::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::configureXML11Pipeline():void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::configurePipeline():void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Context" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration" />
			<role name="state" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::configureXML11Pipeline():void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11NonValidatingConfiguration::configurePipeline():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLNamespaceBinder" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.impl.XMLNamespaceBinder::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::handleStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations, boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.XMLNamespaceBinder::handleEndElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLDocumentScannerImpl" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.impl.XMLDocumentScannerImpl::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentScannerImpl::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Context" element="xni.PSVIWriter" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="xni.PSVIWriter::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="xni.PSVIWriter::fPSVINamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="xni.PSVIWriter::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="xni.PSVIWriter::processInScopeNamespaces():void" />
			<role name="Request()" element="xni.PSVIWriter::createQName(java.lang.String):org.apache.xerces.xni.QName" />
			<role name="Request()" element="xni.PSVIWriter::createID(org.apache.xerces.xs.XSObject):java.lang.String" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.impl.dv.SchemaDVFactory" />
			<role name="Context" element="simpletype.SimpleTypeUsage" />
			<role name="state" element="simpletype.SimpleTypeUsage::factory:org.apache.xerces.impl.dv.SchemaDVFactory" />
			<role name="Request()" element="simpletype.SimpleTypeUsage::main(java.lang.String[]):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.dom.DOMNormalizer" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.dom.DOMNormalizer::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.dom.DOMNormalizer::fLocalNSBinder:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.dom.DOMNormalizer::normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl, org.apache.xerces.dom.DOMConfigurationImpl):void" />
			<role name="Request()" element="org.apache.xerces.dom.DOMNormalizer::normalizeNode(org.w3c.dom.Node):org.w3c.dom.Node" />
			<role name="Request()" element="org.apache.xerces.dom.DOMNormalizer::namespaceFixUp(org.apache.xerces.dom.ElementImpl, org.apache.xerces.dom.AttributeMap):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::startPrefixMapping(java.lang.String, java.lang.String):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl::endElement(java.lang.String, java.lang.String, java.lang.String):void" />
		</instance>
		<instance>
			<role name="Context" element="xni.DocumentTracer" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="xni.DocumentTracer::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="xni.DocumentTracer::printInScopeNamespaces():void" />
			<role name="Request()" element="xni.DocumentTracer::printEndNamespaceMapping():void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.jaxp.validation.DOMDocumentHandler" />
			<role name="Context" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper" />
			<role name="state" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::fDOMValidatorHandler:org.apache.xerces.jaxp.validation.DOMDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.DOMValidatorHelper::beginNode(org.w3c.dom.Node):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.jaxp.validation.StAXDocumentHandler" />
			<role name="Context" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper" />
			<role name="state" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::fStAXValidatorHandler:org.apache.xerces.jaxp.validation.StAXDocumentHandler" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StAXValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.traversers.XSDHandler" />
			<role name="State" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="state" element="org.apache.xerces.impl.xs.traversers.XSDHandler::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Request()" element="org.apache.xerces.impl.xs.traversers.XSDHandler::findGrammar(org.apache.xerces.impl.xs.XSDDescription, boolean):org.apache.xerces.impl.xs.SchemaGrammar" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.xinclude.XIncludeHandler" />
			<role name="State" element="org.apache.xerces.xpointer.XPointerProcessor" />
			<role name="state" element="org.apache.xerces.xinclude.XIncludeHandler::fXPtrProcessor:org.apache.xerces.xpointer.XPointerProcessor" />
			<role name="Request()" element="org.apache.xerces.xinclude.XIncludeHandler::handleIncludeElement(org.apache.xerces.xni.XMLAttributes):boolean" />
		</instance>
		<instance>
			<role name="Context" element="dom.DOMAddLines" />
			<role name="State" element="org.apache.xerces.xni.XMLLocator" />
			<role name="state" element="dom.DOMAddLines::locator:org.apache.xerces.xni.XMLLocator" />
			<role name="Request()" element="dom.DOMAddLines::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="dom.DOMAddLines::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser" />
			<role name="State" element="org.apache.xerces.xni.XMLLocator" />
			<role name="state" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::fLocator:org.apache.xerces.xni.XMLLocator" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.opti.SchemaDOMParser::emptyElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.AbstractDOMParser" />
			<role name="State" element="org.apache.xerces.xni.XMLLocator" />
			<role name="state" element="org.apache.xerces.parsers.AbstractDOMParser::fLocator:org.apache.xerces.xni.XMLLocator" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractDOMParser::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.parsers.AbstractDOMParser::endDocument(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDHandler" />
			<role name="state" element="org.apache.xerces.parsers.XML11Configuration::fDTDHandler:org.apache.xerces.xni.XMLDTDHandler" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::configureXML11Pipeline():void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::configurePipeline():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDHandler" />
			<role name="state" element="org.apache.xerces.parsers.XML11DTDConfiguration::fDTDHandler:org.apache.xerces.xni.XMLDTDHandler" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::configureXML11Pipeline():void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::configurePipeline():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="State" element="org.apache.xerces.xs.XSTypeDefinition" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fCurrentType:org.apache.xerces.xs.XSTypeDefinition" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fTypeStack:org.apache.xerces.xs.XSTypeDefinition[]" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fRootTypeDefinition:org.apache.xerces.xs.XSTypeDefinition" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::characterData(java.lang.String, org.apache.xerces.xni.Augmentations):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::handleCharacters(org.apache.xerces.xni.XMLString):org.apache.xerces.xni.XMLString" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::handleStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::getAndCheckXsiType(org.apache.xerces.xni.QName, java.lang.String, org.apache.xerces.xni.XMLAttributes):org.apache.xerces.xs.XSTypeDefinition" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::processAttributes(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.impl.xs.XSAttributeGroupDecl):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::processElementContent(org.apache.xerces.xni.QName):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::elementLocallyValidType(org.apache.xerces.xni.QName, java.lang.Object):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.models.DFAContentModel" />
			<role name="State" element="org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="state" element="org.apache.xerces.impl.dtd.models.DFAContentModel::fHeadNode:org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.models.DFAContentModel::buildDFA(org.apache.xerces.impl.dtd.models.CMNode):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="State" element="org.apache.xerces.xni.Augmentations" />
			<role name="state" element="org.apache.xerces.impl.XMLEntityManager::fEntityAugs:org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager::startEntity(java.lang.String, boolean):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl" />
			<role name="State" element="org.apache.xerces.xni.Augmentations" />
			<role name="state" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::fTempAugmentations:org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.impl.XMLDocumentFragmentScannerImpl::scanCharReference():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11Configuration" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDContentModelHandler" />
			<role name="state" element="org.apache.xerces.parsers.XML11Configuration::fDTDContentModelHandler:org.apache.xerces.xni.XMLDTDContentModelHandler" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::configureXML11Pipeline():void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11Configuration::configurePipeline():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.parsers.XML11DTDConfiguration" />
			<role name="State" element="org.apache.xerces.xni.XMLDTDContentModelHandler" />
			<role name="state" element="org.apache.xerces.parsers.XML11DTDConfiguration::fDTDContentModelHandler:org.apache.xerces.xni.XMLDTDContentModelHandler" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::configureXML11Pipeline():void" />
			<role name="Request()" element="org.apache.xerces.parsers.XML11DTDConfiguration::configurePipeline():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser" />
			<role name="State" element="org.apache.xerces.xs.XSTypeDefinition" />
			<role name="state" element="org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser::fBaseType:org.apache.xerces.xs.XSTypeDefinition" />
			<role name="Request()" element="org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser::traverseSimpleContent(org.w3c.dom.Element, org.apache.xerces.impl.xs.traversers.XSDocumentInfo, org.apache.xerces.impl.xs.SchemaGrammar):void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Context" element="org.apache.xerces.impl.xs.traversers.XSAttributeChecker" />
			<role name="state" element="org.apache.xerces.impl.xs.traversers.XSAttributeChecker::fExtraDVs:org.apache.xerces.impl.dv.XSSimpleType[]" />
			<role name="Request()" element="org.apache.xerces.impl.xs.traversers.XSAttributeChecker::checkAttributes(org.w3c.dom.Element, boolean, org.apache.xerces.impl.xs.traversers.XSDocumentInfo, boolean):java.lang.Object[]" />
			<role name="Request()" element="org.apache.xerces.impl.xs.traversers.XSAttributeChecker::validate(java.lang.Object[], java.lang.String, java.lang.String, int, org.apache.xerces.impl.xs.traversers.XSDocumentInfo):java.lang.Object" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Context" element="org.apache.xerces.impl.xs.XSConstraints" />
			<role name="state" element="org.apache.xerces.impl.xs.XSConstraints::STRING_TYPE:org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSConstraints::ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition, java.lang.String, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.xpointer.XPointerHandler" />
			<role name="State" element="org.apache.xerces.xpointer.XPointerPart" />
			<role name="state" element="org.apache.xerces.xpointer.XPointerHandler::fXPointerPart:org.apache.xerces.xpointer.XPointerPart" />
			<role name="Request()" element="org.apache.xerces.xpointer.XPointerHandler::resolveXPointer(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations, int):boolean" />
			<role name="Request()" element="org.apache.xerces.xpointer.XPointerHandler::isFragmentResolved():boolean" />
			<role name="Request()" element="org.apache.xerces.xpointer.XPointerHandler::isChildFragmentResolved():boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser" />
			<role name="State" element="org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="state" element="org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser::fXSSimpleType:org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Request()" element="org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser::traverseSimpleContent(org.w3c.dom.Element, org.apache.xerces.impl.xs.traversers.XSDocumentInfo, org.apache.xerces.impl.xs.SchemaGrammar):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.DocumentBuilderImpl" />
			<role name="State" element="org.apache.xerces.xni.parser.XMLComponent" />
			<role name="state" element="org.apache.xerces.jaxp.DocumentBuilderImpl::fSchemaValidator:org.apache.xerces.xni.parser.XMLComponent" />
			<role name="Request()" element="org.apache.xerces.jaxp.DocumentBuilderImpl::resetSchemaValidator():void" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.xni.parser.XMLErrorHandler" />
			<role name="Context" element="org.apache.xerces.impl.XMLErrorReporter" />
			<role name="state" element="org.apache.xerces.impl.XMLErrorReporter::fErrorHandler:org.apache.xerces.xni.parser.XMLErrorHandler" />
			<role name="state" element="org.apache.xerces.impl.XMLErrorReporter::fDefaultErrorHandler:org.apache.xerces.xni.parser.XMLErrorHandler" />
			<role name="Request()" element="org.apache.xerces.impl.XMLErrorReporter::reportError(org.apache.xerces.xni.XMLLocator, java.lang.String, java.lang.String, java.lang.Object[], short, java.lang.Exception):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl" />
			<role name="State" element="org.apache.xerces.impl.dv.ValidationContext" />
			<role name="state" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::fEmptyContext:org.apache.xerces.impl.dv.ValidationContext" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::validate(java.lang.String, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::validateWithInfo(java.lang.String, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):org.apache.xerces.impl.dv.ValidatedInfo" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::validate(java.lang.Object, org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::validate(org.apache.xerces.impl.dv.ValidationContext, org.apache.xerces.impl.dv.ValidatedInfo):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.identity.Selector$Matcher" />
			<role name="State" element="org.apache.xerces.impl.xs.identity.FieldActivator" />
			<role name="state" element="org.apache.xerces.impl.xs.identity.Selector$Matcher::fFieldActivator:org.apache.xerces.impl.xs.identity.FieldActivator" />
			<role name="Request()" element="org.apache.xerces.impl.xs.identity.Selector$Matcher::startElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.identity.Selector$Matcher::endElement(org.apache.xerces.xni.QName, org.apache.xerces.xs.XSTypeDefinition, boolean, java.lang.Object, short, org.apache.xerces.xs.ShortList):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.util.AugmentationsImpl" />
			<role name="State" element="org.apache.xerces.util.AugmentationsImpl$AugmentationsItemsContainer" />
			<role name="state" element="org.apache.xerces.util.AugmentationsImpl::fAugmentationsContainer:org.apache.xerces.util.AugmentationsImpl$AugmentationsItemsContainer" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::putItem(java.lang.String, java.lang.Object):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::getItem(java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::removeItem(java.lang.String):java.lang.Object" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::keys():java.util.Enumeration" />
			<role name="Request()" element="org.apache.xerces.util.AugmentationsImpl::removeAllItems():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="State" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaLoader::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::loadGrammar(org.apache.xerces.xni.parser.XMLInputSource):org.apache.xerces.xni.grammars.Grammar" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::initGrammarBucket():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDProcessor" />
			<role name="State" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDProcessor::endDTD(org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="State" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::startDocument(org.apache.xerces.xni.XMLLocator, java.lang.String, org.apache.xerces.xni.NamespaceContext, org.apache.xerces.xni.Augmentations):void" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::doctypeDecl(java.lang.String, java.lang.String, java.lang.String, org.apache.xerces.xni.Augmentations):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="State" element="org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fGrammarPool:org.apache.xerces.xni.grammars.XMLGrammarPool" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::handleEndElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.Augmentations):org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::findSchemaGrammar(short, java.lang.String, org.apache.xerces.xni.QName, org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes):org.apache.xerces.impl.xs.SchemaGrammar" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="State" element="org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fQNameDV:org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::getAndCheckXsiType(org.apache.xerces.xni.QName, java.lang.String, org.apache.xerces.xni.XMLAttributes):org.apache.xerces.xs.XSTypeDefinition" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="State" element="org.apache.xerces.impl.xs.models.XSCMValidator" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fCurrentCM:org.apache.xerces.impl.xs.models.XSCMValidator" />
			<role name="state" element="org.apache.xerces.impl.xs.XMLSchemaValidator::fCMStack:org.apache.xerces.impl.xs.models.XSCMValidator[]" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::handleStartElement(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations):org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::elementLocallyValidComplexType(org.apache.xerces.xni.QName, java.lang.Object):java.lang.Object" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI" />
			<role name="State" element="org.apache.xerces.xni.Augmentations" />
			<role name="state" element="org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI::fAugmentations:org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI::aug():org.apache.xerces.xni.Augmentations" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider" />
			<role name="State" element="org.apache.xerces.xni.Augmentations" />
			<role name="state" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::fElementAugs:org.apache.xerces.xni.Augmentations" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::getElementTypeInfo():org.w3c.dom.TypeInfo" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl$XMLSchemaTypeInfoProvider::getElementPSVI():org.apache.xerces.xs.ElementPSVI" />
		</instance>
		<instance>
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="Context" element="org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager" />
			<role name="state" element="org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager::reset():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.io.MalformedByteSequenceException" />
			<role name="State" element="org.apache.xerces.util.MessageFormatter" />
			<role name="state" element="org.apache.xerces.impl.io.MalformedByteSequenceException::fFormatter:org.apache.xerces.util.MessageFormatter" />
			<role name="Request()" element="org.apache.xerces.impl.io.MalformedByteSequenceException::getMessage():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.io.UTF16Reader" />
			<role name="State" element="org.apache.xerces.util.MessageFormatter" />
			<role name="state" element="org.apache.xerces.impl.io.UTF16Reader::fFormatter:org.apache.xerces.util.MessageFormatter" />
			<role name="Request()" element="org.apache.xerces.impl.io.UTF16Reader::mark(int):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.io.UTF8Reader" />
			<role name="State" element="org.apache.xerces.util.MessageFormatter" />
			<role name="state" element="org.apache.xerces.impl.io.UTF8Reader::fFormatter:org.apache.xerces.util.MessageFormatter" />
			<role name="Request()" element="org.apache.xerces.impl.io.UTF8Reader::mark(int):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl" />
			<role name="State" element="org.apache.xerces.xs.ShortList" />
			<role name="state" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::fEnumerationItemType:org.apache.xerces.xs.ShortList[]" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl::checkFacets(org.apache.xerces.impl.dv.ValidatedInfo):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dv.ValidatedInfo" />
			<role name="State" element="org.apache.xerces.xs.ShortList" />
			<role name="state" element="org.apache.xerces.impl.dv.ValidatedInfo::itemValueTypes:org.apache.xerces.xs.ShortList" />
			<role name="Request()" element="org.apache.xerces.impl.dv.ValidatedInfo::isComparable(org.apache.xerces.impl.dv.ValidatedInfo, org.apache.xerces.impl.dv.ValidatedInfo):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$XSFacetImpl" />
			<role name="State" element="org.apache.xerces.xs.XSObjectList" />
			<role name="state" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$XSFacetImpl::annotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$XSFacetImpl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper" />
			<role name="State" element="org.apache.xml.serialize.SerializerFactory" />
			<role name="state" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper::fSerializerFactory:org.apache.xml.serialize.SerializerFactory" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.StreamValidatorHelper::validate(javax.xml.transform.Source, javax.xml.transform.Result):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.XMLEntityManager$ScannedEntity" />
			<role name="State" element="org.apache.xerces.xni.XMLResourceIdentifier" />
			<role name="state" element="org.apache.xerces.impl.XMLEntityManager$ScannedEntity::entityLocation:org.apache.xerces.xni.XMLResourceIdentifier" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager$ScannedEntity::getExpandedSystemId():java.lang.String" />
			<role name="Request()" element="org.apache.xerces.impl.XMLEntityManager$ScannedEntity::getLiteralSystemId():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="State" element="org.apache.xerces.impl.dv.DTDDVFactory" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fDatatypeValidatorFactory:org.apache.xerces.impl.dv.DTDDVFactory" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::init():void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::fNSContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl::getURI(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.validation.ValidationState" />
			<role name="State" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="state" element="org.apache.xerces.impl.validation.ValidationState::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Request()" element="org.apache.xerces.impl.validation.ValidationState::getURI(java.lang.String):java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.validation.ValidationState" />
			<role name="State" element="org.apache.xerces.impl.validation.EntityState" />
			<role name="state" element="org.apache.xerces.impl.validation.ValidationState::fEntityState:org.apache.xerces.impl.validation.EntityState" />
			<role name="Request()" element="org.apache.xerces.impl.validation.ValidationState::isEntityDeclared(java.lang.String):boolean" />
			<role name="Request()" element="org.apache.xerces.impl.validation.ValidationState::isEntityUnparsed(java.lang.String):boolean" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.identity.Field$Matcher" />
			<role name="State" element="org.apache.xerces.impl.xs.identity.ValueStore" />
			<role name="state" element="org.apache.xerces.impl.xs.identity.Field$Matcher::fStore:org.apache.xerces.impl.xs.identity.ValueStore" />
			<role name="Request()" element="org.apache.xerces.impl.xs.identity.Field$Matcher::matched(java.lang.Object, short, org.apache.xerces.xs.ShortList, boolean):void" />
			<role name="Request()" element="org.apache.xerces.impl.xs.identity.Field$Matcher::handleContent(org.apache.xerces.xs.XSTypeDefinition, boolean, java.lang.Object, short, org.apache.xerces.xs.ShortList):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.dom.PSVIAttrNSImpl" />
			<role name="State" element="org.apache.xerces.xs.XSAttributeDeclaration" />
			<role name="state" element="org.apache.xerces.dom.PSVIAttrNSImpl::fDeclaration:org.apache.xerces.xs.XSAttributeDeclaration" />
			<role name="Request()" element="org.apache.xerces.dom.PSVIAttrNSImpl::getSchemaDefault():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.AttributePSVImpl" />
			<role name="State" element="org.apache.xerces.xs.XSAttributeDeclaration" />
			<role name="state" element="org.apache.xerces.impl.xs.AttributePSVImpl::fDeclaration:org.apache.xerces.xs.XSAttributeDeclaration" />
			<role name="Request()" element="org.apache.xerces.impl.xs.AttributePSVImpl::getSchemaDefault():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.dom.PSVIElementNSImpl" />
			<role name="State" element="org.apache.xerces.xs.XSElementDeclaration" />
			<role name="state" element="org.apache.xerces.dom.PSVIElementNSImpl::fDeclaration:org.apache.xerces.xs.XSElementDeclaration" />
			<role name="Request()" element="org.apache.xerces.dom.PSVIElementNSImpl::getSchemaDefault():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.ElementPSVImpl" />
			<role name="State" element="org.apache.xerces.xs.XSElementDeclaration" />
			<role name="state" element="org.apache.xerces.impl.xs.ElementPSVImpl::fDeclaration:org.apache.xerces.xs.XSElementDeclaration" />
			<role name="Request()" element="org.apache.xerces.impl.xs.ElementPSVImpl::getSchemaDefault():java.lang.String" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.util.XSNamedMapImpl" />
			<role name="State" element="org.apache.xerces.xs.XSObject" />
			<role name="state" element="org.apache.xerces.impl.xs.util.XSNamedMapImpl::fArray:org.apache.xerces.xs.XSObject[]" />
			<role name="Request()" element="org.apache.xerces.impl.xs.util.XSNamedMapImpl::itemByName(java.lang.String, java.lang.String):org.apache.xerces.xs.XSObject" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XSAttributeGroupDecl" />
			<role name="State" element="org.apache.xerces.xs.XSObjectList" />
			<role name="state" element="org.apache.xerces.impl.xs.XSAttributeGroupDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSAttributeGroupDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XSModelGroupImpl" />
			<role name="State" element="org.apache.xerces.xs.XSObjectList" />
			<role name="state" element="org.apache.xerces.impl.xs.XSModelGroupImpl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSModelGroupImpl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Context" element="dom.Counter" />
			<role name="State" element="dom.ParserWrapper$DocumentInfo" />
			<role name="state" element="dom.Counter::fDocumentInfo:dom.ParserWrapper$DocumentInfo" />
			<role name="Request()" element="dom.Counter::count(org.w3c.dom.Node):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.dtd.XMLDTDValidator" />
			<role name="State" element="org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValENTITIES:org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValENTITY:org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValID:org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValIDRefs:org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValIDRef:org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValNMTOKENS:org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="state" element="org.apache.xerces.impl.dtd.XMLDTDValidator::fValNMTOKEN:org.apache.xerces.impl.dv.DatatypeValidator" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDValidator::validateDTDattribute(org.apache.xerces.xni.QName, java.lang.String, org.apache.xerces.impl.dtd.XMLAttributeDecl):void" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XSAttributeDecl" />
			<role name="State" element="org.apache.xerces.xs.XSObjectList" />
			<role name="state" element="org.apache.xerces.impl.xs.XSAttributeDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSAttributeDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XSComplexTypeDecl" />
			<role name="State" element="org.apache.xerces.impl.xs.models.XSCMValidator" />
			<role name="state" element="org.apache.xerces.impl.xs.XSComplexTypeDecl::fCMValidator:org.apache.xerces.impl.xs.models.XSCMValidator" />
			<role name="state" element="org.apache.xerces.impl.xs.XSComplexTypeDecl::fUPACMValidator:org.apache.xerces.impl.xs.models.XSCMValidator" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSComplexTypeDecl::getContentModel(org.apache.xerces.impl.xs.models.CMBuilder, boolean):org.apache.xerces.impl.xs.models.XSCMValidator" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XSElementDecl" />
			<role name="State" element="org.apache.xerces.xs.XSObjectList" />
			<role name="state" element="org.apache.xerces.impl.xs.XSElementDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSElementDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XSGroupDecl" />
			<role name="State" element="org.apache.xerces.xs.XSObjectList" />
			<role name="state" element="org.apache.xerces.impl.xs.XSGroupDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSGroupDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XSNotationDecl" />
			<role name="State" element="org.apache.xerces.xs.XSObjectList" />
			<role name="state" element="org.apache.xerces.impl.xs.XSNotationDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSNotationDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
		<instance>
			<role name="Context" element="org.apache.xerces.impl.xs.XSWildcardDecl" />
			<role name="State" element="org.apache.xerces.xs.XSObjectList" />
			<role name="state" element="org.apache.xerces.impl.xs.XSWildcardDecl::fAnnotations:org.apache.xerces.xs.XSObjectList" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XSWildcardDecl::getAnnotation():org.apache.xerces.xs.XSAnnotation" />
		</instance>
	</pattern>
	<pattern name="Strategy" />
	<pattern name="Bridge">
		<instance>
			<role name="Implementor" element="org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Abstraction" element="org.apache.xerces.parsers.BasicParserConfiguration" />
			<role name="implementor" element="org.apache.xerces.parsers.BasicParserConfiguration::fLastComponent:org.apache.xerces.xni.parser.XMLDocumentSource" />
			<role name="Operation()" element="org.apache.xerces.parsers.BasicParserConfiguration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.xerces.parsers.BasicParserConfiguration" />
			<role name="Implementor" element="org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="implementor" element="org.apache.xerces.parsers.BasicParserConfiguration::fDocumentHandler:org.apache.xerces.xni.XMLDocumentHandler" />
			<role name="Operation()" element="org.apache.xerces.parsers.BasicParserConfiguration::setDocumentHandler(org.apache.xerces.xni.XMLDocumentHandler):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.xerces.parsers.XMLParser" />
			<role name="Implementor" element="org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="implementor" element="org.apache.xerces.parsers.XMLParser::fConfiguration:org.apache.xerces.xni.parser.XMLParserConfiguration" />
			<role name="Operation()" element="org.apache.xerces.parsers.XMLParser::parse(org.apache.xerces.xni.parser.XMLInputSource):void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.xerces.parsers.AbstractSAXParser" />
			<role name="Implementor" element="org.apache.xerces.xni.NamespaceContext" />
			<role name="implementor" element="org.apache.xerces.parsers.AbstractSAXParser::fNamespaceContext:org.apache.xerces.xni.NamespaceContext" />
			<role name="Operation()" element="org.apache.xerces.parsers.AbstractSAXParser::startNamespaceMapping():void" />
			<role name="Operation()" element="org.apache.xerces.parsers.AbstractSAXParser::endNamespaceMapping():void" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser" />
			<role name="Implementor" element="org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="implementor" element="org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser::fQNameDV:org.apache.xerces.impl.dv.XSSimpleType" />
			<role name="Operation()" element="org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser::traverseFacets(org.w3c.dom.Element, org.apache.xerces.impl.dv.XSSimpleType, org.apache.xerces.impl.xs.traversers.XSDocumentInfo):org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo" />
		</instance>
		<instance>
			<role name="Abstraction" element="org.apache.xerces.parsers.AbstractSAXParser" />
			<role name="Implementor" element="org.apache.xerces.xni.Augmentations" />
			<role name="implementor" element="org.apache.xerces.parsers.AbstractSAXParser::fAugmentations:org.apache.xerces.xni.Augmentations" />
			<role name="Operation()" element="org.apache.xerces.parsers.AbstractSAXParser::getElementPSVI():org.apache.xerces.xs.ElementPSVI" />
		</instance>
	</pattern>
	<pattern name="Template Method">
		<instance>
			<role name="AbstractClass" element="org.apache.xerces.dom.NodeImpl" />
			<role name="TemplateMethod()" element="org.apache.xerces.dom.NodeImpl::compareTreePosition(org.w3c.dom.Node):short" />
			<role name="TemplateMethod()" element="org.apache.xerces.dom.NodeImpl::compareDocumentPosition(org.w3c.dom.Node):short" />
			<role name="TemplateMethod()" element="org.apache.xerces.dom.NodeImpl::isDefaultNamespace(java.lang.String):boolean" />
			<role name="TemplateMethod()" element="org.apache.xerces.dom.NodeImpl::lookupPrefix(java.lang.String):java.lang.String" />
			<role name="TemplateMethod()" element="org.apache.xerces.dom.NodeImpl::lookupNamespaceURI(java.lang.String):java.lang.String" />
			<role name="TemplateMethod()" element="org.apache.xerces.dom.NodeImpl::isEqualNode(org.w3c.dom.Node):boolean" />
			<role name="TemplateMethod()" element="org.apache.xerces.dom.NodeImpl::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.xerces.impl.dtd.models.CMNode" />
			<role name="TemplateMethod()" element="org.apache.xerces.impl.dtd.models.CMNode::firstPos():org.apache.xerces.impl.dtd.models.CMStateSet" />
			<role name="TemplateMethod()" element="org.apache.xerces.impl.dtd.models.CMNode::lastPos():org.apache.xerces.impl.dtd.models.CMStateSet" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$AbstractObjectList" />
			<role name="TemplateMethod()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$AbstractObjectList::get(int):java.lang.Object" />
			<role name="TemplateMethod()" element="org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$AbstractObjectList::size():int" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.xerces.stax.events.XMLEventImpl" />
			<role name="TemplateMethod()" element="org.apache.xerces.stax.events.XMLEventImpl::toString():java.lang.String" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.xerces.util.ErrorHandlerProxy" />
			<role name="TemplateMethod()" element="org.apache.xerces.util.ErrorHandlerProxy::error(org.xml.sax.SAXParseException):void" />
			<role name="TemplateMethod()" element="org.apache.xerces.util.ErrorHandlerProxy::fatalError(org.xml.sax.SAXParseException):void" />
			<role name="TemplateMethod()" element="org.apache.xerces.util.ErrorHandlerProxy::warning(org.xml.sax.SAXParseException):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.xml.serialize.BaseMarkupSerializer" />
			<role name="TemplateMethod()" element="org.apache.xml.serialize.BaseMarkupSerializer::serializeNode(org.w3c.dom.Node):void" />
			<role name="TemplateMethod()" element="org.apache.xml.serialize.BaseMarkupSerializer::printEscaped(int):void" />
		</instance>
		<instance>
			<role name="AbstractClass" element="org.apache.xml.serialize.SerializerFactory" />
			<role name="TemplateMethod()" element="org.apache.xml.serialize.SerializerFactory::&lt;clinit&gt;():void" />
			<role name="TemplateMethod()" element="org.apache.xml.serialize.SerializerFactory::registerSerializerFactory(org.apache.xml.serialize.SerializerFactory):void" />
		</instance>
	</pattern>
	<pattern name="Visitor" />
	<pattern name="Proxy">
		<instance>
			<role name="RealSubject" element="org.apache.xerces.impl.XMLErrorReporter" />
			<role name="Proxy" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::setFeature(java.lang.String, boolean):void" />
		</instance>
		<instance>
			<role name="RealSubject" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="Proxy" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaLoader::setProperty(java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="RealSubject" element="org.apache.xerces.impl.XMLEntityManager" />
			<role name="Proxy" element="org.apache.xerces.impl.dtd.XMLDTDLoader" />
			<role name="Request()" element="org.apache.xerces.impl.dtd.XMLDTDLoader::setProperty(java.lang.String, java.lang.Object):void" />
		</instance>
		<instance>
			<role name="RealSubject" element="org.apache.xerces.impl.xs.XMLSchemaLoader" />
			<role name="Proxy" element="org.apache.xerces.impl.xs.XMLSchemaValidator" />
			<role name="Request()" element="org.apache.xerces.impl.xs.XMLSchemaValidator::reset(org.apache.xerces.xni.parser.XMLComponentManager):void" />
		</instance>
		<instance>
			<role name="Proxy" element="org.apache.xerces.jaxp.validation.ValidatorImpl" />
			<role name="RealSubject" element="org.apache.xerces.jaxp.validation.ValidatorHandlerImpl" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorImpl::getElementPSVI():org.apache.xerces.xs.ElementPSVI" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorImpl::getAttributePSVI(int):org.apache.xerces.xs.AttributePSVI" />
			<role name="Request()" element="org.apache.xerces.jaxp.validation.ValidatorImpl::getAttributePSVIByName(java.lang.String, java.lang.String):org.apache.xerces.xs.AttributePSVI" />
		</instance>
		<instance>
			<role name="Proxy" element="org.apache.xerces.xpointer.ElementSchemePointer" />
			<role name="RealSubject" element="org.apache.xerces.xpointer.ShortHandPointer" />
			<role name="Request()" element="org.apache.xerces.xpointer.ElementSchemePointer::resolveXPointer(org.apache.xerces.xni.QName, org.apache.xerces.xni.XMLAttributes, org.apache.xerces.xni.Augmentations, int):boolean" />
			<role name="Request()" element="org.apache.xerces.xpointer.ElementSchemePointer::isChildFragmentResolved():boolean" />
		</instance>
	</pattern>
	<pattern name="Proxy2" />
	<pattern name="Chain of Responsibility">
		<instance>
			<role name="Handler" element="org.apache.xerces.dom.ChildNode" />
			<role name="successor" element="org.apache.xerces.dom.ChildNode::previousSibling:org.apache.xerces.dom.ChildNode" />
			<role name="successor" element="org.apache.xerces.dom.ChildNode::nextSibling:org.apache.xerces.dom.ChildNode" />
		</instance>
		<instance>
			<role name="Handler" element="org.apache.xerces.dom.NodeImpl" />
			<role name="successor" element="org.apache.xerces.dom.NodeImpl::ownerNode:org.apache.xerces.dom.NodeImpl" />
		</instance>
	</pattern>
</system>

